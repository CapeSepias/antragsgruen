{"version":3,"sources":["bootstrap-datetimepicker.js"],"names":["factory","define","amd","exports","module","require","jQuery","moment","$","Error","dateTimePicker","element","options","date","viewDate","input","use24Hours","actualFormat","parseFormats","currentViewMode","eData","dataOptions","picker","unset","component","widget","minViewModeNumber","datePickerModes","clsName","navFnc","navStep","viewModes","verticalModes","horizontalModes","toolbarPlacements","keyMap","up","38","down","40","left","37","right","39","tab","9","escape","27","enter","13","pageUp","33","pageDown","34","shift","16","control","17","space","32","t","84","delete","46","keyState","hasTimeZone","undefined","tz","timeZone","getMoment","d","returnMoment","isDate","isMoment","useStrict","isEnabled","granularity","length","TypeError","indexOf","toLowerCase","hasTime","hasDate","getTimePickerTemplate","hoursView","addClass","append","minutesView","secondsView","ret","topRow","middleRow","bottomRow","attr","href","tabindex","title","tooltips","incrementHour","icons","data-time-component","pickHour","decrementHour","html","incrementMinute","pickMinute","decrementMinute","incrementSecond","pickSecond","decrementSecond","data-action","togglePeriod","getTimePickerMainTemplate","push","getTemplate","template","dateView","headTemplate","previous","calendarWeeks","next","contTemplate","clone","getDatePickerTemplate","timeView","content","toolbar","collapse","row","showTodayButton","today","sideBySide","selectTime","time","showClear","clear","showClose","close","getToolbar","inline","removeClass","toolbarPlacement","place","parent","position","offset","vertical","widgetPositioning","horizontal","widgetParent","is","after","children","first","top","height","window","scrollTop","outerHeight","width","outerWidth","css","parents","filter","this","bottom","notifyEvent","e","type","isSame","oldDate","trigger","viewUpdate","change","showMode","dir","Math","max","min","find","hide","show","isValid","targetMoment","disabledDates","testDate","format","isInDisabledDates","enabledDates","isInEnabledDates","minDate","isBefore","maxDate","isAfter","daysOfWeekDisabled","day","disabledHours","isInDisabledHours","enabledHours","isInEnabledHours","disabledTimeIntervals","found","each","isBetween","fillDate","currentDate","i","daysView","daysViewHeader","clsNames","eq","prevMonth","selectMonth","nextMonth","text","dayViewHeaderFormat","subtract","add","startOf","weekday","week","classNames","join","empty","monthsView","monthsViewHeader","months","prevYear","selectYear","nextYear","year","month","index","updateMonths","yearsView","yearsViewHeader","startYear","endYear","prevDecade","selectDecade","nextDecade","updateYears","endDecadeYear","decadesView","decadesViewHeader","startDecade","y","endDecade","startedAt","minDateDecade","maxDateDecade","prevCentury","nextCentury","updateDecades","fillTime","toggle","newDate","timeComponents","hours","table","currentHour","hour","fillHours","currentMinute","step","stepping","minute","fillMinutes","currentSecond","second","fillSeconds","update","setValue","val","data","locale","minutes","round","seconds","keepInvalid","transitioning","collapseData","hasClass","toggleClass","off","remove","parseInputDate","inputDate","Date","actions","pickerSwitch","target","closest","parseInt","selectDay","keepOpen","incrementHours","incrementMinutes","incrementSeconds","decrementHours","decrementMinutes","decrementSeconds","togglePicker","$this","$parent","expanded","closed","showPicker","showHours","showMinutes","showSeconds","selectHour","call","selectMinute","selectSecond","todaysDate","doAction","currentTarget","apply","arguments","currentMoment","prop","ignoreReadonly","trim","useCurrent","m","endOf","fillDow","spans","monthsShort","fillMonths","on","focusOnShow","focus","keydown","index2","keyBindKeys","allModifiersPressed","handler","pressedKeys","pressedModifiers","currentKey","which","hasOwnProperty","keyBinds","split","stopPropagation","preventDefault","keyup","parsedDate","stopImmediatePropagation","indexGivenDates","givenDatesArray","givenDatesIndexed","dDate","Object","keys","indexGivenHours","givenHoursArray","givenHoursIndexed","initFormatting","replace","formatInput","localeData","longDateFormat","formatInput2","extraFormats","slice","destroy","blur","allowInputToggle","removeData","disable","enable","newOptions","extend","key","value","newFormat","newZone","formats","Array","dates","splice","reduce","previousValue","currentValue","isNaN","sort","tries","defaultDate","useCurrentOptions","viewMode","toString","debug","datepickerInput","dateOptions","attributeName","charAt","toUpperCase","fn","datetimepicker","returnValue","args","prototype","isInstance","_options","defaults","instance","inArray","control up","control down","control space","click"],"mappings":"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","file":"bootstrap-datetimepicker.min.js","sourcesContent":["/*! version : 4.17.47\n =========================================================\n bootstrap-datetimejs\n https://github.com/Eonasdan/bootstrap-datetimepicker\n Copyright (c) 2015 Jonathan Peterson\n =========================================================\n */\n/*\n The MIT License (MIT)\n\n Copyright (c) 2015 Jonathan Peterson\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n */\n/*global define:false */\n/*global exports:false */\n/*global require:false */\n/*global jQuery:false */\n/*global moment:false */\n(function (factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        // AMD is used - Register as an anonymous module.\n        define(['jquery', 'moment'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('jquery'), require('moment'));\n    } else {\n        // Neither AMD nor CommonJS used. Use global variables.\n        if (typeof jQuery === 'undefined') {\n            throw 'bootstrap-datetimepicker requires jQuery to be loaded first';\n        }\n        if (typeof moment === 'undefined') {\n            throw 'bootstrap-datetimepicker requires Moment.js to be loaded first';\n        }\n        factory(jQuery, moment);\n    }\n}(function ($, moment) {\n    'use strict';\n    if (!moment) {\n        throw new Error('bootstrap-datetimepicker requires Moment.js to be loaded first');\n    }\n\n    var dateTimePicker = function (element, options) {\n        var picker = {},\n            date,\n            viewDate,\n            unset = true,\n            input,\n            component = false,\n            widget = false,\n            use24Hours,\n            minViewModeNumber = 0,\n            actualFormat,\n            parseFormats,\n            currentViewMode,\n            datePickerModes = [\n                {\n                    clsName: 'days',\n                    navFnc: 'M',\n                    navStep: 1\n                },\n                {\n                    clsName: 'months',\n                    navFnc: 'y',\n                    navStep: 1\n                },\n                {\n                    clsName: 'years',\n                    navFnc: 'y',\n                    navStep: 10\n                },\n                {\n                    clsName: 'decades',\n                    navFnc: 'y',\n                    navStep: 100\n                }\n            ],\n            viewModes = ['days', 'months', 'years', 'decades'],\n            verticalModes = ['top', 'bottom', 'auto'],\n            horizontalModes = ['left', 'right', 'auto'],\n            toolbarPlacements = ['default', 'top', 'bottom'],\n            keyMap = {\n                'up': 38,\n                38: 'up',\n                'down': 40,\n                40: 'down',\n                'left': 37,\n                37: 'left',\n                'right': 39,\n                39: 'right',\n                'tab': 9,\n                9: 'tab',\n                'escape': 27,\n                27: 'escape',\n                'enter': 13,\n                13: 'enter',\n                'pageUp': 33,\n                33: 'pageUp',\n                'pageDown': 34,\n                34: 'pageDown',\n                'shift': 16,\n                16: 'shift',\n                'control': 17,\n                17: 'control',\n                'space': 32,\n                32: 'space',\n                't': 84,\n                84: 't',\n                'delete': 46,\n                46: 'delete'\n            },\n            keyState = {},\n\n            /********************************************************************************\n             *\n             * Private functions\n             *\n             ********************************************************************************/\n\n            hasTimeZone = function () {\n                return moment.tz !== undefined && options.timeZone !== undefined && options.timeZone !== null && options.timeZone !== '';\n            },\n\n            getMoment = function (d) {\n                var returnMoment;\n\n                if (d === undefined || d === null) {\n                    returnMoment = moment(); //TODO should this use format? and locale?\n                } else if (moment.isDate(d) || moment.isMoment(d)) {\n                    // If the date that is passed in is already a Date() or moment() object,\n                    // pass it directly to moment.\n                    returnMoment = moment(d);\n                } else if (hasTimeZone()) { // There is a string to parse and a default time zone\n                    // parse with the tz function which takes a default time zone if it is not in the format string\n                    returnMoment = moment.tz(d, parseFormats, options.useStrict, options.timeZone);\n                } else {\n                    returnMoment = moment(d, parseFormats, options.useStrict);\n                }\n\n                if (hasTimeZone()) {\n                    returnMoment.tz(options.timeZone);\n                }\n\n                return returnMoment;\n            },\n\n            isEnabled = function (granularity) {\n                if (typeof granularity !== 'string' || granularity.length > 1) {\n                    throw new TypeError('isEnabled expects a single character string parameter');\n                }\n                switch (granularity) {\n                    case 'y':\n                        return actualFormat.indexOf('Y') !== -1;\n                    case 'M':\n                        return actualFormat.indexOf('M') !== -1;\n                    case 'd':\n                        return actualFormat.toLowerCase().indexOf('d') !== -1;\n                    case 'h':\n                    case 'H':\n                        return actualFormat.toLowerCase().indexOf('h') !== -1;\n                    case 'm':\n                        return actualFormat.indexOf('m') !== -1;\n                    case 's':\n                        return actualFormat.indexOf('s') !== -1;\n                    default:\n                        return false;\n                }\n            },\n\n            hasTime = function () {\n                return (isEnabled('h') || isEnabled('m') || isEnabled('s'));\n            },\n\n            hasDate = function () {\n                return (isEnabled('y') || isEnabled('M') || isEnabled('d'));\n            },\n\n            getDatePickerTemplate = function () {\n                var headTemplate = $('<thead>')\n                        .append($('<tr>')\n                            .append($('<th>').addClass('prev').attr('data-action', 'previous')\n                                .append($('<span>').addClass(options.icons.previous))\n                                )\n                            .append($('<th>').addClass('picker-switch').attr('data-action', 'pickerSwitch').attr('colspan', (options.calendarWeeks ? '6' : '5')))\n                            .append($('<th>').addClass('next').attr('data-action', 'next')\n                                .append($('<span>').addClass(options.icons.next))\n                                )\n                            ),\n                    contTemplate = $('<tbody>')\n                        .append($('<tr>')\n                            .append($('<td>').attr('colspan', (options.calendarWeeks ? '8' : '7')))\n                            );\n\n                return [\n                    $('<div>').addClass('datepicker-days')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate)\n                            .append($('<tbody>'))\n                            ),\n                    $('<div>').addClass('datepicker-months')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate.clone())\n                            .append(contTemplate.clone())\n                            ),\n                    $('<div>').addClass('datepicker-years')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate.clone())\n                            .append(contTemplate.clone())\n                            ),\n                    $('<div>').addClass('datepicker-decades')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate.clone())\n                            .append(contTemplate.clone())\n                            )\n                ];\n            },\n\n            getTimePickerMainTemplate = function () {\n                var topRow = $('<tr>'),\n                    middleRow = $('<tr>'),\n                    bottomRow = $('<tr>');\n\n                if (isEnabled('h')) {\n                    topRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementHour }).addClass('btn').attr('data-action', 'incrementHours').append($('<span>').addClass(options.icons.up))));\n                    middleRow.append($('<td>')\n                        .append($('<span>').addClass('timepicker-hour').attr({ 'data-time-component': 'hours', 'title': options.tooltips.pickHour }).attr('data-action', 'showHours')));\n                    bottomRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementHour }).addClass('btn').attr('data-action', 'decrementHours').append($('<span>').addClass(options.icons.down))));\n                }\n                if (isEnabled('m')) {\n                    if (isEnabled('h')) {\n                        topRow.append($('<td>').addClass('separator'));\n                        middleRow.append($('<td>').addClass('separator').html(':'));\n                        bottomRow.append($('<td>').addClass('separator'));\n                    }\n                    topRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementMinute }).addClass('btn').attr('data-action', 'incrementMinutes')\n                            .append($('<span>').addClass(options.icons.up))));\n                    middleRow.append($('<td>')\n                        .append($('<span>').addClass('timepicker-minute').attr({ 'data-time-component': 'minutes', 'title': options.tooltips.pickMinute }).attr('data-action', 'showMinutes')));\n                    bottomRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementMinute }).addClass('btn').attr('data-action', 'decrementMinutes')\n                            .append($('<span>').addClass(options.icons.down))));\n                }\n                if (isEnabled('s')) {\n                    if (isEnabled('m')) {\n                        topRow.append($('<td>').addClass('separator'));\n                        middleRow.append($('<td>').addClass('separator').html(':'));\n                        bottomRow.append($('<td>').addClass('separator'));\n                    }\n                    topRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementSecond }).addClass('btn').attr('data-action', 'incrementSeconds')\n                            .append($('<span>').addClass(options.icons.up))));\n                    middleRow.append($('<td>')\n                        .append($('<span>').addClass('timepicker-second').attr({ 'data-time-component': 'seconds', 'title': options.tooltips.pickSecond }).attr('data-action', 'showSeconds')));\n                    bottomRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementSecond }).addClass('btn').attr('data-action', 'decrementSeconds')\n                            .append($('<span>').addClass(options.icons.down))));\n                }\n\n                if (!use24Hours) {\n                    topRow.append($('<td>').addClass('separator'));\n                    middleRow.append($('<td>')\n                        .append($('<button>').addClass('btn btn-primary').attr({ 'data-action': 'togglePeriod', tabindex: '-1', 'title': options.tooltips.togglePeriod })));\n                    bottomRow.append($('<td>').addClass('separator'));\n                }\n\n                return $('<div>').addClass('timepicker-picker')\n                    .append($('<table>').addClass('table-condensed')\n                        .append([topRow, middleRow, bottomRow]));\n            },\n\n            getTimePickerTemplate = function () {\n                var hoursView = $('<div>').addClass('timepicker-hours')\n                        .append($('<table>').addClass('table-condensed')),\n                    minutesView = $('<div>').addClass('timepicker-minutes')\n                        .append($('<table>').addClass('table-condensed')),\n                    secondsView = $('<div>').addClass('timepicker-seconds')\n                        .append($('<table>').addClass('table-condensed')),\n                    ret = [getTimePickerMainTemplate()];\n\n                if (isEnabled('h')) {\n                    ret.push(hoursView);\n                }\n                if (isEnabled('m')) {\n                    ret.push(minutesView);\n                }\n                if (isEnabled('s')) {\n                    ret.push(secondsView);\n                }\n\n                return ret;\n            },\n\n            getToolbar = function () {\n                var row = [];\n                if (options.showTodayButton) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'today', 'title': options.tooltips.today }).append($('<span>').addClass(options.icons.today))));\n                }\n                if (!options.sideBySide && hasDate() && hasTime()) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'togglePicker', 'title': options.tooltips.selectTime }).append($('<span>').addClass(options.icons.time))));\n                }\n                if (options.showClear) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'clear', 'title': options.tooltips.clear }).append($('<span>').addClass(options.icons.clear))));\n                }\n                if (options.showClose) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'close', 'title': options.tooltips.close }).append($('<span>').addClass(options.icons.close))));\n                }\n                return $('<table>').addClass('table-condensed').append($('<tbody>').append($('<tr>').append(row)));\n            },\n\n            getTemplate = function () {\n                var template = $('<div>').addClass('bootstrap-datetimepicker-widget dropdown-menu'),\n                    dateView = $('<div>').addClass('datepicker').append(getDatePickerTemplate()),\n                    timeView = $('<div>').addClass('timepicker').append(getTimePickerTemplate()),\n                    content = $('<ul>').addClass('list-unstyled'),\n                    toolbar = $('<li>').addClass('picker-switch' + (options.collapse ? ' accordion-toggle' : '')).append(getToolbar());\n\n                if (options.inline) {\n                    template.removeClass('dropdown-menu');\n                }\n\n                if (use24Hours) {\n                    template.addClass('usetwentyfour');\n                }\n\n                if (isEnabled('s') && !use24Hours) {\n                    template.addClass('wider');\n                }\n\n                if (options.sideBySide && hasDate() && hasTime()) {\n                    template.addClass('timepicker-sbs');\n                    if (options.toolbarPlacement === 'top') {\n                        template.append(toolbar);\n                    }\n                    template.append(\n                        $('<div>').addClass('row')\n                            .append(dateView.addClass('col-md-6'))\n                            .append(timeView.addClass('col-md-6'))\n                    );\n                    if (options.toolbarPlacement === 'bottom') {\n                        template.append(toolbar);\n                    }\n                    return template;\n                }\n\n                if (options.toolbarPlacement === 'top') {\n                    content.append(toolbar);\n                }\n                if (hasDate()) {\n                    content.append($('<li>').addClass((options.collapse && hasTime() ? 'collapse in' : '')).append(dateView));\n                }\n                if (options.toolbarPlacement === 'default') {\n                    content.append(toolbar);\n                }\n                if (hasTime()) {\n                    content.append($('<li>').addClass((options.collapse && hasDate() ? 'collapse' : '')).append(timeView));\n                }\n                if (options.toolbarPlacement === 'bottom') {\n                    content.append(toolbar);\n                }\n                return template.append(content);\n            },\n\n            dataToOptions = function () {\n                var eData,\n                    dataOptions = {};\n\n                if (element.is('input') || options.inline) {\n                    eData = element.data();\n                } else {\n                    eData = element.find('input').data();\n                }\n\n                if (eData.dateOptions && eData.dateOptions instanceof Object) {\n                    dataOptions = $.extend(true, dataOptions, eData.dateOptions);\n                }\n\n                $.each(options, function (key) {\n                    var attributeName = 'date' + key.charAt(0).toUpperCase() + key.slice(1);\n                    if (eData[attributeName] !== undefined) {\n                        dataOptions[key] = eData[attributeName];\n                    }\n                });\n                return dataOptions;\n            },\n\n            place = function () {\n                var position = (component || element).position(),\n                    offset = (component || element).offset(),\n                    vertical = options.widgetPositioning.vertical,\n                    horizontal = options.widgetPositioning.horizontal,\n                    parent;\n\n                if (options.widgetParent) {\n                    parent = options.widgetParent.append(widget);\n                } else if (element.is('input')) {\n                    parent = element.after(widget).parent();\n                } else if (options.inline) {\n                    parent = element.append(widget);\n                    return;\n                } else {\n                    parent = element;\n                    element.children().first().after(widget);\n                }\n\n                // Top and bottom logic\n                if (vertical === 'auto') {\n                    if (offset.top + widget.height() * 1.5 >= $(window).height() + $(window).scrollTop() &&\n                        widget.height() + element.outerHeight() < offset.top) {\n                        vertical = 'top';\n                    } else {\n                        vertical = 'bottom';\n                    }\n                }\n\n                // Left and right logic\n                if (horizontal === 'auto') {\n                    if (parent.width() < offset.left + widget.outerWidth() / 2 &&\n                        offset.left + widget.outerWidth() > $(window).width()) {\n                        horizontal = 'right';\n                    } else {\n                        horizontal = 'left';\n                    }\n                }\n\n                if (vertical === 'top') {\n                    widget.addClass('top').removeClass('bottom');\n                } else {\n                    widget.addClass('bottom').removeClass('top');\n                }\n\n                if (horizontal === 'right') {\n                    widget.addClass('pull-right');\n                } else {\n                    widget.removeClass('pull-right');\n                }\n\n                // find the first parent element that has a non-static css positioning\n                if (parent.css('position') === 'static') {\n                    parent = parent.parents().filter(function () {\n                        return $(this).css('position') !== 'static';\n                    }).first();\n                }\n\n                if (parent.length === 0) {\n                    throw new Error('datetimepicker component should be placed within a non-static positioned container');\n                }\n\n                widget.css({\n                    top: vertical === 'top' ? 'auto' : position.top + element.outerHeight(),\n                    bottom: vertical === 'top' ? parent.outerHeight() - (parent === element ? 0 : position.top) : 'auto',\n                    left: horizontal === 'left' ? (parent === element ? 0 : position.left) : 'auto',\n                    right: horizontal === 'left' ? 'auto' : parent.outerWidth() - element.outerWidth() - (parent === element ? 0 : position.left)\n                });\n            },\n\n            notifyEvent = function (e) {\n                if (e.type === 'dp.change' && ((e.date && e.date.isSame(e.oldDate)) || (!e.date && !e.oldDate))) {\n                    return;\n                }\n                element.trigger(e);\n            },\n\n            viewUpdate = function (e) {\n                if (e === 'y') {\n                    e = 'YYYY';\n                }\n                notifyEvent({\n                    type: 'dp.update',\n                    change: e,\n                    viewDate: viewDate.clone()\n                });\n            },\n\n            showMode = function (dir) {\n                if (!widget) {\n                    return;\n                }\n                if (dir) {\n                    currentViewMode = Math.max(minViewModeNumber, Math.min(3, currentViewMode + dir));\n                }\n                widget.find('.datepicker > div').hide().filter('.datepicker-' + datePickerModes[currentViewMode].clsName).show();\n            },\n\n            fillDow = function () {\n                var row = $('<tr>'),\n                    currentDate = viewDate.clone().startOf('w').startOf('d');\n\n                if (options.calendarWeeks === true) {\n                    row.append($('<th>').addClass('cw').text('#'));\n                }\n\n                while (currentDate.isBefore(viewDate.clone().endOf('w'))) {\n                    row.append($('<th>').addClass('dow').text(currentDate.format('dd')));\n                    currentDate.add(1, 'd');\n                }\n                widget.find('.datepicker-days thead').append(row);\n            },\n\n            isInDisabledDates = function (testDate) {\n                return options.disabledDates[testDate.format('YYYY-MM-DD')] === true;\n            },\n\n            isInEnabledDates = function (testDate) {\n                return options.enabledDates[testDate.format('YYYY-MM-DD')] === true;\n            },\n\n            isInDisabledHours = function (testDate) {\n                return options.disabledHours[testDate.format('H')] === true;\n            },\n\n            isInEnabledHours = function (testDate) {\n                return options.enabledHours[testDate.format('H')] === true;\n            },\n\n            isValid = function (targetMoment, granularity) {\n                if (!targetMoment.isValid()) {\n                    return false;\n                }\n                if (options.disabledDates && granularity === 'd' && isInDisabledDates(targetMoment)) {\n                    return false;\n                }\n                if (options.enabledDates && granularity === 'd' && !isInEnabledDates(targetMoment)) {\n                    return false;\n                }\n                if (options.minDate && targetMoment.isBefore(options.minDate, granularity)) {\n                    return false;\n                }\n                if (options.maxDate && targetMoment.isAfter(options.maxDate, granularity)) {\n                    return false;\n                }\n                if (options.daysOfWeekDisabled && granularity === 'd' && options.daysOfWeekDisabled.indexOf(targetMoment.day()) !== -1) {\n                    return false;\n                }\n                if (options.disabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && isInDisabledHours(targetMoment)) {\n                    return false;\n                }\n                if (options.enabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && !isInEnabledHours(targetMoment)) {\n                    return false;\n                }\n                if (options.disabledTimeIntervals && (granularity === 'h' || granularity === 'm' || granularity === 's')) {\n                    var found = false;\n                    $.each(options.disabledTimeIntervals, function () {\n                        if (targetMoment.isBetween(this[0], this[1])) {\n                            found = true;\n                            return false;\n                        }\n                    });\n                    if (found) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n\n            fillMonths = function () {\n                var spans = [],\n                    monthsShort = viewDate.clone().startOf('y').startOf('d');\n                while (monthsShort.isSame(viewDate, 'y')) {\n                    spans.push($('<span>').attr('data-action', 'selectMonth').addClass('month').text(monthsShort.format('MMM')));\n                    monthsShort.add(1, 'M');\n                }\n                widget.find('.datepicker-months td').empty().append(spans);\n            },\n\n            updateMonths = function () {\n                var monthsView = widget.find('.datepicker-months'),\n                    monthsViewHeader = monthsView.find('th'),\n                    months = monthsView.find('tbody').find('span');\n\n                monthsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevYear);\n                monthsViewHeader.eq(1).attr('title', options.tooltips.selectYear);\n                monthsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextYear);\n\n                monthsView.find('.disabled').removeClass('disabled');\n\n                if (!isValid(viewDate.clone().subtract(1, 'y'), 'y')) {\n                    monthsViewHeader.eq(0).addClass('disabled');\n                }\n\n                monthsViewHeader.eq(1).text(viewDate.year());\n\n                if (!isValid(viewDate.clone().add(1, 'y'), 'y')) {\n                    monthsViewHeader.eq(2).addClass('disabled');\n                }\n\n                months.removeClass('active');\n                if (date.isSame(viewDate, 'y') && !unset) {\n                    months.eq(date.month()).addClass('active');\n                }\n\n                months.each(function (index) {\n                    if (!isValid(viewDate.clone().month(index), 'M')) {\n                        $(this).addClass('disabled');\n                    }\n                });\n            },\n\n            updateYears = function () {\n                var yearsView = widget.find('.datepicker-years'),\n                    yearsViewHeader = yearsView.find('th'),\n                    startYear = viewDate.clone().subtract(5, 'y'),\n                    endYear = viewDate.clone().add(6, 'y'),\n                    html = '';\n\n                yearsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevDecade);\n                yearsViewHeader.eq(1).attr('title', options.tooltips.selectDecade);\n                yearsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextDecade);\n\n                yearsView.find('.disabled').removeClass('disabled');\n\n                if (options.minDate && options.minDate.isAfter(startYear, 'y')) {\n                    yearsViewHeader.eq(0).addClass('disabled');\n                }\n\n                yearsViewHeader.eq(1).text(startYear.year() + '-' + endYear.year());\n\n                if (options.maxDate && options.maxDate.isBefore(endYear, 'y')) {\n                    yearsViewHeader.eq(2).addClass('disabled');\n                }\n\n                while (!startYear.isAfter(endYear, 'y')) {\n                    html += '<span data-action=\"selectYear\" class=\"year' + (startYear.isSame(date, 'y') && !unset ? ' active' : '') + (!isValid(startYear, 'y') ? ' disabled' : '') + '\">' + startYear.year() + '</span>';\n                    startYear.add(1, 'y');\n                }\n\n                yearsView.find('td').html(html);\n            },\n\n            updateDecades = function () {\n                var decadesView = widget.find('.datepicker-decades'),\n                    decadesViewHeader = decadesView.find('th'),\n                    startDecade = moment({ y: viewDate.year() - (viewDate.year() % 100) - 1 }),\n                    endDecade = startDecade.clone().add(100, 'y'),\n                    startedAt = startDecade.clone(),\n                    minDateDecade = false,\n                    maxDateDecade = false,\n                    endDecadeYear,\n                    html = '';\n\n                decadesViewHeader.eq(0).find('span').attr('title', options.tooltips.prevCentury);\n                decadesViewHeader.eq(2).find('span').attr('title', options.tooltips.nextCentury);\n\n                decadesView.find('.disabled').removeClass('disabled');\n\n                if (startDecade.isSame(moment({ y: 1900 })) || (options.minDate && options.minDate.isAfter(startDecade, 'y'))) {\n                    decadesViewHeader.eq(0).addClass('disabled');\n                }\n\n                decadesViewHeader.eq(1).text(startDecade.year() + '-' + endDecade.year());\n\n                if (startDecade.isSame(moment({ y: 2000 })) || (options.maxDate && options.maxDate.isBefore(endDecade, 'y'))) {\n                    decadesViewHeader.eq(2).addClass('disabled');\n                }\n\n                while (!startDecade.isAfter(endDecade, 'y')) {\n                    endDecadeYear = startDecade.year() + 12;\n                    minDateDecade = options.minDate && options.minDate.isAfter(startDecade, 'y') && options.minDate.year() <= endDecadeYear;\n                    maxDateDecade = options.maxDate && options.maxDate.isAfter(startDecade, 'y') && options.maxDate.year() <= endDecadeYear;\n                    html += '<span data-action=\"selectDecade\" class=\"decade' + (date.isAfter(startDecade) && date.year() <= endDecadeYear ? ' active' : '') +\n                        (!isValid(startDecade, 'y') && !minDateDecade && !maxDateDecade ? ' disabled' : '') + '\" data-selection=\"' + (startDecade.year() + 6) + '\">' + (startDecade.year() + 1) + ' - ' + (startDecade.year() + 12) + '</span>';\n                    startDecade.add(12, 'y');\n                }\n                html += '<span></span><span></span><span></span>'; //push the dangling block over, at least this way it's even\n\n                decadesView.find('td').html(html);\n                decadesViewHeader.eq(1).text((startedAt.year() + 1) + '-' + (startDecade.year()));\n            },\n\n            fillDate = function () {\n                var daysView = widget.find('.datepicker-days'),\n                    daysViewHeader = daysView.find('th'),\n                    currentDate,\n                    html = [],\n                    row,\n                    clsNames = [],\n                    i;\n\n                if (!hasDate()) {\n                    return;\n                }\n\n                daysViewHeader.eq(0).find('span').attr('title', options.tooltips.prevMonth);\n                daysViewHeader.eq(1).attr('title', options.tooltips.selectMonth);\n                daysViewHeader.eq(2).find('span').attr('title', options.tooltips.nextMonth);\n\n                daysView.find('.disabled').removeClass('disabled');\n                daysViewHeader.eq(1).text(viewDate.format(options.dayViewHeaderFormat));\n\n                if (!isValid(viewDate.clone().subtract(1, 'M'), 'M')) {\n                    daysViewHeader.eq(0).addClass('disabled');\n                }\n                if (!isValid(viewDate.clone().add(1, 'M'), 'M')) {\n                    daysViewHeader.eq(2).addClass('disabled');\n                }\n\n                currentDate = viewDate.clone().startOf('M').startOf('w').startOf('d');\n\n                for (i = 0; i < 42; i++) { //always display 42 days (should show 6 weeks)\n                    if (currentDate.weekday() === 0) {\n                        row = $('<tr>');\n                        if (options.calendarWeeks) {\n                            row.append('<td class=\"cw\">' + currentDate.week() + '</td>');\n                        }\n                        html.push(row);\n                    }\n                    clsNames = ['day'];\n                    if (currentDate.isBefore(viewDate, 'M')) {\n                        clsNames.push('old');\n                    }\n                    if (currentDate.isAfter(viewDate, 'M')) {\n                        clsNames.push('new');\n                    }\n                    if (currentDate.isSame(date, 'd') && !unset) {\n                        clsNames.push('active');\n                    }\n                    if (!isValid(currentDate, 'd')) {\n                        clsNames.push('disabled');\n                    }\n                    if (currentDate.isSame(getMoment(), 'd')) {\n                        clsNames.push('today');\n                    }\n                    if (currentDate.day() === 0 || currentDate.day() === 6) {\n                        clsNames.push('weekend');\n                    }\n                    notifyEvent({\n                        type: 'dp.classify',\n                        date: currentDate,\n                        classNames: clsNames\n                    });\n                    row.append('<td data-action=\"selectDay\" data-day=\"' + currentDate.format('L') + '\" class=\"' + clsNames.join(' ') + '\">' + currentDate.date() + '</td>');\n                    currentDate.add(1, 'd');\n                }\n\n                daysView.find('tbody').empty().append(html);\n\n                updateMonths();\n\n                updateYears();\n\n                updateDecades();\n            },\n\n            fillHours = function () {\n                var table = widget.find('.timepicker-hours table'),\n                    currentHour = viewDate.clone().startOf('d'),\n                    html = [],\n                    row = $('<tr>');\n\n                if (viewDate.hour() > 11 && !use24Hours) {\n                    currentHour.hour(12);\n                }\n                while (currentHour.isSame(viewDate, 'd') && (use24Hours || (viewDate.hour() < 12 && currentHour.hour() < 12) || viewDate.hour() > 11)) {\n                    if (currentHour.hour() % 4 === 0) {\n                        row = $('<tr>');\n                        html.push(row);\n                    }\n                    row.append('<td data-action=\"selectHour\" class=\"hour' + (!isValid(currentHour, 'h') ? ' disabled' : '') + '\">' + currentHour.format(use24Hours ? 'HH' : 'hh') + '</td>');\n                    currentHour.add(1, 'h');\n                }\n                table.empty().append(html);\n            },\n\n            fillMinutes = function () {\n                var table = widget.find('.timepicker-minutes table'),\n                    currentMinute = viewDate.clone().startOf('h'),\n                    html = [],\n                    row = $('<tr>'),\n                    step = options.stepping === 1 ? 5 : options.stepping;\n\n                while (viewDate.isSame(currentMinute, 'h')) {\n                    if (currentMinute.minute() % (step * 4) === 0) {\n                        row = $('<tr>');\n                        html.push(row);\n                    }\n                    row.append('<td data-action=\"selectMinute\" class=\"minute' + (!isValid(currentMinute, 'm') ? ' disabled' : '') + '\">' + currentMinute.format('mm') + '</td>');\n                    currentMinute.add(step, 'm');\n                }\n                table.empty().append(html);\n            },\n\n            fillSeconds = function () {\n                var table = widget.find('.timepicker-seconds table'),\n                    currentSecond = viewDate.clone().startOf('m'),\n                    html = [],\n                    row = $('<tr>');\n\n                while (viewDate.isSame(currentSecond, 'm')) {\n                    if (currentSecond.second() % 20 === 0) {\n                        row = $('<tr>');\n                        html.push(row);\n                    }\n                    row.append('<td data-action=\"selectSecond\" class=\"second' + (!isValid(currentSecond, 's') ? ' disabled' : '') + '\">' + currentSecond.format('ss') + '</td>');\n                    currentSecond.add(5, 's');\n                }\n\n                table.empty().append(html);\n            },\n\n            fillTime = function () {\n                var toggle, newDate, timeComponents = widget.find('.timepicker span[data-time-component]');\n\n                if (!use24Hours) {\n                    toggle = widget.find('.timepicker [data-action=togglePeriod]');\n                    newDate = date.clone().add((date.hours() >= 12) ? -12 : 12, 'h');\n\n                    toggle.text(date.format('A'));\n\n                    if (isValid(newDate, 'h')) {\n                        toggle.removeClass('disabled');\n                    } else {\n                        toggle.addClass('disabled');\n                    }\n                }\n                timeComponents.filter('[data-time-component=hours]').text(date.format(use24Hours ? 'HH' : 'hh'));\n                timeComponents.filter('[data-time-component=minutes]').text(date.format('mm'));\n                timeComponents.filter('[data-time-component=seconds]').text(date.format('ss'));\n\n                fillHours();\n                fillMinutes();\n                fillSeconds();\n            },\n\n            update = function () {\n                if (!widget) {\n                    return;\n                }\n                fillDate();\n                fillTime();\n            },\n\n            setValue = function (targetMoment) {\n                var oldDate = unset ? null : date;\n\n                // case of calling setValue(null or false)\n                if (!targetMoment) {\n                    unset = true;\n                    input.val('');\n                    element.data('date', '');\n                    notifyEvent({\n                        type: 'dp.change',\n                        date: false,\n                        oldDate: oldDate\n                    });\n                    update();\n                    return;\n                }\n\n                targetMoment = targetMoment.clone().locale(options.locale);\n\n                if (hasTimeZone()) {\n                    targetMoment.tz(options.timeZone);\n                }\n\n                if (options.stepping !== 1) {\n                    targetMoment.minutes((Math.round(targetMoment.minutes() / options.stepping) * options.stepping)).seconds(0);\n\n                    while (options.minDate && targetMoment.isBefore(options.minDate)) {\n                        targetMoment.add(options.stepping, 'minutes');\n                    }\n                }\n\n                if (isValid(targetMoment)) {\n                    date = targetMoment;\n                    viewDate = date.clone();\n                    input.val(date.format(actualFormat));\n                    element.data('date', date.format(actualFormat));\n                    unset = false;\n                    update();\n                    notifyEvent({\n                        type: 'dp.change',\n                        date: date.clone(),\n                        oldDate: oldDate\n                    });\n                } else {\n                    if (!options.keepInvalid) {\n                        input.val(unset ? '' : date.format(actualFormat));\n                    } else {\n                        notifyEvent({\n                            type: 'dp.change',\n                            date: targetMoment,\n                            oldDate: oldDate\n                        });\n                    }\n                    notifyEvent({\n                        type: 'dp.error',\n                        date: targetMoment,\n                        oldDate: oldDate\n                    });\n                }\n            },\n\n            /**\n             * Hides the widget. Possibly will emit dp.hide\n             */\n            hide = function () {\n                var transitioning = false;\n\n                keyState = {}; // Added for Antragsgrün: enables using the down-key again after closing the widget using the escape key\n\n                if (!widget) {\n                    return picker;\n                }\n                // Ignore event if in the middle of a picker transition\n                widget.find('.collapse').each(function () {\n                    var collapseData = $(this).data('collapse');\n                    if (collapseData && collapseData.transitioning) {\n                        transitioning = true;\n                        return false;\n                    }\n                    return true;\n                });\n                if (transitioning) {\n                    return picker;\n                }\n                if (component && component.hasClass('btn')) {\n                    component.toggleClass('active');\n                }\n                widget.hide();\n\n                $(window).off('resize', place);\n                widget.off('click', '[data-action]');\n                widget.off('mousedown', false);\n\n                widget.remove();\n                widget = false;\n\n                notifyEvent({\n                    type: 'dp.hide',\n                    date: date.clone()\n                });\n\n                // input.blur(); // Removed by Antragsgrün: focus should go to the input field\n\n                viewDate = date.clone();\n\n                return picker;\n            },\n\n            clear = function () {\n                setValue(null);\n            },\n\n            parseInputDate = function (inputDate) {\n                if (options.parseInputDate === undefined) {\n                    if (!moment.isMoment(inputDate) || inputDate instanceof Date) {\n                        inputDate = getMoment(inputDate);\n                    }\n                } else {\n                    inputDate = options.parseInputDate(inputDate);\n                }\n                //inputDate.locale(options.locale);\n                return inputDate;\n            },\n\n            /********************************************************************************\n             *\n             * Widget UI interaction functions\n             *\n             ********************************************************************************/\n            actions = {\n                next: function () {\n                    var navFnc = datePickerModes[currentViewMode].navFnc;\n                    viewDate.add(datePickerModes[currentViewMode].navStep, navFnc);\n                    fillDate();\n                    viewUpdate(navFnc);\n                },\n\n                previous: function () {\n                    var navFnc = datePickerModes[currentViewMode].navFnc;\n                    viewDate.subtract(datePickerModes[currentViewMode].navStep, navFnc);\n                    fillDate();\n                    viewUpdate(navFnc);\n                },\n\n                pickerSwitch: function () {\n                    showMode(1);\n                },\n\n                selectMonth: function (e) {\n                    var month = $(e.target).closest('tbody').find('span').index($(e.target));\n                    viewDate.month(month);\n                    if (currentViewMode === minViewModeNumber) {\n                        setValue(date.clone().year(viewDate.year()).month(viewDate.month()));\n                        if (!options.inline) {\n                            hide();\n                        }\n                    } else {\n                        showMode(-1);\n                        fillDate();\n                    }\n                    viewUpdate('M');\n                },\n\n                selectYear: function (e) {\n                    var year = parseInt($(e.target).text(), 10) || 0;\n                    viewDate.year(year);\n                    if (currentViewMode === minViewModeNumber) {\n                        setValue(date.clone().year(viewDate.year()));\n                        if (!options.inline) {\n                            hide();\n                        }\n                    } else {\n                        showMode(-1);\n                        fillDate();\n                    }\n                    viewUpdate('YYYY');\n                },\n\n                selectDecade: function (e) {\n                    var year = parseInt($(e.target).data('selection'), 10) || 0;\n                    viewDate.year(year);\n                    if (currentViewMode === minViewModeNumber) {\n                        setValue(date.clone().year(viewDate.year()));\n                        if (!options.inline) {\n                            hide();\n                        }\n                    } else {\n                        showMode(-1);\n                        fillDate();\n                    }\n                    viewUpdate('YYYY');\n                },\n\n                selectDay: function (e) {\n                    var day = viewDate.clone();\n                    if ($(e.target).is('.old')) {\n                        day.subtract(1, 'M');\n                    }\n                    if ($(e.target).is('.new')) {\n                        day.add(1, 'M');\n                    }\n                    setValue(day.date(parseInt($(e.target).text(), 10)));\n                    if (!hasTime() && !options.keepOpen && !options.inline) {\n                        hide();\n                    }\n                },\n\n                incrementHours: function () {\n                    var newDate = date.clone().add(1, 'h');\n                    if (isValid(newDate, 'h')) {\n                        setValue(newDate);\n                    }\n                },\n\n                incrementMinutes: function () {\n                    var newDate = date.clone().add(options.stepping, 'm');\n                    if (isValid(newDate, 'm')) {\n                        setValue(newDate);\n                    }\n                },\n\n                incrementSeconds: function () {\n                    var newDate = date.clone().add(1, 's');\n                    if (isValid(newDate, 's')) {\n                        setValue(newDate);\n                    }\n                },\n\n                decrementHours: function () {\n                    var newDate = date.clone().subtract(1, 'h');\n                    if (isValid(newDate, 'h')) {\n                        setValue(newDate);\n                    }\n                },\n\n                decrementMinutes: function () {\n                    var newDate = date.clone().subtract(options.stepping, 'm');\n                    if (isValid(newDate, 'm')) {\n                        setValue(newDate);\n                    }\n                },\n\n                decrementSeconds: function () {\n                    var newDate = date.clone().subtract(1, 's');\n                    if (isValid(newDate, 's')) {\n                        setValue(newDate);\n                    }\n                },\n\n                togglePeriod: function () {\n                    setValue(date.clone().add((date.hours() >= 12) ? -12 : 12, 'h'));\n                },\n\n                togglePicker: function (e) {\n                    var $this = $(e.target),\n                        $parent = $this.closest('ul'),\n                        expanded = $parent.find('.in'),\n                        closed = $parent.find('.collapse:not(.in)'),\n                        collapseData;\n\n                    if (expanded && expanded.length) {\n                        collapseData = expanded.data('collapse');\n                        if (collapseData && collapseData.transitioning) {\n                            return;\n                        }\n                        if (expanded.collapse) { // if collapse plugin is available through bootstrap.js then use it\n                            expanded.collapse('hide');\n                            closed.collapse('show');\n                        } else { // otherwise just toggle in class on the two views\n                            expanded.removeClass('in');\n                            closed.addClass('in');\n                        }\n                        if ($this.is('span')) {\n                            $this.toggleClass(options.icons.time + ' ' + options.icons.date);\n                        } else {\n                            $this.find('span').toggleClass(options.icons.time + ' ' + options.icons.date);\n                        }\n\n                        // NOTE: uncomment if toggled state will be restored in show()\n                        //if (component) {\n                        //    component.find('span').toggleClass(options.icons.time + ' ' + options.icons.date);\n                        //}\n                    }\n                },\n\n                showPicker: function () {\n                    widget.find('.timepicker > div:not(.timepicker-picker)').hide();\n                    widget.find('.timepicker .timepicker-picker').show();\n                },\n\n                showHours: function () {\n                    widget.find('.timepicker .timepicker-picker').hide();\n                    widget.find('.timepicker .timepicker-hours').show();\n                },\n\n                showMinutes: function () {\n                    widget.find('.timepicker .timepicker-picker').hide();\n                    widget.find('.timepicker .timepicker-minutes').show();\n                },\n\n                showSeconds: function () {\n                    widget.find('.timepicker .timepicker-picker').hide();\n                    widget.find('.timepicker .timepicker-seconds').show();\n                },\n\n                selectHour: function (e) {\n                    var hour = parseInt($(e.target).text(), 10);\n\n                    if (!use24Hours) {\n                        if (date.hours() >= 12) {\n                            if (hour !== 12) {\n                                hour += 12;\n                            }\n                        } else {\n                            if (hour === 12) {\n                                hour = 0;\n                            }\n                        }\n                    }\n                    setValue(date.clone().hours(hour));\n                    actions.showPicker.call(picker);\n                },\n\n                selectMinute: function (e) {\n                    setValue(date.clone().minutes(parseInt($(e.target).text(), 10)));\n                    actions.showPicker.call(picker);\n                },\n\n                selectSecond: function (e) {\n                    setValue(date.clone().seconds(parseInt($(e.target).text(), 10)));\n                    actions.showPicker.call(picker);\n                },\n\n                clear: clear,\n\n                today: function () {\n                    var todaysDate = getMoment();\n                    if (isValid(todaysDate, 'd')) {\n                        setValue(todaysDate);\n                    }\n                },\n\n                close: hide\n            },\n\n            doAction = function (e) {\n                if ($(e.currentTarget).is('.disabled')) {\n                    return false;\n                }\n                actions[$(e.currentTarget).data('action')].apply(picker, arguments);\n                return false;\n            },\n\n            /**\n             * Shows the widget. Possibly will emit dp.show and dp.change\n             */\n            show = function () {\n                var currentMoment,\n                    useCurrentGranularity = {\n                        'year': function (m) {\n                            return m.month(0).date(1).hours(0).seconds(0).minutes(0);\n                        },\n                        'month': function (m) {\n                            return m.date(1).hours(0).seconds(0).minutes(0);\n                        },\n                        'day': function (m) {\n                            return m.hours(0).seconds(0).minutes(0);\n                        },\n                        'hour': function (m) {\n                            return m.seconds(0).minutes(0);\n                        },\n                        'minute': function (m) {\n                            return m.seconds(0);\n                        }\n                    };\n\n                if (input.prop('disabled') || (!options.ignoreReadonly && input.prop('readonly')) || widget) {\n                    return picker;\n                }\n                if (input.val() !== undefined && input.val().trim().length !== 0) {\n                    setValue(parseInputDate(input.val().trim()));\n                } else if (unset && options.useCurrent && (options.inline || (input.is('input') && input.val().trim().length === 0))) {\n                    currentMoment = getMoment();\n                    if (typeof options.useCurrent === 'string') {\n                        currentMoment = useCurrentGranularity[options.useCurrent](currentMoment);\n                    }\n                    setValue(currentMoment);\n                }\n                widget = getTemplate();\n\n                fillDow();\n                fillMonths();\n\n                widget.find('.timepicker-hours').hide();\n                widget.find('.timepicker-minutes').hide();\n                widget.find('.timepicker-seconds').hide();\n\n                update();\n                showMode();\n\n                $(window).on('resize', place);\n                widget.on('click', '[data-action]', doAction); // this handles clicks on the widget\n                widget.on('mousedown', false);\n\n                if (component && component.hasClass('btn')) {\n                    component.toggleClass('active');\n                }\n                place();\n                widget.show();\n                if (options.focusOnShow && !input.is(':focus')) {\n                    input.focus();\n                }\n\n                notifyEvent({\n                    type: 'dp.show'\n                });\n                return picker;\n            },\n\n            /**\n             * Shows or hides the widget\n             */\n            toggle = function () {\n                return (widget ? hide() : show());\n            },\n\n            keydown = function (e) {\n                var handler = null,\n                    index,\n                    index2,\n                    pressedKeys = [],\n                    pressedModifiers = {},\n                    currentKey = e.which,\n                    keyBindKeys,\n                    allModifiersPressed,\n                    pressed = 'p';\n\n                keyState[currentKey] = pressed;\n\n                for (index in keyState) {\n                    if (keyState.hasOwnProperty(index) && keyState[index] === pressed) {\n                        pressedKeys.push(index);\n                        if (parseInt(index, 10) !== currentKey) {\n                            pressedModifiers[index] = true;\n                        }\n                    }\n                }\n\n                for (index in options.keyBinds) {\n                    if (options.keyBinds.hasOwnProperty(index) && typeof (options.keyBinds[index]) === 'function') {\n                        keyBindKeys = index.split(' ');\n                        if (keyBindKeys.length === pressedKeys.length && keyMap[currentKey] === keyBindKeys[keyBindKeys.length - 1]) {\n                            allModifiersPressed = true;\n                            for (index2 = keyBindKeys.length - 2; index2 >= 0; index2--) {\n                                if (!(keyMap[keyBindKeys[index2]] in pressedModifiers)) {\n                                    allModifiersPressed = false;\n                                    break;\n                                }\n                            }\n                            if (allModifiersPressed) {\n                                handler = options.keyBinds[index];\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (handler) {\n                    handler.call(picker, widget);\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n            },\n\n            keyup = function (e) {\n                keyState[e.which] = 'r';\n                e.stopPropagation();\n                e.preventDefault();\n            },\n\n            change = function (e) {\n                var val = $(e.target).val().trim(),\n                    parsedDate = val ? parseInputDate(val) : null;\n                setValue(parsedDate);\n                e.stopImmediatePropagation();\n                return false;\n            },\n\n            attachDatePickerElementEvents = function () {\n                input.on({\n                    'change': change,\n                    'blur': options.debug ? '' : hide,\n                    'keydown': keydown,\n                    'keyup': keyup,\n                    'focus': options.allowInputToggle ? show : ''\n                });\n\n                if (element.is('input')) {\n                    input.on({\n                        'focus': show\n                    });\n                } else if (component) {\n                    component.on('click', toggle);\n                    component.on('mousedown', false);\n                }\n            },\n\n            detachDatePickerElementEvents = function () {\n                input.off({\n                    'change': change,\n                    'blur': blur,\n                    'keydown': keydown,\n                    'keyup': keyup,\n                    'focus': options.allowInputToggle ? hide : ''\n                });\n\n                if (element.is('input')) {\n                    input.off({\n                        'focus': show\n                    });\n                } else if (component) {\n                    component.off('click', toggle);\n                    component.off('mousedown', false);\n                }\n            },\n\n            indexGivenDates = function (givenDatesArray) {\n                // Store given enabledDates and disabledDates as keys.\n                // This way we can check their existence in O(1) time instead of looping through whole array.\n                // (for example: options.enabledDates['2014-02-27'] === true)\n                var givenDatesIndexed = {};\n                $.each(givenDatesArray, function () {\n                    var dDate = parseInputDate(this);\n                    if (dDate.isValid()) {\n                        givenDatesIndexed[dDate.format('YYYY-MM-DD')] = true;\n                    }\n                });\n                return (Object.keys(givenDatesIndexed).length) ? givenDatesIndexed : false;\n            },\n\n            indexGivenHours = function (givenHoursArray) {\n                // Store given enabledHours and disabledHours as keys.\n                // This way we can check their existence in O(1) time instead of looping through whole array.\n                // (for example: options.enabledHours['2014-02-27'] === true)\n                var givenHoursIndexed = {};\n                $.each(givenHoursArray, function () {\n                    givenHoursIndexed[this] = true;\n                });\n                return (Object.keys(givenHoursIndexed).length) ? givenHoursIndexed : false;\n            },\n\n            initFormatting = function () {\n                var format = options.format || 'L LT';\n\n                actualFormat = format.replace(/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput) {\n                    var newinput = date.localeData().longDateFormat(formatInput) || formatInput;\n                    return newinput.replace(/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput2) { //temp fix for #740\n                        return date.localeData().longDateFormat(formatInput2) || formatInput2;\n                    });\n                });\n\n\n                parseFormats = options.extraFormats ? options.extraFormats.slice() : [];\n                if (parseFormats.indexOf(format) < 0 && parseFormats.indexOf(actualFormat) < 0) {\n                    parseFormats.push(actualFormat);\n                }\n\n                use24Hours = (actualFormat.toLowerCase().indexOf('a') < 1 && actualFormat.replace(/\\[.*?\\]/g, '').indexOf('h') < 1);\n\n                if (isEnabled('y')) {\n                    minViewModeNumber = 2;\n                }\n                if (isEnabled('M')) {\n                    minViewModeNumber = 1;\n                }\n                if (isEnabled('d')) {\n                    minViewModeNumber = 0;\n                }\n\n                currentViewMode = Math.max(minViewModeNumber, currentViewMode);\n\n                if (!unset) {\n                    setValue(date);\n                }\n            };\n\n        /********************************************************************************\n         *\n         * Public API functions\n         * =====================\n         *\n         * Important: Do not expose direct references to private objects or the options\n         * object to the outer world. Always return a clone when returning values or make\n         * a clone when setting a private variable.\n         *\n         ********************************************************************************/\n        picker.destroy = function () {\n            ///<summary>Destroys the widget and removes all attached event listeners</summary>\n            hide();\n            detachDatePickerElementEvents();\n            element.removeData('DateTimePicker');\n            element.removeData('date');\n        };\n\n        picker.toggle = toggle;\n\n        picker.show = show;\n\n        picker.hide = hide;\n\n        picker.disable = function () {\n            ///<summary>Disables the input element, the component is attached to, by adding a disabled=\"true\" attribute to it.\n            ///If the widget was visible before that call it is hidden. Possibly emits dp.hide</summary>\n            hide();\n            if (component && component.hasClass('btn')) {\n                component.addClass('disabled');\n            }\n            input.prop('disabled', true);\n            return picker;\n        };\n\n        picker.enable = function () {\n            ///<summary>Enables the input element, the component is attached to, by removing disabled attribute from it.</summary>\n            if (component && component.hasClass('btn')) {\n                component.removeClass('disabled');\n            }\n            input.prop('disabled', false);\n            return picker;\n        };\n\n        picker.ignoreReadonly = function (ignoreReadonly) {\n            if (arguments.length === 0) {\n                return options.ignoreReadonly;\n            }\n            if (typeof ignoreReadonly !== 'boolean') {\n                throw new TypeError('ignoreReadonly () expects a boolean parameter');\n            }\n            options.ignoreReadonly = ignoreReadonly;\n            return picker;\n        };\n\n        picker.options = function (newOptions) {\n            if (arguments.length === 0) {\n                return $.extend(true, {}, options);\n            }\n\n            if (!(newOptions instanceof Object)) {\n                throw new TypeError('options() options parameter should be an object');\n            }\n            $.extend(true, options, newOptions);\n            $.each(options, function (key, value) {\n                if (picker[key] !== undefined) {\n                    picker[key](value);\n                } else {\n                    throw new TypeError('option ' + key + ' is not recognized!');\n                }\n            });\n            return picker;\n        };\n\n        picker.date = function (newDate) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.date\">\n            ///<summary>Returns the component's model current date, a moment object or null if not set.</summary>\n            ///<returns type=\"Moment\">date.clone()</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Sets the components model current moment to it. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.</summary>\n            ///<param name=\"newDate\" locid=\"$.fn.datetimepicker.date_p:newDate\">Takes string, Date, moment, null parameter.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                if (unset) {\n                    return null;\n                }\n                return date.clone();\n            }\n\n            if (newDate !== null && typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {\n                throw new TypeError('date() parameter must be one of [null, string, moment or Date]');\n            }\n\n            setValue(newDate === null ? null : parseInputDate(newDate));\n            return picker;\n        };\n\n        picker.format = function (newFormat) {\n            ///<summary>test su</summary>\n            ///<param name=\"newFormat\">info about para</param>\n            ///<returns type=\"string|boolean\">returns foo</returns>\n            if (arguments.length === 0) {\n                return options.format;\n            }\n\n            if ((typeof newFormat !== 'string') && ((typeof newFormat !== 'boolean') || (newFormat !== false))) {\n                throw new TypeError('format() expects a string or boolean:false parameter ' + newFormat);\n            }\n\n            options.format = newFormat;\n            if (actualFormat) {\n                initFormatting(); // reinit formatting\n            }\n            return picker;\n        };\n\n        picker.timeZone = function (newZone) {\n            if (arguments.length === 0) {\n                return options.timeZone;\n            }\n\n            if (typeof newZone !== 'string') {\n                throw new TypeError('newZone() expects a string parameter');\n            }\n\n            options.timeZone = newZone;\n\n            return picker;\n        };\n\n        picker.dayViewHeaderFormat = function (newFormat) {\n            if (arguments.length === 0) {\n                return options.dayViewHeaderFormat;\n            }\n\n            if (typeof newFormat !== 'string') {\n                throw new TypeError('dayViewHeaderFormat() expects a string parameter');\n            }\n\n            options.dayViewHeaderFormat = newFormat;\n            return picker;\n        };\n\n        picker.extraFormats = function (formats) {\n            if (arguments.length === 0) {\n                return options.extraFormats;\n            }\n\n            if (formats !== false && !(formats instanceof Array)) {\n                throw new TypeError('extraFormats() expects an array or false parameter');\n            }\n\n            options.extraFormats = formats;\n            if (parseFormats) {\n                initFormatting(); // reinit formatting\n            }\n            return picker;\n        };\n\n        picker.disabledDates = function (dates) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.disabledDates\">\n            ///<summary>Returns an array with the currently set disabled dates on the component.</summary>\n            ///<returns type=\"array\">options.disabledDates</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\n            ///options.enabledDates if such exist.</summary>\n            ///<param name=\"dates\" locid=\"$.fn.datetimepicker.disabledDates_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.disabledDates ? $.extend({}, options.disabledDates) : options.disabledDates);\n            }\n\n            if (!dates) {\n                options.disabledDates = false;\n                update();\n                return picker;\n            }\n            if (!(dates instanceof Array)) {\n                throw new TypeError('disabledDates() expects an array parameter');\n            }\n            options.disabledDates = indexGivenDates(dates);\n            options.enabledDates = false;\n            update();\n            return picker;\n        };\n\n        picker.enabledDates = function (dates) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.enabledDates\">\n            ///<summary>Returns an array with the currently set enabled dates on the component.</summary>\n            ///<returns type=\"array\">options.enabledDates</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledDates if such exist.</summary>\n            ///<param name=\"dates\" locid=\"$.fn.datetimepicker.enabledDates_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.enabledDates ? $.extend({}, options.enabledDates) : options.enabledDates);\n            }\n\n            if (!dates) {\n                options.enabledDates = false;\n                update();\n                return picker;\n            }\n            if (!(dates instanceof Array)) {\n                throw new TypeError('enabledDates() expects an array parameter');\n            }\n            options.enabledDates = indexGivenDates(dates);\n            options.disabledDates = false;\n            update();\n            return picker;\n        };\n\n        picker.daysOfWeekDisabled = function (daysOfWeekDisabled) {\n            if (arguments.length === 0) {\n                return options.daysOfWeekDisabled.splice(0);\n            }\n\n            if ((typeof daysOfWeekDisabled === 'boolean') && !daysOfWeekDisabled) {\n                options.daysOfWeekDisabled = false;\n                update();\n                return picker;\n            }\n\n            if (!(daysOfWeekDisabled instanceof Array)) {\n                throw new TypeError('daysOfWeekDisabled() expects an array parameter');\n            }\n            options.daysOfWeekDisabled = daysOfWeekDisabled.reduce(function (previousValue, currentValue) {\n                currentValue = parseInt(currentValue, 10);\n                if (currentValue > 6 || currentValue < 0 || isNaN(currentValue)) {\n                    return previousValue;\n                }\n                if (previousValue.indexOf(currentValue) === -1) {\n                    previousValue.push(currentValue);\n                }\n                return previousValue;\n            }, []).sort();\n            if (options.useCurrent && !options.keepInvalid) {\n                var tries = 0;\n                while (!isValid(date, 'd')) {\n                    date.add(1, 'd');\n                    if (tries === 31) {\n                        throw 'Tried 31 times to find a valid date';\n                    }\n                    tries++;\n                }\n                setValue(date);\n            }\n            update();\n            return picker;\n        };\n\n        picker.maxDate = function (maxDate) {\n            if (arguments.length === 0) {\n                return options.maxDate ? options.maxDate.clone() : options.maxDate;\n            }\n\n            if ((typeof maxDate === 'boolean') && maxDate === false) {\n                options.maxDate = false;\n                update();\n                return picker;\n            }\n\n            if (typeof maxDate === 'string') {\n                if (maxDate === 'now' || maxDate === 'moment') {\n                    maxDate = getMoment();\n                }\n            }\n\n            var parsedDate = parseInputDate(maxDate);\n\n            if (!parsedDate.isValid()) {\n                throw new TypeError('maxDate() Could not parse date parameter: ' + maxDate);\n            }\n            if (options.minDate && parsedDate.isBefore(options.minDate)) {\n                throw new TypeError('maxDate() date parameter is before options.minDate: ' + parsedDate.format(actualFormat));\n            }\n            options.maxDate = parsedDate;\n            if (options.useCurrent && !options.keepInvalid && date.isAfter(maxDate)) {\n                setValue(options.maxDate);\n            }\n            if (viewDate.isAfter(parsedDate)) {\n                viewDate = parsedDate.clone().subtract(options.stepping, 'm');\n            }\n            update();\n            return picker;\n        };\n\n        picker.minDate = function (minDate) {\n            if (arguments.length === 0) {\n                return options.minDate ? options.minDate.clone() : options.minDate;\n            }\n\n            if ((typeof minDate === 'boolean') && minDate === false) {\n                options.minDate = false;\n                update();\n                return picker;\n            }\n\n            if (typeof minDate === 'string') {\n                if (minDate === 'now' || minDate === 'moment') {\n                    minDate = getMoment();\n                }\n            }\n\n            var parsedDate = parseInputDate(minDate);\n\n            if (!parsedDate.isValid()) {\n                throw new TypeError('minDate() Could not parse date parameter: ' + minDate);\n            }\n            if (options.maxDate && parsedDate.isAfter(options.maxDate)) {\n                throw new TypeError('minDate() date parameter is after options.maxDate: ' + parsedDate.format(actualFormat));\n            }\n            options.minDate = parsedDate;\n            if (options.useCurrent && !options.keepInvalid && date.isBefore(minDate)) {\n                setValue(options.minDate);\n            }\n            if (viewDate.isBefore(parsedDate)) {\n                viewDate = parsedDate.clone().add(options.stepping, 'm');\n            }\n            update();\n            return picker;\n        };\n\n        picker.defaultDate = function (defaultDate) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.defaultDate\">\n            ///<summary>Returns a moment with the options.defaultDate option configuration or false if not set</summary>\n            ///<returns type=\"Moment\">date.clone()</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Will set the picker's inital date. If a boolean:false value is passed the options.defaultDate parameter is cleared.</summary>\n            ///<param name=\"defaultDate\" locid=\"$.fn.datetimepicker.defaultDate_p:defaultDate\">Takes a string, Date, moment, boolean:false</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return options.defaultDate ? options.defaultDate.clone() : options.defaultDate;\n            }\n            if (!defaultDate) {\n                options.defaultDate = false;\n                return picker;\n            }\n\n            if (typeof defaultDate === 'string') {\n                if (defaultDate === 'now' || defaultDate === 'moment') {\n                    defaultDate = getMoment();\n                } else {\n                    defaultDate = getMoment(defaultDate);\n                }\n            }\n\n            var parsedDate = parseInputDate(defaultDate);\n            if (!parsedDate.isValid()) {\n                throw new TypeError('defaultDate() Could not parse date parameter: ' + defaultDate);\n            }\n            if (!isValid(parsedDate)) {\n                throw new TypeError('defaultDate() date passed is invalid according to component setup validations');\n            }\n\n            options.defaultDate = parsedDate;\n\n            if ((options.defaultDate && options.inline) || input.val().trim() === '') {\n                setValue(options.defaultDate);\n            }\n            return picker;\n        };\n\n        picker.locale = function (locale) {\n            if (arguments.length === 0) {\n                return options.locale;\n            }\n\n            if (!moment.localeData(locale)) {\n                throw new TypeError('locale() locale ' + locale + ' is not loaded from moment locales!');\n            }\n\n            options.locale = locale;\n            date.locale(options.locale);\n            viewDate.locale(options.locale);\n\n            if (actualFormat) {\n                initFormatting(); // reinit formatting\n            }\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.stepping = function (stepping) {\n            if (arguments.length === 0) {\n                return options.stepping;\n            }\n\n            stepping = parseInt(stepping, 10);\n            if (isNaN(stepping) || stepping < 1) {\n                stepping = 1;\n            }\n            options.stepping = stepping;\n            return picker;\n        };\n\n        picker.useCurrent = function (useCurrent) {\n            var useCurrentOptions = ['year', 'month', 'day', 'hour', 'minute'];\n            if (arguments.length === 0) {\n                return options.useCurrent;\n            }\n\n            if ((typeof useCurrent !== 'boolean') && (typeof useCurrent !== 'string')) {\n                throw new TypeError('useCurrent() expects a boolean or string parameter');\n            }\n            if (typeof useCurrent === 'string' && useCurrentOptions.indexOf(useCurrent.toLowerCase()) === -1) {\n                throw new TypeError('useCurrent() expects a string parameter of ' + useCurrentOptions.join(', '));\n            }\n            options.useCurrent = useCurrent;\n            return picker;\n        };\n\n        picker.collapse = function (collapse) {\n            if (arguments.length === 0) {\n                return options.collapse;\n            }\n\n            if (typeof collapse !== 'boolean') {\n                throw new TypeError('collapse() expects a boolean parameter');\n            }\n            if (options.collapse === collapse) {\n                return picker;\n            }\n            options.collapse = collapse;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.icons = function (icons) {\n            if (arguments.length === 0) {\n                return $.extend({}, options.icons);\n            }\n\n            if (!(icons instanceof Object)) {\n                throw new TypeError('icons() expects parameter to be an Object');\n            }\n            $.extend(options.icons, icons);\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.tooltips = function (tooltips) {\n            if (arguments.length === 0) {\n                return $.extend({}, options.tooltips);\n            }\n\n            if (!(tooltips instanceof Object)) {\n                throw new TypeError('tooltips() expects parameter to be an Object');\n            }\n            $.extend(options.tooltips, tooltips);\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.useStrict = function (useStrict) {\n            if (arguments.length === 0) {\n                return options.useStrict;\n            }\n\n            if (typeof useStrict !== 'boolean') {\n                throw new TypeError('useStrict() expects a boolean parameter');\n            }\n            options.useStrict = useStrict;\n            return picker;\n        };\n\n        picker.sideBySide = function (sideBySide) {\n            if (arguments.length === 0) {\n                return options.sideBySide;\n            }\n\n            if (typeof sideBySide !== 'boolean') {\n                throw new TypeError('sideBySide() expects a boolean parameter');\n            }\n            options.sideBySide = sideBySide;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.viewMode = function (viewMode) {\n            if (arguments.length === 0) {\n                return options.viewMode;\n            }\n\n            if (typeof viewMode !== 'string') {\n                throw new TypeError('viewMode() expects a string parameter');\n            }\n\n            if (viewModes.indexOf(viewMode) === -1) {\n                throw new TypeError('viewMode() parameter must be one of (' + viewModes.join(', ') + ') value');\n            }\n\n            options.viewMode = viewMode;\n            currentViewMode = Math.max(viewModes.indexOf(viewMode), minViewModeNumber);\n\n            showMode();\n            return picker;\n        };\n\n        picker.toolbarPlacement = function (toolbarPlacement) {\n            if (arguments.length === 0) {\n                return options.toolbarPlacement;\n            }\n\n            if (typeof toolbarPlacement !== 'string') {\n                throw new TypeError('toolbarPlacement() expects a string parameter');\n            }\n            if (toolbarPlacements.indexOf(toolbarPlacement) === -1) {\n                throw new TypeError('toolbarPlacement() parameter must be one of (' + toolbarPlacements.join(', ') + ') value');\n            }\n            options.toolbarPlacement = toolbarPlacement;\n\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.widgetPositioning = function (widgetPositioning) {\n            if (arguments.length === 0) {\n                return $.extend({}, options.widgetPositioning);\n            }\n\n            if (({}).toString.call(widgetPositioning) !== '[object Object]') {\n                throw new TypeError('widgetPositioning() expects an object variable');\n            }\n            if (widgetPositioning.horizontal) {\n                if (typeof widgetPositioning.horizontal !== 'string') {\n                    throw new TypeError('widgetPositioning() horizontal variable must be a string');\n                }\n                widgetPositioning.horizontal = widgetPositioning.horizontal.toLowerCase();\n                if (horizontalModes.indexOf(widgetPositioning.horizontal) === -1) {\n                    throw new TypeError('widgetPositioning() expects horizontal parameter to be one of (' + horizontalModes.join(', ') + ')');\n                }\n                options.widgetPositioning.horizontal = widgetPositioning.horizontal;\n            }\n            if (widgetPositioning.vertical) {\n                if (typeof widgetPositioning.vertical !== 'string') {\n                    throw new TypeError('widgetPositioning() vertical variable must be a string');\n                }\n                widgetPositioning.vertical = widgetPositioning.vertical.toLowerCase();\n                if (verticalModes.indexOf(widgetPositioning.vertical) === -1) {\n                    throw new TypeError('widgetPositioning() expects vertical parameter to be one of (' + verticalModes.join(', ') + ')');\n                }\n                options.widgetPositioning.vertical = widgetPositioning.vertical;\n            }\n            update();\n            return picker;\n        };\n\n        picker.calendarWeeks = function (calendarWeeks) {\n            if (arguments.length === 0) {\n                return options.calendarWeeks;\n            }\n\n            if (typeof calendarWeeks !== 'boolean') {\n                throw new TypeError('calendarWeeks() expects parameter to be a boolean value');\n            }\n\n            options.calendarWeeks = calendarWeeks;\n            update();\n            return picker;\n        };\n\n        picker.showTodayButton = function (showTodayButton) {\n            if (arguments.length === 0) {\n                return options.showTodayButton;\n            }\n\n            if (typeof showTodayButton !== 'boolean') {\n                throw new TypeError('showTodayButton() expects a boolean parameter');\n            }\n\n            options.showTodayButton = showTodayButton;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.showClear = function (showClear) {\n            if (arguments.length === 0) {\n                return options.showClear;\n            }\n\n            if (typeof showClear !== 'boolean') {\n                throw new TypeError('showClear() expects a boolean parameter');\n            }\n\n            options.showClear = showClear;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.widgetParent = function (widgetParent) {\n            if (arguments.length === 0) {\n                return options.widgetParent;\n            }\n\n            if (typeof widgetParent === 'string') {\n                widgetParent = $(widgetParent);\n            }\n\n            if (widgetParent !== null && (typeof widgetParent !== 'string' && !(widgetParent instanceof $))) {\n                throw new TypeError('widgetParent() expects a string or a jQuery object parameter');\n            }\n\n            options.widgetParent = widgetParent;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.keepOpen = function (keepOpen) {\n            if (arguments.length === 0) {\n                return options.keepOpen;\n            }\n\n            if (typeof keepOpen !== 'boolean') {\n                throw new TypeError('keepOpen() expects a boolean parameter');\n            }\n\n            options.keepOpen = keepOpen;\n            return picker;\n        };\n\n        picker.focusOnShow = function (focusOnShow) {\n            if (arguments.length === 0) {\n                return options.focusOnShow;\n            }\n\n            if (typeof focusOnShow !== 'boolean') {\n                throw new TypeError('focusOnShow() expects a boolean parameter');\n            }\n\n            options.focusOnShow = focusOnShow;\n            return picker;\n        };\n\n        picker.inline = function (inline) {\n            if (arguments.length === 0) {\n                return options.inline;\n            }\n\n            if (typeof inline !== 'boolean') {\n                throw new TypeError('inline() expects a boolean parameter');\n            }\n\n            options.inline = inline;\n            return picker;\n        };\n\n        picker.clear = function () {\n            clear();\n            return picker;\n        };\n\n        picker.keyBinds = function (keyBinds) {\n            if (arguments.length === 0) {\n                return options.keyBinds;\n            }\n\n            options.keyBinds = keyBinds;\n            return picker;\n        };\n\n        picker.getMoment = function (d) {\n            return getMoment(d);\n        };\n\n        picker.debug = function (debug) {\n            if (typeof debug !== 'boolean') {\n                throw new TypeError('debug() expects a boolean parameter');\n            }\n\n            options.debug = debug;\n            return picker;\n        };\n\n        picker.allowInputToggle = function (allowInputToggle) {\n            if (arguments.length === 0) {\n                return options.allowInputToggle;\n            }\n\n            if (typeof allowInputToggle !== 'boolean') {\n                throw new TypeError('allowInputToggle() expects a boolean parameter');\n            }\n\n            options.allowInputToggle = allowInputToggle;\n            return picker;\n        };\n\n        picker.showClose = function (showClose) {\n            if (arguments.length === 0) {\n                return options.showClose;\n            }\n\n            if (typeof showClose !== 'boolean') {\n                throw new TypeError('showClose() expects a boolean parameter');\n            }\n\n            options.showClose = showClose;\n            return picker;\n        };\n\n        picker.keepInvalid = function (keepInvalid) {\n            if (arguments.length === 0) {\n                return options.keepInvalid;\n            }\n\n            if (typeof keepInvalid !== 'boolean') {\n                throw new TypeError('keepInvalid() expects a boolean parameter');\n            }\n            options.keepInvalid = keepInvalid;\n            return picker;\n        };\n\n        picker.datepickerInput = function (datepickerInput) {\n            if (arguments.length === 0) {\n                return options.datepickerInput;\n            }\n\n            if (typeof datepickerInput !== 'string') {\n                throw new TypeError('datepickerInput() expects a string parameter');\n            }\n\n            options.datepickerInput = datepickerInput;\n            return picker;\n        };\n\n        picker.parseInputDate = function (parseInputDate) {\n            if (arguments.length === 0) {\n                return options.parseInputDate;\n            }\n\n            if (typeof parseInputDate !== 'function') {\n                throw new TypeError('parseInputDate() sholud be as function');\n            }\n\n            options.parseInputDate = parseInputDate;\n\n            return picker;\n        };\n\n        picker.disabledTimeIntervals = function (disabledTimeIntervals) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.disabledTimeIntervals\">\n            ///<summary>Returns an array with the currently set disabled dates on the component.</summary>\n            ///<returns type=\"array\">options.disabledTimeIntervals</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\n            ///options.enabledDates if such exist.</summary>\n            ///<param name=\"dates\" locid=\"$.fn.datetimepicker.disabledTimeIntervals_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.disabledTimeIntervals ? $.extend({}, options.disabledTimeIntervals) : options.disabledTimeIntervals);\n            }\n\n            if (!disabledTimeIntervals) {\n                options.disabledTimeIntervals = false;\n                update();\n                return picker;\n            }\n            if (!(disabledTimeIntervals instanceof Array)) {\n                throw new TypeError('disabledTimeIntervals() expects an array parameter');\n            }\n            options.disabledTimeIntervals = disabledTimeIntervals;\n            update();\n            return picker;\n        };\n\n        picker.disabledHours = function (hours) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.disabledHours\">\n            ///<summary>Returns an array with the currently set disabled hours on the component.</summary>\n            ///<returns type=\"array\">options.disabledHours</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\n            ///options.enabledHours if such exist.</summary>\n            ///<param name=\"hours\" locid=\"$.fn.datetimepicker.disabledHours_p:hours\">Takes an [ int ] of values and disallows the user to select only from those hours.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.disabledHours ? $.extend({}, options.disabledHours) : options.disabledHours);\n            }\n\n            if (!hours) {\n                options.disabledHours = false;\n                update();\n                return picker;\n            }\n            if (!(hours instanceof Array)) {\n                throw new TypeError('disabledHours() expects an array parameter');\n            }\n            options.disabledHours = indexGivenHours(hours);\n            options.enabledHours = false;\n            if (options.useCurrent && !options.keepInvalid) {\n                var tries = 0;\n                while (!isValid(date, 'h')) {\n                    date.add(1, 'h');\n                    if (tries === 24) {\n                        throw 'Tried 24 times to find a valid date';\n                    }\n                    tries++;\n                }\n                setValue(date);\n            }\n            update();\n            return picker;\n        };\n\n        picker.enabledHours = function (hours) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.enabledHours\">\n            ///<summary>Returns an array with the currently set enabled hours on the component.</summary>\n            ///<returns type=\"array\">options.enabledHours</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledHours if such exist.</summary>\n            ///<param name=\"hours\" locid=\"$.fn.datetimepicker.enabledHours_p:hours\">Takes an [ int ] of values and allows the user to select only from those hours.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.enabledHours ? $.extend({}, options.enabledHours) : options.enabledHours);\n            }\n\n            if (!hours) {\n                options.enabledHours = false;\n                update();\n                return picker;\n            }\n            if (!(hours instanceof Array)) {\n                throw new TypeError('enabledHours() expects an array parameter');\n            }\n            options.enabledHours = indexGivenHours(hours);\n            options.disabledHours = false;\n            if (options.useCurrent && !options.keepInvalid) {\n                var tries = 0;\n                while (!isValid(date, 'h')) {\n                    date.add(1, 'h');\n                    if (tries === 24) {\n                        throw 'Tried 24 times to find a valid date';\n                    }\n                    tries++;\n                }\n                setValue(date);\n            }\n            update();\n            return picker;\n        };\n        /**\n         * Returns the component's model current viewDate, a moment object or null if not set. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.\n         * @param {Takes string, viewDate, moment, null parameter.} newDate\n         * @returns {viewDate.clone()}\n         */\n        picker.viewDate = function (newDate) {\n            if (arguments.length === 0) {\n                return viewDate.clone();\n            }\n\n            if (!newDate) {\n                viewDate = date.clone();\n                return picker;\n            }\n\n            if (typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {\n                throw new TypeError('viewDate() parameter must be one of [string, moment or Date]');\n            }\n\n            viewDate = parseInputDate(newDate);\n            viewUpdate();\n            return picker;\n        };\n\n        // initializing element and component attributes\n        if (element.is('input')) {\n            input = element;\n        } else {\n            input = element.find(options.datepickerInput);\n            if (input.length === 0) {\n                input = element.find('input');\n            } else if (!input.is('input')) {\n                throw new Error('CSS class \"' + options.datepickerInput + '\" cannot be applied to non input element');\n            }\n        }\n\n        if (element.hasClass('input-group')) {\n            // in case there is more then one 'input-group-addon' Issue #48\n            if (element.find('.datepickerbutton').length === 0) {\n                component = element.find('.input-group-addon');\n            } else {\n                component = element.find('.datepickerbutton');\n            }\n        }\n\n        if (!options.inline && !input.is('input')) {\n            throw new Error('Could not initialize DateTimePicker without an input element');\n        }\n\n        // Set defaults for date here now instead of in var declaration\n        date = getMoment();\n        viewDate = date.clone();\n\n        $.extend(true, options, dataToOptions());\n\n        picker.options(options);\n\n        initFormatting();\n\n        attachDatePickerElementEvents();\n\n        if (input.prop('disabled')) {\n            picker.disable();\n        }\n        if (input.is('input') && input.val().trim().length !== 0) {\n            setValue(parseInputDate(input.val().trim()));\n        }\n        else if (options.defaultDate && input.attr('placeholder') === undefined) {\n            setValue(options.defaultDate);\n        }\n        if (options.inline) {\n            show();\n        }\n        return picker;\n    };\n\n    /********************************************************************************\n     *\n     * jQuery plugin constructor and defaults object\n     *\n     ********************************************************************************/\n\n    /**\n    * See (http://jquery.com/).\n    * @name jQuery\n    * @class\n    * See the jQuery Library  (http://jquery.com/) for full details.  This just\n    * documents the function and classes that are added to jQuery by this plug-in.\n    */\n    /**\n     * See (http://jquery.com/)\n     * @name fn\n     * @class\n     * See the jQuery Library  (http://jquery.com/) for full details.  This just\n     * documents the function and classes that are added to jQuery by this plug-in.\n     * @memberOf jQuery\n     */\n    /**\n     * Show comments\n     * @class datetimepicker\n     * @memberOf jQuery.fn\n     */\n    $.fn.datetimepicker = function (options) {\n        options = options || {};\n\n        var args = Array.prototype.slice.call(arguments, 1),\n            isInstance = true,\n            thisMethods = ['destroy', 'hide', 'show', 'toggle'],\n            returnValue;\n\n        if (typeof options === 'object') {\n            return this.each(function () {\n                var $this = $(this),\n                    _options;\n                if (!$this.data('DateTimePicker')) {\n                    // create a private copy of the defaults object\n                    _options = $.extend(true, {}, $.fn.datetimepicker.defaults, options);\n                    $this.data('DateTimePicker', dateTimePicker($this, _options));\n                }\n            });\n        } else if (typeof options === 'string') {\n            this.each(function () {\n                var $this = $(this),\n                    instance = $this.data('DateTimePicker');\n                if (!instance) {\n                    throw new Error('bootstrap-datetimepicker(\"' + options + '\") method was called on an element that is not using DateTimePicker');\n                }\n\n                returnValue = instance[options].apply(instance, args);\n                isInstance = returnValue === instance;\n            });\n\n            if (isInstance || $.inArray(options, thisMethods) > -1) {\n                return this;\n            }\n\n            return returnValue;\n        }\n\n        throw new TypeError('Invalid arguments for DateTimePicker: ' + options);\n    };\n\n    $.fn.datetimepicker.defaults = {\n        timeZone: '',\n        format: false,\n        dayViewHeaderFormat: 'MMMM YYYY',\n        extraFormats: false,\n        stepping: 1,\n        minDate: false,\n        maxDate: false,\n        useCurrent: true,\n        collapse: true,\n        locale: moment.locale(),\n        defaultDate: false,\n        disabledDates: false,\n        enabledDates: false,\n        icons: {\n            time: 'glyphicon glyphicon-time',\n            date: 'glyphicon glyphicon-calendar',\n            up: 'glyphicon glyphicon-chevron-up',\n            down: 'glyphicon glyphicon-chevron-down',\n            previous: 'glyphicon glyphicon-chevron-left',\n            next: 'glyphicon glyphicon-chevron-right',\n            today: 'glyphicon glyphicon-screenshot',\n            clear: 'glyphicon glyphicon-trash',\n            close: 'glyphicon glyphicon-remove'\n        },\n        tooltips: {\n            today: 'Go to today',\n            clear: 'Clear selection',\n            close: 'Close the picker',\n            selectMonth: 'Select Month',\n            prevMonth: 'Previous Month',\n            nextMonth: 'Next Month',\n            selectYear: 'Select Year',\n            prevYear: 'Previous Year',\n            nextYear: 'Next Year',\n            selectDecade: 'Select Decade',\n            prevDecade: 'Previous Decade',\n            nextDecade: 'Next Decade',\n            prevCentury: 'Previous Century',\n            nextCentury: 'Next Century',\n            pickHour: 'Pick Hour',\n            incrementHour: 'Increment Hour',\n            decrementHour: 'Decrement Hour',\n            pickMinute: 'Pick Minute',\n            incrementMinute: 'Increment Minute',\n            decrementMinute: 'Decrement Minute',\n            pickSecond: 'Pick Second',\n            incrementSecond: 'Increment Second',\n            decrementSecond: 'Decrement Second',\n            togglePeriod: 'Toggle Period',\n            selectTime: 'Select Time'\n        },\n        useStrict: false,\n        sideBySide: false,\n        daysOfWeekDisabled: false,\n        calendarWeeks: false,\n        viewMode: 'days',\n        toolbarPlacement: 'default',\n        showTodayButton: false,\n        showClear: false,\n        showClose: false,\n        widgetPositioning: {\n            horizontal: 'auto',\n            vertical: 'auto'\n        },\n        widgetParent: null,\n        ignoreReadonly: false,\n        keepOpen: false,\n        focusOnShow: true,\n        inline: false,\n        keepInvalid: false,\n        datepickerInput: '.datepickerinput',\n        keyBinds: {\n            up: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(7, 'd'));\n                } else {\n                    this.date(d.clone().add(this.stepping(), 'm'));\n                }\n            },\n            down: function (widget) {\n                if (!widget) {\n                    this.show();\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(7, 'd'));\n                } else {\n                    this.date(d.clone().subtract(this.stepping(), 'm'));\n                }\n            },\n            'control up': function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(1, 'y'));\n                } else {\n                    this.date(d.clone().add(1, 'h'));\n                }\n            },\n            'control down': function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(1, 'y'));\n                } else {\n                    this.date(d.clone().subtract(1, 'h'));\n                }\n            },\n            left: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(1, 'd'));\n                }\n            },\n            right: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(1, 'd'));\n                }\n            },\n            pageUp: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(1, 'M'));\n                }\n            },\n            pageDown: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(1, 'M'));\n                }\n            },\n            enter: function () {\n                this.hide();\n            },\n            escape: function () {\n                this.hide();\n            },\n            //tab: function (widget) { //this break the flow of the form. disabling for now\n            //    var toggle = widget.find('.picker-switch a[data-action=\"togglePicker\"]');\n            //    if(toggle.length > 0) toggle.click();\n            //},\n            'control space': function (widget) {\n                if (!widget) {\n                    return;\n                }\n                if (widget.find('.timepicker').is(':visible')) {\n                    widget.find('.btn[data-action=\"togglePeriod\"]').click();\n                }\n            },\n            t: function () {\n                this.date(this.getMoment());\n            },\n            'delete': function () {\n                this.clear();\n            }\n        },\n        debug: false,\n        allowInputToggle: false,\n        disabledTimeIntervals: false,\n        disabledHours: false,\n        enabledHours: false,\n        viewDate: false\n    };\n\n    return $.fn.datetimepicker;\n}));\n"]}