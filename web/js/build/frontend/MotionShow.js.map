{"version":3,"sources":["frontend/MotionShow.ts"],"names":["MotionParagraph","$element","_this","this","activeAmendmentId","$paraFirstLine","find","first","lineHeight","height","amends","sort","el1","el2","$","data","append","each","num","el","initInlineAmendmentPosition","toggleInlineAmendmentBehavior","prototype","$amendment","targetOffset","$prevBookmark","prevAll","delta","$pre","parseInt","css","showInlineAmendment","amendmentId","hideInlineAmendment","addClass","removeClass","$link","hasClass","on","ev","preventDefault","MotionShow","MotionInitiatorShow","LineNumberHighlighting_1","LineNumberHighlighting","$paragraphs","showComment","bind","hideComment","filter","trigger","i","s","location","hash","split","length","scrollintoview","top_offset","delSubmit","shareLinkClicked","markMovedParagraphs","initPrivateComments","initCmdEnterSubmit","msg","$node","paragraphNew","sectionId","parents","attr","paragraphNewFirstline","__t","replace","nodeName","parent","$msg","text","insertBefore","remove","currentTarget","$form","$target","form","target","bootbox","confirm","result","window","open","$commentHolder","$bookmark","isOnScreen","document","originalEvent"],"mappings":"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","file":"MotionShow.js","sourcesContent":["/// <reference path=\"../typings/jquery-typings.d.ts\" />\n\nimport '../shared/MotionInitiatorShow';\nimport { LineNumberHighlighting } from \"./LineNumberHighlighting\";\n\nclass MotionParagraph {\n    private activeAmendmentId: number = null;\n    private $paraFirstLine: JQuery;\n    private readonly lineHeight: number;\n\n    constructor(private $element: JQuery) {\n        this.$paraFirstLine = $element.find(\".lineNumber\").first();\n        this.lineHeight = this.$paraFirstLine.height();\n\n        let amends = $element.find(\".bookmarks > .amendment\");\n        amends = amends.sort(function (el1, el2) {\n            return $(el1).data(\"first-line\") - $(el2).data(\"first-line\");\n        });\n        $element.find(\".bookmarks\").append(amends);\n\n        $element.find('ul.bookmarks li.amendment').each((num, el) => {\n            this.initInlineAmendmentPosition($(el));\n            this.toggleInlineAmendmentBehavior($(el));\n        });\n    }\n\n    private initInlineAmendmentPosition($amendment: JQuery) {\n        let firstLine = $amendment.data(\"first-line\"),\n            targetOffset = (firstLine - this.$paraFirstLine.data(\"line-number\")) * this.lineHeight,\n            $prevBookmark = $amendment.prevAll(),\n            delta = targetOffset;\n        $prevBookmark.each(function () {\n            let $pre = $(this);\n            delta -= $pre.height();\n            delta -= parseInt($pre.css(\"margin-top\"));\n            delta -= 7;\n        });\n        if (delta < 0) {\n            delta = 0;\n        }\n        $amendment.css('margin-top', delta + \"px\");\n    }\n\n    private showInlineAmendment(amendmentId: number) {\n        if (this.activeAmendmentId) {\n            this.hideInlineAmendment(this.activeAmendmentId);\n        }\n        this.$element.find(\"> .textOrig\").addClass(\"hidden\");\n        this.$element.find(\"> .textAmendment\").addClass(\"hidden\");\n        this.$element.find(\"> .textAmendment.amendment\" + amendmentId).removeClass(\"hidden\");\n        this.$element.find(\".bookmarks .amendment\" + amendmentId).find(\"a\").addClass('active');\n        this.activeAmendmentId = amendmentId;\n    }\n\n    private hideInlineAmendment(amendmentId: number) {\n        this.$element.find(\"> .textOrig\").removeClass(\"hidden\");\n        this.$element.find(\"> .textAmendment\").addClass(\"hidden\");\n        this.$element.find(\".bookmarks .amendment\" + amendmentId).find(\"a\").removeClass('active');\n        this.activeAmendmentId = null;\n    }\n\n\n    private toggleInlineAmendmentBehavior($amendment: JQuery) {\n        const $link = $amendment.find(\"a\"),\n            amendmentId = $link.data(\"id\");\n        if ($(\"html\").hasClass(\"touchevents\")) {\n            $link.on(\"click\", (ev) => {\n                ev.preventDefault();\n                if (this.$element.find(\"> .textAmendment.amendment\" + amendmentId).hasClass(\"hidden\")) {\n                    this.showInlineAmendment(amendmentId)\n                } else {\n                    this.hideInlineAmendment(amendmentId);\n                }\n            });\n        } else {\n            $amendment.on(\"mouseover\", () => {\n                this.showInlineAmendment(amendmentId);\n            }).on(\"mouseout\", () => {\n                this.hideInlineAmendment(amendmentId);\n            });\n        }\n    }\n}\n\nclass MotionShow {\n    constructor() {\n        new MotionInitiatorShow();\n        new LineNumberHighlighting();\n\n        let $paragraphs = $('.motionTextHolder .paragraph');\n        $paragraphs.find('.comment .shower').on(\"click\", this.showComment.bind(this));\n        $paragraphs.find('.comment .hider').on(\"click\", this.hideComment.bind(this));\n\n        $paragraphs.filter('.commentsOpened').find('.comment .shower').trigger(\"click\");\n        $paragraphs.filter(':not(.commentsOpened)').find('.comment .hider').trigger(\"click\");\n\n        $paragraphs.each((i, el) => {\n            new MotionParagraph($(el));\n        });\n\n\n        $('.tagAdderHolder').on(\"click\", function (ev) {\n            ev.preventDefault();\n            $(this).addClass(\"hidden\");\n            $('#tagAdderForm').removeClass(\"hidden\");\n        });\n\n        let s = location.hash.split('#comm');\n        if (s.length == 2) {\n            $('#comment' + s[1]).scrollintoview({top_offset: -100});\n        }\n\n        $(\"form.delLink\").on(\"submit\", this.delSubmit.bind(this));\n        $(\".share_buttons a\").on(\"click\", this.shareLinkClicked.bind(this));\n\n        this.markMovedParagraphs();\n        this.initPrivateComments();\n        this.initCmdEnterSubmit();\n    }\n\n    private markMovedParagraphs() {\n        // Remove double markup\n        $(\".motionTextHolder .moved .moved\").removeClass('moved');\n\n        $(\".motionTextHolder .moved\").each(function () {\n            let $node = $(this),\n                paragraphNew = $node.data('moving-partner-paragraph'),\n                sectionId = $node.parents('.paragraph').first().attr('id').split('_')[1],\n                paragraphNewFirstline = $('#section_' + sectionId + '_' + paragraphNew).find('.lineNumber').first().data('line-number'),\n                msg: string;\n\n            if ($node.hasClass('inserted')) {\n                msg = __t('std', 'moved_paragraph_from_line');\n            } else {\n                msg = __t('std', 'moved_paragraph_to_line');\n            }\n            msg = msg.replace(/##LINE##/, paragraphNewFirstline).replace(/##PARA##/, (paragraphNew + 1));\n\n            if ($node[0].nodeName === 'LI') {\n                $node = $node.parent();\n            }\n            let $msg = $('<div class=\"movedParagraphHint\"></div>');\n            $msg.text(msg);\n            $msg.insertBefore($node);\n        });\n    }\n\n    private initPrivateComments() {\n        if ($('.privateParagraph, .privateNote').length > 0) {\n            $('.privateParagraphNoteOpener').removeClass('hidden');\n        }\n        $('.privateNoteOpener').on(\"click\", (ev) => {\n            ev.preventDefault();\n            $('.privateNoteOpener').remove();\n            $('.motionData .privateNotes').removeClass('hidden');\n            $('.motionData .privateNotes textarea').trigger(\"focus\");\n            $('.privateParagraphNoteOpener').removeClass('hidden');\n        });\n        $('.privateParagraphNoteOpener').on(\"click\", (ev) => {\n            $(ev.currentTarget).addClass('hidden');\n            const $form = $(ev.currentTarget).parents('.privateParagraphNoteHolder').find('form');\n            $form.removeClass('hidden');\n            $form.find('textarea').trigger(\"focus\");\n        });\n        $('.privateNotes blockquote').on(\"click\", () => {\n            $('.privateNotes blockquote').addClass('hidden');\n            $('.privateNotes form').removeClass('hidden');\n            $('.privateNotes textarea').trigger(\"focus\");\n        });\n        $('.privateParagraphNoteHolder blockquote').on(\"click\", (ev) => {\n            const $target = $(ev.currentTarget).parents('.privateParagraphNoteHolder');\n            $target.find('blockquote').addClass('hidden');\n            $target.find('form').removeClass('hidden');\n            $target.find('textarea').trigger(\"focus\");\n        });\n    }\n\n    private delSubmit(ev) {\n        ev.preventDefault();\n        let form = ev.target;\n        bootbox.confirm(__t(\"std\", \"del_confirm\"), (result) => {\n            if (result) {\n                form.trigger(\"submit\");\n            }\n        });\n    }\n\n    private shareLinkClicked(ev) {\n        let target = $(ev.currentTarget).attr(\"href\");\n        if (window.open(target, '_blank', 'width=600,height=460')) {\n            ev.preventDefault();\n        }\n    }\n\n    private showComment(ev) {\n        ev.preventDefault();\n        const $node = $(ev.currentTarget),\n            $commentHolder = $node.parents('.paragraph').first().find('.commentHolder'),\n            $bookmark = $node.parent();\n        $node.addClass('hidden');\n        $bookmark.find('.hider').removeClass('hidden');\n        $commentHolder.removeClass('hidden');\n        if (!$commentHolder.isOnScreen(0.1, 0.1)) {\n            $commentHolder.scrollintoview({top_offset: -100});\n        }\n    }\n\n    private hideComment(ev) {\n        const $node = $(ev.currentTarget),\n            $bookmark = $node.parent();\n        $node.addClass('hidden');\n        $bookmark.find('.shower').removeClass('hidden');\n\n        $node.parents('.paragraph').first().find('.commentHolder').addClass('hidden');\n        ev.preventDefault();\n    }\n\n    private initCmdEnterSubmit() {\n        $(document).on('keypress', 'form textarea', (ev) => {\n            if (ev.originalEvent['metaKey'] && ev.originalEvent['keyCode'] === 13) {\n                let $textarea = $(ev.currentTarget);\n                $textarea.parents(\"form\").first().find(\"button[type=submit]\").trigger(\"click\");\n            }\n        });\n    }\n}\n\nnew MotionShow();\n"]}