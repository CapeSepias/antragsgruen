{"version":3,"sources":["frontend/MotionShow.js","frontend/MotionShow.ts"],"names":["define","require","exports","LineNumberHighlighting_1","Object","defineProperty","value","MotionParagraph","[object Object]","$element","this","activeAmendmentId","$paraFirstLine","find","first","lineHeight","height","amends","sort","el1","el2","$","data","append","each","num","el","initInlineAmendmentPosition","toggleInlineAmendmentBehavior","$amendment","targetOffset","$prevBookmark","prevAll","delta","$pre","parseInt","css","amendmentId","hideInlineAmendment","addClass","removeClass","$link","hasClass","on","ev","preventDefault","showInlineAmendment","MotionInitiatorShow","LineNumberHighlighting","$paragraphs","showComment","bind","hideComment","filter","trigger","i","s","location","hash","split","length","scrollintoview","top_offset","delSubmit","shareLinkClicked","markMovedParagraphs","initPrivateComments","initCmdEnterSubmit","msg","$node","paragraphNew","sectionId","parents","attr","paragraphNewFirstline","__t","replace","nodeName","parent","$msg","text","insertBefore","remove","currentTarget","$form","$target","form","target","bootbox","confirm","result","submit","window","open","$commentHolder","$bookmark","isOnScreen","document","originalEvent"],"mappings":"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","file":"MotionShow.js","sourcesContent":[null,"/// <reference path=\"../typings/jquery-typings.d.ts\" />\n\nimport '../shared/MotionInitiatorShow';\nimport { LineNumberHighlighting } from \"./LineNumberHighlighting\";\n\nclass MotionParagraph {\n    private activeAmendmentId: number = null;\n    private $paraFirstLine: JQuery;\n    private readonly lineHeight: number;\n\n    constructor(private $element: JQuery) {\n        this.$paraFirstLine = $element.find(\".lineNumber\").first();\n        this.lineHeight = this.$paraFirstLine.height();\n\n        let amends = $element.find(\".bookmarks > .amendment\");\n        amends = amends.sort(function (el1, el2) {\n            return $(el1).data(\"first-line\") - $(el2).data(\"first-line\");\n        });\n        $element.find(\".bookmarks\").append(amends);\n\n        $element.find('ul.bookmarks li.amendment').each((num, el) => {\n            this.initInlineAmendmentPosition($(el));\n            this.toggleInlineAmendmentBehavior($(el));\n        });\n    }\n\n    private initInlineAmendmentPosition($amendment: JQuery) {\n        let firstLine = $amendment.data(\"first-line\"),\n            targetOffset = (firstLine - this.$paraFirstLine.data(\"line-number\")) * this.lineHeight,\n            $prevBookmark = $amendment.prevAll(),\n            delta = targetOffset;\n        $prevBookmark.each(function () {\n            let $pre = $(this);\n            delta -= $pre.height();\n            delta -= parseInt($pre.css(\"margin-top\"));\n            delta -= 7;\n        });\n        if (delta < 0) {\n            delta = 0;\n        }\n        $amendment.css('margin-top', delta + \"px\");\n    }\n\n    private showInlineAmendment(amendmentId: number) {\n        if (this.activeAmendmentId) {\n            this.hideInlineAmendment(this.activeAmendmentId);\n        }\n        this.$element.find(\"> .textOrig\").addClass(\"hidden\");\n        this.$element.find(\"> .textAmendment\").addClass(\"hidden\");\n        this.$element.find(\"> .textAmendment.amendment\" + amendmentId).removeClass(\"hidden\");\n        this.$element.find(\".bookmarks .amendment\" + amendmentId).find(\"a\").addClass('active');\n        this.activeAmendmentId = amendmentId;\n    }\n\n    private hideInlineAmendment(amendmentId: number) {\n        this.$element.find(\"> .textOrig\").removeClass(\"hidden\");\n        this.$element.find(\"> .textAmendment\").addClass(\"hidden\");\n        this.$element.find(\".bookmarks .amendment\" + amendmentId).find(\"a\").removeClass('active');\n        this.activeAmendmentId = null;\n    }\n\n\n    private toggleInlineAmendmentBehavior($amendment: JQuery) {\n        const $link = $amendment.find(\"a\"),\n            amendmentId = $link.data(\"id\");\n        if ($(\"html\").hasClass(\"touchevents\")) {\n            $link.on(\"click\", (ev) => {\n                ev.preventDefault();\n                if (this.$element.find(\"> .textAmendment.amendment\" + amendmentId).hasClass(\"hidden\")) {\n                    this.showInlineAmendment(amendmentId)\n                } else {\n                    this.hideInlineAmendment(amendmentId);\n                }\n            });\n        } else {\n            $amendment.on(\"mouseover\", () => {\n                this.showInlineAmendment(amendmentId);\n            }).on(\"mouseout\", () => {\n                this.hideInlineAmendment(amendmentId);\n            });\n        }\n    }\n}\n\nclass MotionShow {\n    constructor() {\n        new MotionInitiatorShow();\n        new LineNumberHighlighting();\n\n        let $paragraphs = $('.motionTextHolder .paragraph');\n        $paragraphs.find('.comment .shower').on(\"click\", this.showComment.bind(this));\n        $paragraphs.find('.comment .hider').on(\"click\", this.hideComment.bind(this));\n\n        $paragraphs.filter('.commentsOpened').find('.comment .shower').trigger(\"click\");\n        $paragraphs.filter(':not(.commentsOpened)').find('.comment .hider').trigger(\"click\");\n\n        $paragraphs.each((i, el) => {\n            new MotionParagraph($(el));\n        });\n\n\n        $('.tagAdderHolder').on(\"click\", function (ev) {\n            ev.preventDefault();\n            $(this).addClass(\"hidden\");\n            $('#tagAdderForm').removeClass(\"hidden\");\n        });\n\n        let s = location.hash.split('#comm');\n        if (s.length == 2) {\n            $('#comment' + s[1]).scrollintoview({top_offset: -100});\n        }\n\n        $(\"form.delLink\").on(\"submit\", this.delSubmit.bind(this));\n        $(\".share_buttons a\").on(\"click\", this.shareLinkClicked.bind(this));\n\n        this.markMovedParagraphs();\n        this.initPrivateComments();\n        this.initCmdEnterSubmit();\n    }\n\n    private markMovedParagraphs() {\n        // Remove double markup\n        $(\".motionTextHolder .moved .moved\").removeClass('moved');\n\n        $(\".motionTextHolder .moved\").each(function () {\n            let $node = $(this),\n                paragraphNew = $node.data('moving-partner-paragraph'),\n                sectionId = $node.parents('.paragraph').first().attr('id').split('_')[1],\n                paragraphNewFirstline = $('#section_' + sectionId + '_' + paragraphNew).find('.lineNumber').first().data('line-number'),\n                msg: string;\n\n            if ($node.hasClass('inserted')) {\n                msg = __t('std', 'moved_paragraph_from_line');\n            } else {\n                msg = __t('std', 'moved_paragraph_to_line');\n            }\n            msg = msg.replace(/##LINE##/, paragraphNewFirstline).replace(/##PARA##/, (paragraphNew + 1));\n\n            if ($node[0].nodeName === 'LI') {\n                $node = $node.parent();\n            }\n            let $msg = $('<div class=\"movedParagraphHint\"></div>');\n            $msg.text(msg);\n            $msg.insertBefore($node);\n        });\n    }\n\n    private initPrivateComments() {\n        if ($('.privateParagraph, .privateNote').length > 0) {\n            $('.privateParagraphNoteOpener').removeClass('hidden');\n        }\n        $('.privateNoteOpener').on(\"click\", (ev) => {\n            ev.preventDefault();\n            $('.privateNoteOpener').remove();\n            $('.motionData .privateNotes').removeClass('hidden');\n            $('.motionData .privateNotes textarea').trigger(\"focus\");\n            $('.privateParagraphNoteOpener').removeClass('hidden');\n        });\n        $('.privateParagraphNoteOpener button').on(\"click\", (ev) => {\n            $(ev.currentTarget).parents(\".privateParagraphNoteOpener\").addClass('hidden');\n            const $form = $(ev.currentTarget).parents('.privateParagraphNoteHolder').find('form');\n            $form.removeClass('hidden');\n            $form.find('textarea').trigger(\"focus\");\n        });\n        $('.privateNotes blockquote').on(\"click\", () => {\n            $('.privateNotes blockquote').addClass('hidden');\n            $('.privateNotes form').removeClass('hidden');\n            $('.privateNotes textarea').trigger(\"focus\");\n        });\n        $('.privateParagraphNoteHolder blockquote').on(\"click\", (ev) => {\n            const $target = $(ev.currentTarget).parents('.privateParagraphNoteHolder');\n            $target.find('blockquote').addClass('hidden');\n            $target.find('form').removeClass('hidden');\n            $target.find('textarea').trigger(\"focus\");\n        });\n    }\n\n    private delSubmit(ev) {\n        ev.preventDefault();\n        let form = ev.target;\n        bootbox.confirm(__t(\"std\", \"del_confirm\"), (result) => {\n            if (result) {\n                // noinspection JSDeprecatedSymbols\n                form.submit(); // Native submit() function, not the jQuery one\n            }\n        });\n    }\n\n    private shareLinkClicked(ev) {\n        let target = $(ev.currentTarget).attr(\"href\");\n        if (window.open(target, '_blank', 'width=600,height=460')) {\n            ev.preventDefault();\n        }\n    }\n\n    private showComment(ev) {\n        ev.preventDefault();\n        const $node = $(ev.currentTarget),\n            $commentHolder = $node.parents('.paragraph').first().find('.commentHolder'),\n            $bookmark = $node.parent();\n        $node.addClass('hidden');\n        $bookmark.find('.hider').removeClass('hidden');\n        $commentHolder.removeClass('hidden');\n        if (!$commentHolder.isOnScreen(0.1, 0.1)) {\n            $commentHolder.scrollintoview({top_offset: -100});\n        }\n    }\n\n    private hideComment(ev) {\n        const $node = $(ev.currentTarget),\n            $bookmark = $node.parent();\n        $node.addClass('hidden');\n        $bookmark.find('.shower').removeClass('hidden');\n\n        $node.parents('.paragraph').first().find('.commentHolder').addClass('hidden');\n        ev.preventDefault();\n    }\n\n    private initCmdEnterSubmit() {\n        $(document).on('keypress', 'form textarea', (ev) => {\n            if (ev.originalEvent['metaKey'] && ev.originalEvent['keyCode'] === 13) {\n                let $textarea = $(ev.currentTarget);\n                $textarea.parents(\"form\").first().find(\"button[type=submit]\").trigger(\"click\");\n            }\n        });\n    }\n}\n\nnew MotionShow();\n"]}