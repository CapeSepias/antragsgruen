{"version":3,"sources":["frontend/MotionMergeAmendmentsPublic.js","frontend/MotionMergeAmendmentsPublic.ts"],"names":["define","require","exports","Object","defineProperty","value","MotionMergeAmendmentsPublic","[object Object]","$widget","this","interval","initUpdateWidget","$updated","$updateWidget","find","addClass","window","setTimeout","removeClass","$draftContent","each","i","el","$el","$","amendmentId","data","undefined","parents","first","showMsg","get","updateUrl","success","$dateField","text","date","html","setContentEvents","showUpdated","alert","error","setInterval","reload","bind","clearInterval","$toggle","localStorage","state","getItem","prop","change","active","setItem","startInterval","stopInterval","trigger","click"],"mappings":"AAAAA,OAAO,CAAC,UAAW,YAAY,SAAUC,EAASC,GAC9C,aACAC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtDH,EAAQI,iCAA8B,ECI1CJ,EAAAI,4BAAA,MAOIC,YAAmBC,GAAAC,KAAAD,QAAAA,EAFXC,KAAAC,SAAmB,KAGvBD,KAAKE,mBAGDJ,cACJ,IAAIK,EAAWH,KAAKI,cAAcC,KAAK,YACvCF,EAASG,SAAS,UAClBC,OAAOC,YAAW,KACdL,EAASM,YAAY,YACtB,KAGCX,mBACJE,KAAKU,cAAcL,KAAK,eAAeM,MAAK,CAACC,EAAGC,KAC5C,IAAIC,EAAMC,EAAEF,GACRG,EAAcF,EAAIG,KAAK,qBACPC,IAAhBF,IACAF,EAAMA,EAAIK,QAAQ,uBAAuBC,QACzCJ,EAAcF,EAAIG,KAAK,iBAEvBD,IACAF,EAAIR,SAAS,wBACbQ,EAAIG,KAAK,cAAe,KACxBH,EAAIG,KAAK,MAAOH,EAAIG,KAAK,QAAU,cACnCH,EAAIG,KAAK,YAAa,cAK1BnB,OAAOuB,GACXN,EAAEO,IAAItB,KAAKuB,WAAYN,IACdA,EAAKO,SAIVxB,KAAKyB,WAAWC,KAAKT,EAAKU,MAC1B3B,KAAKU,cAAckB,KAAKX,EAAKW,MAC7B5B,KAAK6B,mBACDR,GACArB,KAAK8B,eAPLC,MAAMd,EAAKe,UAYflC,gBACkB,OAAlBE,KAAKC,WAGTD,KAAKC,SAAWM,OAAO0B,YAAYjC,KAAKkC,OAAOC,KAAKnC,MAAM,GAAQ,MAG9DF,eACkB,OAAlBE,KAAKC,WAGTM,OAAO6B,cAAcpC,KAAKC,UAC1BD,KAAKC,SAAW,MAGZH,mBACJE,KAAKI,cAAgBJ,KAAKD,QAAQM,KAAK,uBACvCL,KAAKU,cAAgBV,KAAKD,QAAQM,KAAK,iBACvCL,KAAKyB,WAAazB,KAAKD,QAAQM,KAAK,mBACpCL,KAAKuB,UAAYvB,KAAKD,QAAQkB,KAAK,cACnCjB,KAAK6B,mBAEL,IAAIQ,EAAUrC,KAAKI,cAAcC,KAAK,qBACtC,GAAIiC,aAAc,CACd,IAAIC,EAAQD,aAAaE,QAAQ,6BACnB,OAAVD,GACAF,EAAQI,KAAK,UAAqB,KAATF,GAGjCF,EAAQK,QAAO,KACX,IAAIC,EAAkBN,EAAQI,KAAK,WAC/BH,cACAA,aAAaM,QAAQ,4BAA8BD,EAAS,IAAM,KAElEA,EACA3C,KAAK6C,gBAEL7C,KAAK8C,kBAEVC,QAAQ,UAEX/C,KAAKI,cAAcC,KAAK,cAAc2C,MAAMhD,KAAKkC,OAAOC,KAAKnC,MAAM","file":"MotionMergeAmendmentsPublic.js","sourcesContent":[null,"interface ReloadResult {\n    success: boolean;\n    error?: string;\n    html?: string;\n    date?: string;\n}\n\nexport class MotionMergeAmendmentsPublic {\n    private $updateWidget: JQuery;\n    private updateUrl: string;\n    private $draftContent: JQuery;\n    private $dateField: JQuery;\n    private interval: number = null;\n\n    constructor(public $widget: JQuery) {\n        this.initUpdateWidget();\n    }\n\n    private showUpdated() {\n        let $updated = this.$updateWidget.find('.updated');\n        $updated.addClass('active');\n        window.setTimeout(() => {\n            $updated.removeClass('active');\n        }, 2000);\n    }\n\n    private setContentEvents() {\n        this.$draftContent.find(\".appendHint\").each((i, el) => {\n            let $el = $(el),\n                amendmentId = $el.data(\"amendment-id\");\n            if (amendmentId === undefined) {\n                $el = $el.parents(\"[data-amendment-id]\").first();\n                amendmentId = $el.data(\"amendment-id\");\n            }\n            if (amendmentId) {\n                $el.addClass(\"amendmentAjaxTooltip\");\n                $el.data(\"initialized\", \"0\");\n                $el.data(\"url\", $el.data(\"link\") + \"/ajax-diff\");\n                $el.data(\"placement\", \"bottom\");\n            }\n        });\n    }\n\n    private reload(showMsg: boolean) {\n        $.get(this.updateUrl, (data: ReloadResult) => {\n            if (!data.success) {\n                alert(data.error);\n                return;\n            }\n            this.$dateField.text(data.date);\n            this.$draftContent.html(data.html);\n            this.setContentEvents();\n            if (showMsg) {\n                this.showUpdated();\n            }\n        });\n    }\n\n    private startInterval() {\n        if (this.interval !== null) {\n            return;\n        }\n        this.interval = window.setInterval(this.reload.bind(this, false), 5000);\n    }\n\n    private stopInterval() {\n        if (this.interval === null) {\n            return;\n        }\n        window.clearInterval(this.interval);\n        this.interval = null;\n    }\n\n    private initUpdateWidget() {\n        this.$updateWidget = this.$widget.find('.motionUpdateWidget');\n        this.$draftContent = this.$widget.find('.draftContent');\n        this.$dateField = this.$widget.find('.mergeDraftDate');\n        this.updateUrl = this.$widget.data('reload-url');\n        this.setContentEvents();\n\n        let $toggle = this.$updateWidget.find('#autoUpdateToggle');\n        if (localStorage) {\n            let state = localStorage.getItem('merging-draft-auto-update');\n            if (state !== null) {\n                $toggle.prop('checked', (state == '1'));\n            }\n        }\n        $toggle.change(() => {\n            let active: boolean = $toggle.prop('checked');\n            if (localStorage) {\n                localStorage.setItem('merging-draft-auto-update', (active ? '1' : '0'));\n            }\n            if (active) {\n                this.startInterval();\n            } else {\n                this.stopInterval();\n            }\n        }).trigger('change');\n\n        this.$updateWidget.find('#updateBtn').click(this.reload.bind(this, true));\n    }\n}\n"]}