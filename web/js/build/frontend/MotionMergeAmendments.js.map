{"version":3,"sources":["frontend/MotionMergeAmendments.ts"],"names":["STATUS_ACCEPTED","STATUS_MODIFIED_ACCEPTED","STATUS_PROCESSED","STATUS_ADOPTED","STATUS_COMPLETED","AmendmentStatuses","init","statuses","console","log","Object","keys","forEach","amendmentId","statusListeners","getAmendmentStatus","registerParagraph","paragraph","push","setStatus","status","onAmendmentStatusChanged","getAll","MotionMergeChangeActions","removeEmptyParagraphs","$","each","i","el","childNodes","length","remove","accept","node","onFinished","$node","hasClass","insertAccept","deleteAccept","reject","insertReject","deleteReject","$removeEl","name","nodeName","toLowerCase","parent","css","height","animate","$this","removeClass","removeAttr","children","replaceWith","html","exports","MotionMergeChangeTooltip","$element","mouseX","mouseY","this","positionX","positionY","popover","container","animation","trigger","placement","$popover","data","window","setTimeout","width","elTop","offset","top","elHeight","content","getContent","bind","find","on","ev","stopPropagation","removePopupIfInactive","prototype","$myEl","cid","undefined","parents","first","addClass","$el","attr","__t","text","click","$list","alert","is","destroy","affectedChangesets","performActionWithUI","action","scrollX","scrollY","saveEditorSnapshot","call","focusTextarea","scrollTo","_this","onChanged","focusAtSameCid","stale","$stale","warn","e","MotionMergeAmendmentsTextarea","$holder","$changedIndicator","unchangedText","hasChanged","$textarea","edit","AntragsgruenEditor_1","AntragsgruenEditor","texteditor","getEditor","MotionMergeAmendments","addSubmitListener","val","getData","setText","acceptAll","rejectAll","prepareText","$text","appendHint","removeData","markupMovedParagraph","newText","setData","normalizeHtml","fire","msg","paragraphNew","replace","initializeTooltips","$target","currentTarget","activePopup","pageX","pageY","entities","&nbsp;","&ndash;","&auml;","&ouml;","&uuml;","&Auml;","&Ouml;","&Uuml;","&szlig;","&bdquo;","&ldquo;","&bull;","&sect;","&eacute;","&rsquo;","&euro;","ent","RegExp","hasChanges","MotionMergeAmendmentsParagraph","sectionId","parseInt","paragraphId","$changed","textarea","initButtons","element","$input","doToggle","reloadText","bootbox","confirm","result","initTooltip","currentStatus","preventDefault","$btn","indexOf","amendmentIds","url","join","get","collisions","str","getDraftData","amendmentToggles","id","$form","paragraphs","$para","currMouseX","offsetX","off","onLeavePage","initDraftSaving","cb","submit","setDraftDate","date","$draftSavingPanel","hide","lang","formatted","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","saveDraft","amendmentStatuses","para","isPublic","prop","ajax","type","public","JSON","stringify","_csrf","success","ret","Date","error","initAutosavingDraft","$toggle","setInterval","localStorage","state","getItem","change","active","setItem"],"mappings":"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","file":"MotionMergeAmendments.js","sourcesContent":["import { AntragsgruenEditor } from \"../shared/AntragsgruenEditor\";\nimport editor = CKEDITOR.editor;\n\nconst STATUS_ACCEPTED = 4;\nconst STATUS_MODIFIED_ACCEPTED = 6;\nconst STATUS_PROCESSED = 17;\nconst STATUS_ADOPTED = 8;\nconst STATUS_COMPLETED = 9;\n\nclass AmendmentStatuses {\n    private static statuses: { [amendmentId: number]: number };\n    private static statusListeners: { [amendmentId: number]: MotionMergeAmendmentsParagraph[] } = {};\n\n    public static init(statuses: { [amendmentId: number]: number }) {\n        console.log(\"Init statuses\");\n        AmendmentStatuses.statuses = statuses;\n        Object.keys(statuses).forEach(amendmentId => {\n            AmendmentStatuses.statusListeners[amendmentId] = [];\n        });\n    }\n\n    public static getAmendmentStatus(amendmentId: number): number {\n        return AmendmentStatuses.statuses[amendmentId];\n    }\n\n    public static registerParagraph(amendmentId: number, paragraph: MotionMergeAmendmentsParagraph) {\n        AmendmentStatuses.statusListeners[amendmentId].push(paragraph);\n    }\n\n    public static setStatus(amendmentId: number, status: number) {\n        AmendmentStatuses.statuses[amendmentId] = status;\n        AmendmentStatuses.statusListeners[amendmentId].forEach(paragraph => {\n            paragraph.onAmendmentStatusChanged(amendmentId, status);\n        });\n    }\n\n    public static getAll(): { [amendmentId: number]: number } {\n        return AmendmentStatuses.statuses;\n    }\n}\n\nexport class MotionMergeChangeActions {\n    public static removeEmptyParagraphs() {\n        $('.paragraphHolder').each((i, el) => {\n            if (el.childNodes.length == 0) {\n                $(el).remove();\n            }\n        });\n    }\n\n    public static accept(node: Element, onFinished: () => void = null) {\n        let $node = $(node);\n        if ($node.hasClass(\"ice-ins\")) {\n            MotionMergeChangeActions.insertAccept(node, onFinished);\n        }\n        if ($node.hasClass(\"ice-del\")) {\n            MotionMergeChangeActions.deleteAccept(node, onFinished);\n        }\n    }\n\n    public static reject(node: Element, onFinished: () => void = null) {\n        let $node = $(node);\n        if ($node.hasClass(\"ice-ins\")) {\n            MotionMergeChangeActions.insertReject($node, onFinished);\n        }\n        if ($node.hasClass(\"ice-del\")) {\n            MotionMergeChangeActions.deleteReject($node, onFinished);\n        }\n    }\n\n    public static insertReject($node: JQuery, onFinished: () => void = null) {\n        let $removeEl: JQuery,\n            name = $node[0].nodeName.toLowerCase();\n        if (name == 'li') {\n            $removeEl = $node.parent();\n        } else {\n            $removeEl = $node;\n        }\n        if (name == 'ul' || name == 'ol' || name == 'li' || name == 'blockquote' || name == 'pre' || name == 'p') {\n            $removeEl.css(\"overflow\", \"hidden\").height($removeEl.height());\n            $removeEl.animate({\"height\": \"0\"}, 250, () => {\n                $removeEl.remove();\n                $(\".collidingParagraph:empty\").remove();\n                MotionMergeChangeActions.removeEmptyParagraphs();\n                if (onFinished) onFinished();\n            });\n        } else {\n            $removeEl.remove();\n            if (onFinished) onFinished();\n        }\n    }\n\n    public static insertAccept(node: Element, onFinished: () => void = null) {\n        let $this: JQuery = $(node);\n        $this.removeClass(\"ice-cts ice-ins appendHint moved\");\n        $this.removeAttr(\"data-moving-partner data-moving-partner-id data-moving-partner-paragraph data-moving-msg\");\n        if (node.nodeName.toLowerCase() == 'ul' || node.nodeName.toLowerCase() == 'ol') {\n            $this.children().removeClass(\"ice-cts\").removeClass(\"ice-ins\").removeClass(\"appendHint\");\n        }\n        if (node.nodeName.toLowerCase() == 'li') {\n            $this.parent().removeClass(\"ice-cts\").removeClass(\"ice-ins\").removeClass(\"appendHint\");\n        }\n        if (node.nodeName.toLowerCase() == 'ins') {\n            $this.replaceWith($this.html());\n        }\n        if (onFinished) onFinished();\n    }\n\n    public static deleteReject($node: JQuery, onFinished: () => void = null) {\n        $node.removeClass(\"ice-cts ice-del appendHint\");\n        $node.removeAttr(\"data-moving-partner data-moving-partner-id data-moving-partner-paragraph data-moving-msg\");\n        let nodeName = $node[0].nodeName.toLowerCase();\n        if (nodeName == 'ul' || nodeName == 'ol') {\n            $node.children().removeClass(\"ice-cts\").removeClass(\"ice-del\").removeClass(\"appendHint\");\n        }\n        if (nodeName == 'li') {\n            $node.parent().removeClass(\"ice-cts\").removeClass(\"ice-del\").removeClass(\"appendHint\");\n        }\n        if (nodeName == 'del') {\n            $node.replaceWith($node.html());\n        }\n        if (onFinished) onFinished();\n    }\n\n    public static deleteAccept(node: Element, onFinished: () => void = null) {\n        let name = node.nodeName.toLowerCase(),\n            $removeEl: JQuery;\n        if (name == 'li') {\n            $removeEl = $(node).parent();\n        } else {\n            $removeEl = $(node);\n        }\n\n        if (name == 'ul' || name == 'ol' || name == 'li' || name == 'blockquote' || name == 'pre' || name == 'p') {\n            $removeEl.css(\"overflow\", \"hidden\").height($removeEl.height());\n            $removeEl.animate({\"height\": \"0\"}, 250, () => {\n                $removeEl.remove();\n                $(\".collidingParagraph:empty\").remove();\n                MotionMergeChangeActions.removeEmptyParagraphs();\n                if (onFinished) onFinished();\n            });\n        } else {\n            $removeEl.remove();\n            if (onFinished) onFinished();\n        }\n    }\n}\n\n\nclass MotionMergeChangeTooltip {\n    constructor(private $element: JQuery, mouseX: number, mouseY: number, private parent: MotionMergeAmendmentsTextarea) {\n        let positionX: number = null,\n            positionY: number = null;\n        $element.popover({\n            'container': 'body',\n            'animation': false,\n            'trigger': 'manual',\n            'placement': function (popover) {\n                let $popover = $(<any>popover);\n                $popover.data(\"element\", $element);\n                window.setTimeout(() => {\n                    let width = $popover.width(),\n                        elTop = $element.offset().top,\n                        elHeight = $element.height();\n                    if (positionX === null && width > 0) {\n                        positionX = (mouseX - width / 2);\n                        positionY = mouseY + 10;\n                        if (positionY < (elTop + 19)) {\n                            positionY = elTop + 19;\n                        }\n                        if (positionY > elTop + elHeight) {\n                            positionY = elTop + elHeight;\n                        }\n                    }\n                    $popover.css(\"left\", positionX + \"px\");\n                    $popover.css(\"top\", positionY + \"px\");\n                }, 1);\n                return \"bottom\";\n            },\n            'html': true,\n            'content': this.getContent.bind(this)\n        });\n\n        $element.popover('show');\n        let $popover: JQuery = $element.find(\"> .popover\");\n        $popover.on(\"mousemove\", (ev) => {\n            ev.stopPropagation();\n        });\n        window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n    }\n\n    private getContent() {\n        let $myEl: JQuery = this.$element,\n            html,\n            cid = $myEl.data(\"cid\");\n        if (cid == undefined) {\n            cid = $myEl.parent().data(\"cid\");\n        }\n        $myEl.parents(\".texteditor\").first().find(\"[data-cid=\" + cid + \"]\").addClass(\"hover\");\n\n        html = '<div>';\n        html += '<button type=\"button\" class=\"accept btn btn-sm btn-default\"></button>';\n        html += '<button type=\"button\" class=\"reject btn btn-sm btn-default\"></button>';\n        html += '<a href=\"#\" class=\"btn btn-small btn-default opener\" target=\"_blank\"><span class=\"glyphicon glyphicon-new-window\"></span></a>';\n        html += '<div class=\"initiator\" style=\"font-size: 0.8em;\"></div>';\n        html += '</div>';\n        let $el: JQuery = $(html);\n        $el.find(\".opener\").attr(\"href\", $myEl.data(\"link\")).attr(\"title\", __t(\"merge\", \"title_open_in_blank\"));\n        $el.find(\".initiator\").text(__t(\"merge\", \"initiated_by\") + \": \" + $myEl.data(\"username\"));\n        if ($myEl.hasClass(\"ice-ins\")) {\n            $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n            $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n        } else if ($myEl.hasClass(\"ice-del\")) {\n            $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n            $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n        } else if ($myEl[0].nodeName.toLowerCase() == 'li') {\n            let $list = $myEl.parent();\n            if ($list.hasClass(\"ice-ins\")) {\n                $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n                $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n            } else if ($list.hasClass(\"ice-del\")) {\n                $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n                $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n            } else {\n                console.log(\"unknown\", $list);\n            }\n        } else {\n            console.log(\"unknown\", $myEl);\n            alert(\"unknown\");\n        }\n        return $el;\n    }\n\n    private removePopupIfInactive() {\n        if (this.$element.is(\":hover\")) {\n            return window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n        }\n        if ($(\"body\").find(\".popover:hover\").length > 0) {\n            return window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n        }\n        this.destroy();\n    }\n\n    private affectedChangesets() {\n        let cid = this.$element.data(\"cid\");\n        if (cid == undefined) {\n            cid = this.$element.parent().data(\"cid\");\n        }\n        return this.$element.parents(\".texteditor\").find(\"[data-cid=\" + cid + \"]\");\n    }\n\n    private performActionWithUI(action) {\n        let scrollX = window.scrollX,\n            scrollY = window.scrollY;\n\n        this.parent.saveEditorSnapshot();\n        this.destroy();\n        action.call(this);\n        this.parent.focusTextarea();\n\n        window.scrollTo(scrollX, scrollY);\n    }\n\n    private accept() {\n        this.performActionWithUI(() => {\n            this.affectedChangesets().each((i, el) => {\n                MotionMergeChangeActions.accept(el, () => {\n                    this.parent.onChanged();\n                });\n            });\n        });\n    }\n\n    private reject() {\n        this.performActionWithUI(() => {\n            this.affectedChangesets().each((i, el) => {\n                MotionMergeChangeActions.reject(el, () => {\n                    this.parent.onChanged();\n                });\n            });\n        });\n    }\n\n    public destroy() {\n        this.$element.popover(\"hide\").popover(\"destroy\");\n\n        let cid = this.$element.data(\"cid\");\n        if (cid == undefined) {\n            cid = this.$element.parent().data(\"cid\");\n        }\n\n        let focusAtSameCid = false;\n        this.$element.parents(\".texteditor\").first().find(\"[data-cid=\" + cid + \"]\").each((i, el) => {\n            if ($(el).is(\":hover\")) {\n                focusAtSameCid = true;\n            }\n        });\n        if (!focusAtSameCid) {\n            this.$element.parents(\".texteditor\").first().find(\"[data-cid=\" + cid + \"]\").removeClass(\"hover\");\n        }\n\n        try {\n            // Remove stale objects that were not removed correctly previously\n            $(\".popover\").each((i, stale) => {\n                const $stale = $(stale);\n                if (!$stale.data(\"element\").is(\":hover\")) {\n                    $stale.popover(\"hide\").popover(\"destroy\");\n                    $stale.remove();\n                    console.warn(\"Removed stale window: \", $stale);\n                }\n            });\n        } catch (e) {\n        }\n    }\n}\n\nclass MotionMergeAmendmentsTextarea {\n    private texteditor: editor;\n    private unchangedText: string = null;\n    private hasChanged: boolean = false;\n\n    private prepareText(html: string) {\n        let $text: JQuery = $('<div>' + html + '</div>');\n\n        // Move the amendment-Data from OL's and UL's to their list items\n        $text.find(\"ul.appendHint, ol.appendHint\").each((i, el) => {\n            let $this: JQuery = $(el),\n                appendHint = $this.data(\"append-hint\");\n            $this.find(\"> li\").addClass(\"appendHint\").attr(\"data-append-hint\", appendHint)\n                .attr(\"data-link\", $this.data(\"link\"))\n                .attr(\"data-username\", $this.data(\"username\"));\n            $this.removeClass(\"appendHint\").removeData(\"append-hint\");\n        });\n\n        // Remove double markup\n        $text.find(\".moved .moved\").removeClass('moved');\n        $text.find(\".moved\").each(this.markupMovedParagraph.bind(this));\n\n        // Add hints about starting / ending collisions\n        $text.find(\".hasCollisions\")\n            .attr(\"data-collision-start-msg\", __t('merge', 'colliding_start'))\n            .attr(\"data-collision-end-msg\", __t('merge', 'colliding_end'));\n\n        let newText = $text.html();\n        this.texteditor.setData(newText);\n        this.unchangedText = this.normalizeHtml(this.texteditor.getData());\n        this.texteditor.fire('saveSnapshot');\n        this.onChanged();\n    }\n\n    private markupMovedParagraph(i, el) {\n        let $node = $(el),\n            paragraphNew = $node.data('moving-partner-paragraph'),\n            msg: string;\n\n        if ($node.hasClass('inserted')) {\n            msg = __t('std', 'moved_paragraph_from');\n        } else {\n            msg = __t('std', 'moved_paragraph_to');\n        }\n        msg = msg.replace(/##PARA##/, (paragraphNew + 1));\n\n        if ($node[0].nodeName === 'LI') {\n            $node = $node.parent();\n        }\n\n        $node.attr(\"data-moving-msg\", msg);\n    }\n\n    private initializeTooltips() {\n        this.$holder.on(\"mouseover\", \".appendHint\", (ev) => {\n            const $target = $(ev.currentTarget);\n            if ($target.parents('.paragraphWrapper').first().find('.amendmentStatus.open').length > 0) {\n                return;\n            }\n            if (MotionMergeAmendments.activePopup) {\n                MotionMergeAmendments.activePopup.destroy();\n            }\n            MotionMergeAmendments.activePopup = new MotionMergeChangeTooltip($target, ev.pageX, ev.pageY, this);\n        });\n    }\n\n    private acceptAll() {\n        this.texteditor.fire('saveSnapshot');\n        this.$holder.find(\".collidingParagraph\").each((i, el) => {\n            let $this = $(el);\n            $this.find(\".collidingParagraphHead\").remove();\n            $this.replaceWith($this.children());\n        });\n        this.$holder.find(\".ice-ins\").each((i, el) => {\n            MotionMergeChangeActions.insertAccept(el);\n        });\n        this.$holder.find(\".ice-del\").each((i, el) => {\n            MotionMergeChangeActions.deleteAccept(el);\n        });\n    }\n\n    private rejectAll() {\n        this.texteditor.fire('saveSnapshot');\n        this.$holder.find(\".collidingParagraph\").each((i, el) => {\n            $(el).remove();\n        });\n        this.$holder.find(\".ice-ins\").each((i, el) => {\n            MotionMergeChangeActions.insertReject($(el));\n        });\n        this.$holder.find(\".ice-del\").each((i, el) => {\n            MotionMergeChangeActions.deleteReject($(el));\n        });\n    }\n\n    public saveEditorSnapshot() {\n        this.texteditor.fire('saveSnapshot');\n    }\n\n    public focusTextarea() {\n        //this.$holder.find(\".texteditor\").focus();\n        // This lead to strange cursor behavior, e.g. when removing a colliding paragraph\n    }\n\n    public getContent(): string {\n        return this.texteditor.getData();\n    }\n\n    public setText(html: string) {\n        this.prepareText(html);\n        this.initializeTooltips();\n    }\n\n    private normalizeHtml(html: string) {\n        const entities = {\n            '&nbsp;': ' ',\n            '&ndash;': '-',\n            '&auml;': 'ä',\n            '&ouml;': 'ö',\n            '&uuml;': 'ü',\n            '&Auml;': 'Ä',\n            '&Ouml;': 'Ö',\n            '&Uuml;': 'Ü',\n            '&szlig;': 'ß',\n            '&bdquo;': '„',\n            '&ldquo;': '“',\n            '&bull;': '•',\n            '&sect;': '§',\n            '&eacute;': 'é',\n            '&rsquo;': '’',\n            '&euro;': '€'\n        };\n        Object.keys(entities).forEach(ent => {\n            html = html.replace(new RegExp(ent, 'g'), entities[ent]);\n        });\n\n        return html.replace(/\\s+</g, '<').replace(/>\\s+/g, '>').replace(/<[^>]*>/g, '');\n    }\n\n    public onChanged() {\n        if (this.normalizeHtml(this.texteditor.getData()) === this.unchangedText) {\n            this.$changedIndicator.addClass(\"unchanged\");\n            this.hasChanged = false;\n        } else {\n            this.$changedIndicator.removeClass(\"unchanged\");\n            this.hasChanged = true;\n        }\n    }\n\n    public hasChanges(): boolean {\n        return this.hasChanged;\n    }\n\n    constructor(private $holder: JQuery, private $changedIndicator: JQuery) {\n        let $textarea = $holder.find(\".texteditor\");\n        let edit = new AntragsgruenEditor($textarea.attr(\"id\"));\n        this.texteditor = edit.getEditor();\n        MotionMergeAmendments.addSubmitListener(() => {\n            $holder.find(\"textarea.raw\").val(this.texteditor.getData());\n            $holder.find(\"textarea.consolidated\").val(this.texteditor.getData());\n        });\n\n        this.setText(this.texteditor.getData());\n\n        this.$holder.find(\".acceptAllChanges\").click(this.acceptAll.bind(this));\n        this.$holder.find(\".rejectAllChanges\").click(this.rejectAll.bind(this));\n\n        this.texteditor.on('change', this.onChanged.bind(this));\n    }\n}\n\nclass MotionMergeAmendmentsParagraph {\n    public sectionId: number;\n    public paragraphId: number;\n    public textarea: MotionMergeAmendmentsTextarea;\n\n    constructor(private $holder: JQuery) {\n        this.sectionId = parseInt($holder.data('sectionId'));\n        this.paragraphId = parseInt($holder.data('paragraphId'));\n\n        const $textarea = $holder.find(\".wysiwyg-textarea\");\n        const $changed = $holder.find(\".changedIndicator\");\n        this.textarea = new MotionMergeAmendmentsTextarea($textarea, $changed);\n\n        this.initButtons();\n        $holder.find(\".amendmentStatus\").each((i: number, element) => {\n            AmendmentStatuses.registerParagraph($(element).data(\"amendment-id\"), this);\n        });\n    }\n\n    private initButtons() {\n        this.$holder.find('.toggleAmendment').click((ev) => {\n            const $input = $(ev.currentTarget).find(\".amendmentActive\");\n            const doToggle = () => {\n                if (parseInt($input.val()) === 1) {\n                    $input.val(\"0\");\n                    $input.parents(\".btn-group\").find(\".btn\").addClass(\"btn-default\").removeClass(\"btn-success\");\n                } else {\n                    $input.val(\"1\");\n                    $input.parents(\".btn-group\").find(\".btn\").removeClass(\"btn-default\").addClass(\"btn-success\");\n                }\n                this.reloadText();\n            };\n\n            if (this.textarea.hasChanges()) {\n                bootbox.confirm(__t('merge', 'reloadParagraph'), (result) => {\n                    if (result) {\n                        doToggle();\n                    }\n                });\n            } else {\n                doToggle();\n            }\n        });\n\n        const initTooltip = ($holder: JQuery) => {\n            const amendmentId = parseInt($holder.data(\"amendment-id\"));\n            const currentStatus = AmendmentStatuses.getAmendmentStatus(amendmentId);\n\n            $holder.find(\".dropdown-menu .selected\").removeClass(\"selected\");\n            $holder.find(\".dropdown-menu .status\" + currentStatus).addClass(\"selected\");\n        };\n\n        this.$holder.find('.btn-group.amendmentStatus').on('show.bs.dropdown', ev => {\n            initTooltip($(ev.currentTarget))\n        });\n\n        this.$holder.find(\".btn-group .setStatus\").click(ev => {\n            ev.preventDefault();\n            const $holder = $(ev.currentTarget).parents(\".btn-group\");\n            const amendmentId = parseInt($holder.data(\"amendment-id\"));\n            AmendmentStatuses.setStatus(amendmentId, parseInt($(ev.currentTarget).data(\"status\")));\n            initTooltip($holder);\n        });\n    }\n\n    public onAmendmentStatusChanged(amendmentId: number, status: number) {\n        if (this.textarea.hasChanges()) {\n            console.log(\"Skipping, as there are changes\");\n            return;\n        }\n        const $holder = this.$holder.find(\".amendmentStatus[data-amendment-id=\" + amendmentId + \"]\");\n        const $btn = $holder.find(\".btn\");\n        const $input = $holder.find(\"input.amendmentActive\");\n        if ([\n            STATUS_ACCEPTED,\n            STATUS_MODIFIED_ACCEPTED,\n            STATUS_PROCESSED,\n            STATUS_ADOPTED,\n            STATUS_COMPLETED\n        ].indexOf(status) !== -1) {\n            $input.val(\"1\");\n            $btn.removeClass(\"btn-default\").addClass(\"btn-success\");\n        } else {\n            $input.val(\"0\");\n            $btn.addClass(\"btn-default\").removeClass(\"btn-success\");\n        }\n        this.reloadText();\n    }\n\n    private reloadText() {\n        const amendmentIds = [];\n        this.$holder.find(\".amendmentActive[value='1']\").each((i, el) => {\n            amendmentIds.push(parseInt($(el).data('amendment-id')));\n        });\n        const url = this.$holder.data(\"reload-url\").replace('DUMMY', amendmentIds.join(\",\"));\n        $.get(url, (data) => {\n            this.textarea.setText(data.text);\n\n            let collisions = '';\n            data.collisions.forEach(str => {\n                collisions += str;\n            });\n\n            this.$holder.find(\".collisionsHolder\").html(collisions);\n            if (data.collisions.length > 0) {\n                this.$holder.addClass(\"hasCollisions\");\n            } else {\n                this.$holder.removeClass(\"hasCollisions\");\n            }\n        });\n    }\n\n    public getDraftData() {\n        const amendmentToggles = {};\n        this.$holder.find(\".amendmentStatus\").each((id, el) => {\n            const $el = $(el);\n            amendmentToggles[$el.data(\"amendment-id\")] = ($el.find(\".btn-success\").length > 0);\n        });\n        return {\n            amendmentToggles,\n            text: this.textarea.getContent(),\n        };\n    }\n}\n\n/**\n * Singleton object\n */\nexport class MotionMergeAmendments {\n    public static activePopup: MotionMergeChangeTooltip = null;\n    public static currMouseX: number = null;\n    public static $form;\n\n    public $draftSavingPanel: JQuery;\n    private paragraphs: MotionMergeAmendmentsParagraph[] = [];\n\n    constructor($form: JQuery) {\n        MotionMergeAmendments.$form = $form;\n        AmendmentStatuses.init($form.data(\"amendment-statuses\"));\n\n        $(\".paragraphWrapper\").each((i, el) => {\n            const $para = $(el);\n            $para.find(\".wysiwyg-textarea\").on(\"mousemove\", (ev) => {\n                MotionMergeAmendments.currMouseX = ev.offsetX;\n            });\n\n            this.paragraphs.push(new MotionMergeAmendmentsParagraph($para));\n        });\n\n        MotionMergeAmendments.$form.on(\"submit\", () => {\n            $(window).off(\"beforeunload\", MotionMergeAmendments.onLeavePage);\n        });\n        $(window).on(\"beforeunload\", MotionMergeAmendments.onLeavePage);\n\n        this.initDraftSaving();\n    }\n\n    public static onLeavePage(): string {\n        return __t(\"std\", \"leave_changed_page\");\n    }\n\n    public static addSubmitListener(cb) {\n        this.$form.submit(cb);\n    }\n\n    private setDraftDate(date: Date) {\n        this.$draftSavingPanel.find(\".lastSaved .none\").hide();\n\n        let options = {\n                year: 'numeric', month: 'numeric', day: 'numeric',\n                hour: 'numeric', minute: 'numeric',\n                hour12: false\n            },\n            lang: string = $(\"html\").attr(\"lang\"),\n            formatted = new Intl.DateTimeFormat(lang, options).format(date);\n\n        this.$draftSavingPanel.find(\".lastSaved .value\").text(formatted);\n    }\n\n    private saveDraft() {\n        let data = {\n            \"amendmentStatuses\": AmendmentStatuses.getAll(),\n            \"paragraphs\": {},\n        };\n        this.paragraphs.forEach(para => {\n            data.paragraphs[para.sectionId + '_' + para.paragraphId] = para.getDraftData();\n        });\n        let isPublic: boolean = this.$draftSavingPanel.find('input[name=public]').prop('checked');\n\n        $.ajax({\n            type: \"POST\",\n            url: MotionMergeAmendments.$form.data('draftSaving'),\n            data: {\n                'public': (isPublic ? 1 : 0),\n                'data': JSON.stringify(data),\n                '_csrf': MotionMergeAmendments.$form.find('> input[name=_csrf]').val()\n            },\n            success: (ret) => {\n                if (ret['success']) {\n                    this.$draftSavingPanel.find('.savingError').addClass('hidden');\n                    this.setDraftDate(new Date(ret['date']));\n                    if (isPublic) {\n                        MotionMergeAmendments.$form.find('.publicLink').removeClass('hidden');\n                    } else {\n                        MotionMergeAmendments.$form.find('.publicLink').addClass('hidden');\n                    }\n                } else {\n                    this.$draftSavingPanel.find('.savingError').removeClass('hidden');\n                    this.$draftSavingPanel.find('.savingError .errorNetwork').addClass('hidden');\n                    this.$draftSavingPanel.find('.savingError .errorHolder').text(ret['error']).removeClass('hidden');\n                }\n            },\n            error: () => {\n                this.$draftSavingPanel.find('.savingError').removeClass('hidden');\n                this.$draftSavingPanel.find('.savingError .errorNetwork').removeClass('hidden');\n                this.$draftSavingPanel.find('.savingError .errorHolder').text('').addClass('hidden');\n            }\n        });\n    }\n\n    private initAutosavingDraft() {\n        let $toggle: JQuery = this.$draftSavingPanel.find('input[name=autosave]');\n\n        window.setInterval(() => {\n            if ($toggle.prop('checked')) {\n                this.saveDraft();\n            }\n        }, 5000);\n\n        if (localStorage) {\n            let state = localStorage.getItem('merging-draft-auto-save');\n            if (state !== null) {\n                $toggle.prop('checked', (state == '1'));\n            }\n        }\n        $toggle.change(() => {\n            let active: boolean = $toggle.prop('checked');\n            if (localStorage) {\n                localStorage.setItem('merging-draft-auto-save', (active ? '1' : '0'));\n            }\n        }).trigger('change');\n    }\n\n    private initDraftSaving() {\n        this.$draftSavingPanel = MotionMergeAmendments.$form.find('#draftSavingPanel');\n        this.$draftSavingPanel.find('.saveDraft').on('click', this.saveDraft.bind(this));\n        this.$draftSavingPanel.find('input[name=public]').on('change', this.saveDraft.bind(this));\n        this.initAutosavingDraft();\n\n        if (this.$draftSavingPanel.data(\"resumed-date\")) {\n            let date = new Date(this.$draftSavingPanel.data(\"resumed-date\"));\n            this.setDraftDate(date);\n        }\n\n        $(\"#yii-debug-toolbar\").remove();\n    }\n}\n"]}