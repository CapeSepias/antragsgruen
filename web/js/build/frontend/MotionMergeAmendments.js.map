{"version":3,"sources":["frontend/MotionMergeAmendments.ts"],"names":["MotionMergeChangeActions","removeEmptyParagraphs","$","each","i","el","childNodes","length","remove","accept","node","$node","hasClass","insertAccept","deleteAccept","reject","insertReject","deleteReject","$removeEl","name","nodeName","toLowerCase","parent","css","height","animate","$this","removeClass","removeAttr","children","replaceWith","html","exports","MotionMergeChangeTooltip","$element","mouseX","mouseY","this","positionX","positionY","popover","container","animation","trigger","placement","$popover","window","setTimeout","width","elTop","offset","top","elHeight","content","getContent","bind","find","on","ev","stopPropagation","removePopupIfInactive","prototype","$myEl","cid","data","undefined","parents","first","addClass","$el","attr","__t","text","click","$list","console","log","alert","is","destroy","affectedChangesets","performActionWithUI","action","scrollX","scrollY","saveEditorSnapshot","call","focusTextarea","scrollTo","_this","$popovers","e","MotionMergeConflictTooltip","currMouseX","title","Math","floor","left","$para","overflow","$parent","MotionMergeAmendmentsTextarea","$holder","rootObject","$textarea","edit","AntragsgruenEditor_1","AntragsgruenEditor","texteditor","getEditor","addSubmitListener","val","getData","prepareText","initializeTooltips","acceptAll","rejectAll","$text","appendHint","removeData","markupMovedParagraph","newText","setData","msg","paragraphNew","replace","target","MotionMergeAmendments","activePopup","currentTarget","pageX","pageY","fire","MotionMergeAmendmentsParagraph","sectionId","parseInt","paragraphId","initButtons","hasChanged","$input","reloadText","amendmentIds","push","url","join","get","$form","textareas","offsetX","off","onLeavePage","initDraftSaving","cb","submit","setDraftDate","date","$draftSavingPanel","hide","lang","formatted","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","saveDraft","sections","_i","_a","Object","getOwnPropertyNames","id","isPublic","prop","ajax","type","public","_csrf","success","ret","Date","error","initAutosavingDraft","$toggle","setInterval","localStorage","state","getItem","change","active","setItem"],"mappings":"0IAGA,IAAAA,EAAA,WAAA,SAAAA,KAmGA,OAlGkBA,EAAAC,sBAAd,WACIC,EAAE,oBAAoBC,KAAK,SAACC,EAAGC,GACC,GAAxBA,EAAGC,WAAWC,QACdL,EAAEG,GAAIG,YAKJR,EAAAS,OAAd,SAAqBC,GACjB,IAAIC,EAAQT,EAAEQ,GACVC,EAAMC,SAAS,YACfZ,EAAyBa,aAAaH,GAEtCC,EAAMC,SAAS,YACfZ,EAAyBc,aAAaJ,IAIhCV,EAAAe,OAAd,SAAqBL,GACjB,IAAIC,EAAQT,EAAEQ,GACVC,EAAMC,SAAS,YACfZ,EAAyBgB,aAAaL,GAEtCA,EAAMC,SAAS,YACfZ,EAAyBiB,aAAaN,IAIhCX,EAAAgB,aAAd,SAA2BL,GACvB,IAAIO,EACAC,EAAOR,EAAM,GAAGS,SAASC,cAEzBH,EADQ,MAARC,EACYR,EAAMW,SAENX,EAEJ,MAARQ,GAAwB,MAARA,GAAwB,MAARA,GAAwB,cAARA,GAAgC,OAARA,GAAyB,KAARA,GACzFD,EAAUK,IAAI,WAAY,UAAUC,OAAON,EAAUM,UACrDN,EAAUO,QAAQ,CAACD,OAAU,KAAM,IAAK,WACpCN,EAAUV,SACVN,EAAE,6BAA6BM,SAC/BR,EAAyBC,2BAG7BiB,EAAUV,UAIJR,EAAAa,aAAd,SAA2BH,GACvB,IAAIgB,EAAgBxB,EAAEQ,GACtBgB,EAAMC,YAAY,oCAClBD,EAAME,WAAW,4FACkB,MAA/BlB,EAAKU,SAASC,eAAwD,MAA/BX,EAAKU,SAASC,eACrDK,EAAMG,WAAWF,YAAY,WAAWA,YAAY,WAAWA,YAAY,cAE5C,MAA/BjB,EAAKU,SAASC,eACdK,EAAMJ,SAASK,YAAY,WAAWA,YAAY,WAAWA,YAAY,cAE1C,OAA/BjB,EAAKU,SAASC,eACdK,EAAMI,YAAYJ,EAAMK,SAIlB/B,EAAAiB,aAAd,SAA2BN,GACvBA,EAAMgB,YAAY,8BAClBhB,EAAMiB,WAAW,4FACjB,IAAIR,EAAWT,EAAM,GAAGS,SAASC,cACjB,MAAZD,GAAgC,MAAZA,GACpBT,EAAMkB,WAAWF,YAAY,WAAWA,YAAY,WAAWA,YAAY,cAE/D,MAAZP,GACAT,EAAMW,SAASK,YAAY,WAAWA,YAAY,WAAWA,YAAY,cAE7D,OAAZP,GACAT,EAAMmB,YAAYnB,EAAMoB,SAIlB/B,EAAAc,aAAd,SAA2BJ,GACvB,IACIQ,EADAC,EAAOT,EAAKU,SAASC,cAGrBH,EADQ,MAARC,EACYjB,EAAEQ,GAAMY,SAERpB,EAAEQ,GAGN,MAARS,GAAwB,MAARA,GAAwB,MAARA,GAAwB,cAARA,GAAgC,OAARA,GAAyB,KAARA,GACzFD,EAAUK,IAAI,WAAY,UAAUC,OAAON,EAAUM,UACrDN,EAAUO,QAAQ,CAACD,OAAU,KAAM,IAAK,WACpCN,EAAUV,SACVN,EAAE,6BAA6BM,SAC/BR,EAAyBC,2BAG7BiB,EAAUV,UAGtBR,EAnGA,GAAagC,EAAAhC,yBAAAA,EAsGb,IAAAiC,EAAA,WACI,SAAAA,EAAoBC,EAAUC,EAAgBC,EAAwBd,GAAlDe,KAAAH,SAAAA,EAAkDG,KAAAf,OAAAA,EAClE,IAAIgB,EAAoB,KACpBC,EAAoB,KACxBL,EAASM,QAAQ,CACbC,UAAa,OACbC,WAAa,EACbC,QAAW,SACXC,UAAa,SAAUJ,GACnB,IAAIK,EAAW3C,EAAEsC,GAkBjB,OAjBAM,OAAOC,WAAW,WACd,IAAIC,EAAQH,EAASG,QACjBC,EAAQf,EAASgB,SAASC,IAC1BC,EAAWlB,EAASV,SACN,OAAdc,GAA8B,EAARU,IACtBV,EAAaH,EAASa,EAAQ,GAC9BT,EAAYH,EAAS,IACJa,EAAQ,KACrBV,EAAYU,EAAQ,IAERA,EAAQG,EAApBb,IACAA,EAAYU,EAAQG,IAG5BP,EAAStB,IAAI,OAAQe,EAAY,MACjCO,EAAStB,IAAI,MAAOgB,EAAY,OACjC,GACI,UAEXR,MAAQ,EACRsB,QAAWhB,KAAKiB,WAAWC,KAAKlB,QAGpCH,EAASM,QAAQ,QACFN,EAASsB,KAAK,cACpBC,GAAG,YAAa,SAACC,GACtBA,EAAGC,oBAEPb,OAAOC,WAAWV,KAAKuB,sBAAsBL,KAAKlB,MAAO,KA4GjE,OAzGYJ,EAAA4B,UAAAP,WAAR,WACI,IAAIQ,EAAQzB,KAAKH,SAEb6B,EAAMD,EAAME,KAAK,OACVC,MAAPF,IACAA,EAAMD,EAAMxC,SAAS0C,KAAK,QAE9BF,EAAMI,QAAQ,eAAeC,QAAQX,KAAK,aAAeO,EAAM,KAAKK,SAAS,SAQ7E,IAAIC,EAAcnE,EADlB6B,6UAIA,GAFAsC,EAAIb,KAAK,WAAWc,KAAK,OAAQR,EAAME,KAAK,SAASM,KAAK,QAASC,IAAI,QAAS,wBAChFF,EAAIb,KAAK,cAAcgB,KAAKD,IAAI,QAAS,gBAAkB,KAAOT,EAAME,KAAK,aACzEF,EAAMlD,SAAS,WACfyD,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAK5B,OAAO8C,KAAKlB,OACrFgC,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAKtB,OAAOwC,KAAKlB,YAClF,GAAIyB,EAAMlD,SAAS,WACtByD,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAK5B,OAAO8C,KAAKlB,OACrFgC,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAKtB,OAAOwC,KAAKlB,YAClF,GAAuC,MAAnCyB,EAAM,GAAG1C,SAASC,cAAuB,CAChD,IAAIqD,EAAQZ,EAAMxC,SACdoD,EAAM9D,SAAS,YACfyD,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAK5B,OAAO8C,KAAKlB,OACrFgC,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAKtB,OAAOwC,KAAKlB,QAC9EqC,EAAM9D,SAAS,YACtByD,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAK5B,OAAO8C,KAAKlB,OACrFgC,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAKtB,OAAOwC,KAAKlB,QAErFsC,QAAQC,IAAI,UAAWF,QAG3BC,QAAQC,IAAI,UAAWd,GACvBe,MAAM,WAEV,OAAOR,GAGHpC,EAAA4B,UAAAD,sBAAR,WACI,OAAIvB,KAAKH,SAAS4C,GAAG,UACVhC,OAAOC,WAAWV,KAAKuB,sBAAsBL,KAAKlB,MAAO,KAEtB,EAA1CnC,EAAE,QAAQsD,KAAK,kBAAkBjD,OAC1BuC,OAAOC,WAAWV,KAAKuB,sBAAsBL,KAAKlB,MAAO,UAEpEA,KAAK0C,WAGD9C,EAAA4B,UAAAmB,mBAAR,WACI,IAAIjB,EAAM1B,KAAKH,SAAS8B,KAAK,OAI7B,OAHWC,MAAPF,IACAA,EAAM1B,KAAKH,SAASZ,SAAS0C,KAAK,QAE/B3B,KAAKH,SAASgC,QAAQ,eAAeV,KAAK,aAAeO,EAAM,MAGlE9B,EAAA4B,UAAAoB,oBAAR,SAA4BC,GACxB,IAAIC,EAAUrC,OAAOqC,QACjBC,EAAUtC,OAAOsC,QAErB/C,KAAKf,OAAO+D,qBACZhD,KAAK0C,UACLG,EAAOI,KAAKjD,MACZnC,EAAE,6BAA6BM,SAC/B6B,KAAKf,OAAOiE,gBAEZzC,OAAO0C,SAASL,EAASC,IAGrBnD,EAAA4B,UAAApD,OAAR,WAAA,IAAAgF,EAAApD,KACIA,KAAK4C,oBAAoB,WACrBQ,EAAKT,qBAAqB7E,KAAK,SAACC,EAAGC,GAC/BL,EAAyBS,OAAOJ,QAKpC4B,EAAA4B,UAAA9C,OAAR,WAAA,IAAA0E,EAAApD,KACIA,KAAK4C,oBAAoB,WACrBQ,EAAKT,qBAAqB7E,KAAK,SAACC,EAAGC,GAC/BL,EAAyBe,OAAOV,QAKrC4B,EAAA4B,UAAAkB,QAAP,WACI1C,KAAKH,SAASM,QAAQ,QAAQA,QAAQ,WAEtC,IAAIuB,EAAM1B,KAAKH,SAAS8B,KAAK,OAClBC,MAAPF,IACAA,EAAM1B,KAAKH,SAASZ,SAAS0C,KAAK,QAEtC3B,KAAKH,SAASgC,QAAQ,eAAeC,QAAQX,KAAK,aAAeO,EAAM,KAAKpC,YAAY,SAExF,IAEI,IAAM+D,EAAYxF,EAAE,YACpBwF,EAAUlD,QAAQ,QAAQA,QAAQ,WAClCkD,EAAUlF,SACZ,MAAOmF,MAEjB1D,EAlJA,GAoJA2D,EAAA,WACI,SAAAA,EAAoB1D,EAAU2D,EAAoBvE,GAA9Be,KAAAH,SAAAA,EAA8BG,KAAAf,OAAAA,EAC9CY,EAASM,QAAQ,CACbC,UAAa,OACbC,WAAa,EACbC,QAAW,SACXC,UAAa,SACbb,MAAQ,EACR+D,MAASvB,IAAI,QAAS,mBACtBlB,QAAWhB,KAAKiB,WAAWC,KAAKlB,QAEpCH,EAASM,QAAQ,QAEjB,IAAIK,EAAW3C,EAAE,mBACb8C,EAAQH,EAASG,QACrBH,EAAStB,IAAI,OAAQwE,KAAKC,MAAM9D,EAASgB,SAAS+C,KAAOJ,EAAc7C,EAAQ,EAAK,IAAM,MAC1FH,EAASY,GAAG,YAAa,SAAUC,GAC/BA,EAAGC,oBAEPb,OAAOC,WAAWV,KAAKuB,sBAAsBL,KAAKlB,MAAO,KAgFjE,OA7EYuD,EAAA/B,UAAAD,sBAAR,WACI,OAAIvB,KAAKH,SAAS4C,GAAG,UACVhC,OAAOC,WAAWV,KAAKuB,sBAAsBL,KAAKlB,MAAO,KAEtB,EAA1CnC,EAAE,QAAQsD,KAAK,kBAAkBjD,OAC1BuC,OAAOC,WAAWV,KAAKuB,sBAAsBL,KAAKlB,MAAO,UAEpEA,KAAK0C,WAGDa,EAAA/B,UAAAoB,oBAAR,SAA4BC,GACxB7C,KAAKf,OAAO+D,qBACZhD,KAAK0C,UACLG,EAAOI,KAAKjD,MACZnC,EAAE,6BAA6BM,SAC/B6B,KAAKf,OAAOiE,iBAIRK,EAAA/B,UAAAP,WAAR,WAAA,IAAAmC,EAAApD,KACQX,EAAQW,KAAKH,SACbH,EAAO,kJAC8CwC,IAAI,QAAS,SAAW,mBACjFxC,GAAQ,0HACRA,GAAQ,gIACRA,GAAQ,0DACRA,GAAQ,SACR,IAAIsC,EAAMnE,EAAE6B,GA6BZ,OA5BAsC,EAAIb,KAAK,aAAac,KAAK,QAASC,IAAI,QAAS,oBACjDF,EAAIb,KAAK,WAAWc,KAAK,QAASC,IAAI,QAAS,wBAC/CF,EAAIb,KAAK,YAAYc,KAAK,OAAQ5C,EAAM8B,KAAK,KAAKc,KAAK,SAASA,KAAK,QAASC,IAAI,QAAS,wBAC3FF,EAAIb,KAAK,cAAcgB,KAAKD,IAAI,QAAS,gBAAkB,KAAO7C,EAAMwC,QAAQ,uBAAuBF,KAAK,aAC5GK,EAAIb,KAAK,WAAWiB,MAAM,WACtBgB,EAAKR,oBAAoBK,KAAKG,EAAM,WAChC,IAAIS,EAAQxE,EAAMwC,QAAQ,uBAC1BgC,EAAM3E,IAAI,CAAC4E,SAAY,WAAW3E,OAAO0E,EAAM1E,UAC/C0E,EAAMzE,QAAQ,CAACD,OAAU,KAAM,IAAK,WAChC,IAAI4E,EAAUF,EAAMhC,QAAQ,oBAC5BgC,EAAM1F,SAC4C,GAA9C4F,EAAQ5C,KAAK,uBAAuBjD,QACpC6F,EAAQzE,YAAY,uBAKpC0C,EAAIb,KAAK,aAAaiB,MAAM,WACxBgB,EAAKR,oBAAoBK,KAAKG,EAAM,WAChC,IAAIS,EAAQxE,EAAMwC,QAAQ,uBAC1BxC,EAAMlB,SACN0F,EAAMvE,YAAY,sBAClB,IAAIyE,EAAUF,EAAMhC,QAAQ,oBACsB,GAA9CkC,EAAQ5C,KAAK,uBAAuBjD,QACpC6F,EAAQzE,YAAY,qBAIzB0C,GAGJuB,EAAA/B,UAAAkB,QAAP,WACI,IAAIhB,EAAM1B,KAAKH,SAAS8B,KAAK,OAClBC,MAAPF,IACAA,EAAM1B,KAAKH,SAASZ,SAAS0C,KAAK,QAEtC3B,KAAKH,SAASgC,QAAQ,eAAeC,QAAQX,KAAK,aAAeO,EAAM,KAAKpC,YAAY,SAMxF,IAEI,IAAM+D,EAAYxF,EAAE,YACpBwF,EAAUlD,QAAQ,QAAQA,QAAQ,WAClCkD,EAAUlF,SACZ,MAAOmF,MAEjBC,EAnGA,GAqGAS,EAAA,WAiHI,SAAAA,EAAoBC,EAAyBC,GAA7C,IAAAd,EAAApD,KAAoBA,KAAAiE,QAAAA,EAAyBjE,KAAAkE,WAAAA,EACzC,IAAIC,EAAYF,EAAQ9C,KAAK,eACzBiD,EAAO,IAAIC,EAAAC,mBAAmBH,EAAUlC,KAAK,OACjDjC,KAAKuE,WAAaH,EAAKI,YACvBxE,KAAKkE,WAAWO,kBAAkB,WAC9BR,EAAQ9C,KAAK,gBAAgBuD,IAAItB,EAAKmB,WAAWI,WACjDV,EAAQ9C,KAAK,yBAAyBuD,IAAItB,EAAKmB,WAAWI,aAG9D3E,KAAK4E,cACL5E,KAAK6E,qBAEL7E,KAAKiE,QAAQ9C,KAAK,qBAAqBiB,MAAMpC,KAAK8E,UAAU5D,KAAKlB,OACjEA,KAAKiE,QAAQ9C,KAAK,qBAAqBiB,MAAMpC,KAAK+E,UAAU7D,KAAKlB,OAEzE,OA7HYgE,EAAAxC,UAAAoD,YAAR,WACI,IAAII,EAAQnH,EAAE,QAAUmC,KAAKuE,WAAWI,UAAY,UAGpDK,EAAM7D,KAAK,gCAAgCrD,KAAK,SAACC,EAAGC,GAChD,IAAIqB,EAAQxB,EAAEG,GACViH,EAAa5F,EAAMsC,KAAK,eAC5BtC,EAAM8B,KAAK,QAAQY,SAAS,cAAcE,KAAK,mBAAoBgD,GAC9DhD,KAAK,YAAa5C,EAAMsC,KAAK,SAC7BM,KAAK,gBAAiB5C,EAAMsC,KAAK,aACtCtC,EAAMC,YAAY,cAAc4F,WAAW,iBAI/CF,EAAM7D,KAAK,iBAAiB7B,YAAY,SACxC0F,EAAM7D,KAAK,UAAUrD,KAAKkC,KAAKmF,qBAAqBjE,KAAKlB,OAGzDgF,EAAM7D,KAAK,kBACNc,KAAK,2BAA4BC,IAAI,QAAS,oBAC9CD,KAAK,yBAA0BC,IAAI,QAAS,kBAEjD,IAAIkD,EAAUJ,EAAMtF,OACpBM,KAAKuE,WAAWc,QAAQD,IAGpBpB,EAAAxC,UAAA2D,qBAAR,SAA6BpH,EAAGC,GAC5B,IAEIsH,EAFAhH,EAAQT,EAAEG,GACVuH,EAAejH,EAAMqD,KAAK,4BAQ9B2D,GAJIA,EADAhH,EAAMC,SAAS,YACT2D,IAAI,MAAO,wBAEXA,IAAI,MAAO,uBAEXsD,QAAQ,WAAaD,EAAe,GAEpB,OAAtBjH,EAAM,GAAGS,WACTT,EAAQA,EAAMW,UAGlBX,EAAM2D,KAAK,kBAAmBqD,IAG1BtB,EAAAxC,UAAAqD,mBAAR,WAAA,IAAAzB,EAAApD,KACIA,KAAKiE,QAAQ7C,GAAG,YAAa,0BAA2B,SAACC,GACrDxD,EAAEwD,EAAGoE,QAAQ5D,QAAQ,uBAAuBE,SAAS,WAEjD2D,EAAsBC,aACtBD,EAAsBC,YAAYjD,UAEtCgD,EAAsBC,YAAc,IAAIpC,EACpC1F,EAAEwD,EAAGuE,eAAgBF,EAAsBlC,WAAYJ,KAE5DhC,GAAG,WAAY,0BAA2B,SAACC,GAC1CxD,EAAEwD,EAAGoE,QAAQ5D,QAAQ,uBAAuBvC,YAAY,aAG5DU,KAAKiE,QAAQ7C,GAAG,YAAa,cAAe,SAACC,GACrCqE,EAAsBC,aACtBD,EAAsBC,YAAYjD,UAEtCgD,EAAsBC,YAAc,IAAI/F,EACpC/B,EAAEwD,EAAGuE,eAAgBvE,EAAGwE,MAAOxE,EAAGyE,MAAO1C,MAK7CY,EAAAxC,UAAAsD,UAAR,WACI9E,KAAKuE,WAAWwB,KAAK,gBACrB/F,KAAKiE,QAAQ9C,KAAK,uBAAuBrD,KAAK,SAACC,EAAGC,GAC9C,IAAIqB,EAAQxB,EAAEG,GACdqB,EAAM8B,KAAK,2BAA2BhD,SACtCkB,EAAMI,YAAYJ,EAAMG,cAE5BQ,KAAKiE,QAAQ9C,KAAK,YAAYrD,KAAK,SAACC,EAAGC,GACnCL,EAAyBa,aAAaR,KAE1CgC,KAAKiE,QAAQ9C,KAAK,YAAYrD,KAAK,SAACC,EAAGC,GACnCL,EAAyBc,aAAaT,MAItCgG,EAAAxC,UAAAuD,UAAR,WACI/E,KAAKuE,WAAWwB,KAAK,gBACrB/F,KAAKiE,QAAQ9C,KAAK,uBAAuBrD,KAAK,SAACC,EAAGC,GAC9CH,EAAEG,GAAIG,WAEV6B,KAAKiE,QAAQ9C,KAAK,YAAYrD,KAAK,SAACC,EAAGC,GACnCL,EAAyBgB,aAAad,EAAEG,MAE5CgC,KAAKiE,QAAQ9C,KAAK,YAAYrD,KAAK,SAACC,EAAGC,GACnCL,EAAyBiB,aAAaf,EAAEG,OAIzCgG,EAAAxC,UAAAwB,mBAAP,WACIhD,KAAKuE,WAAWwB,KAAK,iBAGlB/B,EAAAxC,UAAA0B,cAAP,aAKOc,EAAAxC,UAAAP,WAAP,WACI,OAAOjB,KAAKuE,WAAWI,WAkB/BX,EAhIA,GAkIAgC,EAAA,WAII,SAAAA,EAAoB/B,GAAAjE,KAAAiE,QAAAA,EAChBjE,KAAKiG,UAAYC,SAASjC,EAAQtC,KAAK,cACvC3B,KAAKmG,YAAcD,SAASjC,EAAQtC,KAAK,gBAEzC3B,KAAKoG,cAoCb,OAjCYJ,EAAAxE,UAAA6E,WAAR,WACI,OAAO,GAGHL,EAAAxE,UAAA4E,YAAR,WAAA,IAAAhD,EAAApD,KACIA,KAAKiE,QAAQ9C,KAAK,oBAAoBiB,MAAM,SAACf,GACzC,GAAI+B,EAAKiD,aACL7D,MAAM,aACH,CACH,IAAM8D,EAASzI,EAAEwD,EAAGuE,eAAezE,KAAK,oBACT,IAA3B+E,SAASI,EAAO5B,QAChB4B,EAAO5B,IAAI,KACX4B,EAAOzE,QAAQ,cAAcV,KAAK,QAAQY,SAAS,eAAezC,YAAY,iBAE9EgH,EAAO5B,IAAI,KACX4B,EAAOzE,QAAQ,cAAcV,KAAK,QAAQ7B,YAAY,eAAeyC,SAAS,gBAElFqB,EAAKmD,iBAKTP,EAAAxE,UAAA+E,WAAR,WACI,IAAMC,EAAe,GACrBxG,KAAKiE,QAAQ9C,KAAK,+BAA+BrD,KAAK,SAACC,EAAGC,GACtDwI,EAAaC,KAAKP,SAASrI,EAAEG,GAAI2D,KAAK,oBAE1CW,QAAQC,IAAIvC,KAAKiE,QAASjE,KAAKiE,QAAQtC,KAAK,eAC5C,IAAM+E,EAAM1G,KAAKiE,QAAQtC,KAAK,cAAc6D,QAAQ,QAASgB,EAAaG,KAAK,MAC/E9I,EAAE+I,IAAIF,EAAK,SAAC/E,GACRW,QAAQC,IAAIZ,MAGxBqE,EA5CA,GA8CAN,EAAA,WAOI,SAAAA,EAAoBmB,GAApB,IAAAzD,EAAApD,KAAoBA,KAAA6G,MAAAA,EAFZ7G,KAAA8G,UAA6D,GAGjEjJ,EAAE,qBAAqBC,KAAK,SAACC,EAAGC,GAC5B,IAAMgE,EAAMnE,EAAEG,GACdoF,EAAK0D,UAAU9E,EAAIC,KAAK,OAAS,IAAI+B,EAA8BhC,EAAKoB,GACxEpB,EAAIZ,GAAG,YAAa,SAACC,GACjBqE,EAAsBlC,WAAanC,EAAG0F,YAI9ClJ,EAAE,qBAAqBC,KAAK,SAACC,EAAGC,GAC5B,IAAIgI,EAA+BnI,EAAEG,MAGzCgC,KAAK6G,MAAMzF,GAAG,SAAU,WACpBvD,EAAE4C,QAAQuG,IAAI,eAAgBtB,EAAsBuB,eAExDpJ,EAAE4C,QAAQW,GAAG,eAAgBsE,EAAsBuB,aAEnDjH,KAAKkH,kBAmGb,OAhGkBxB,EAAAuB,YAAd,WACI,OAAO/E,IAAI,MAAO,uBAGfwD,EAAAlE,UAAAiD,kBAAP,SAAyB0C,GACrBnH,KAAK6G,MAAMO,OAAOD,IAGdzB,EAAAlE,UAAA6F,aAAR,SAAqBC,GACjBtH,KAAKuH,kBAAkBpG,KAAK,oBAAoBqG,OAEhD,IAKIC,EAAe5J,EAAE,QAAQoE,KAAK,QAC9ByF,EAAY,IAAIC,KAAKC,eAAeH,EAN1B,CACNI,KAAM,UAAWC,MAAO,UAAWC,IAAK,UACxCC,KAAM,UAAWC,OAAQ,UACzBC,QAAQ,IAGuCC,OAAOb,GAE9DtH,KAAKuH,kBAAkBpG,KAAK,qBAAqBgB,KAAKuF,IAGlDhC,EAAAlE,UAAA4G,UAAR,WAEI,IAFJ,IAAAhF,EAAApD,KACQqI,EAAW,GACAC,EAAA,EAAAC,EAAAC,OAAOC,oBAAoBzI,KAAK8G,WAAhCwB,EAAAC,EAAArK,OAAAoK,IAA4C,CAAtD,IAAII,EAAEH,EAAAD,GACPD,EAASK,EAAGlD,QAAQ,kBAAmB,KAAOxF,KAAK8G,UAAU4B,GAAIzH,aAErE,IAAI0H,EAAoB3I,KAAKuH,kBAAkBpG,KAAK,sBAAsByH,KAAK,WAE/E/K,EAAEgL,KAAK,CACHC,KAAM,OACNpC,IAAK1G,KAAK6G,MAAMlF,KAAK,eACrBA,KAAM,CACFoH,OAAWJ,EAAW,EAAI,EAC1BN,SAAYA,EACZW,MAAShJ,KAAK6G,MAAM1F,KAAK,uBAAuBuD,OAEpDuE,QAAS,SAACC,GACFA,EAAa,SACb9F,EAAKmE,kBAAkBpG,KAAK,gBAAgBY,SAAS,UACrDqB,EAAKiE,aAAa,IAAI8B,KAAKD,EAAU,OACjCP,EACAvF,EAAKyD,MAAM1F,KAAK,eAAe7B,YAAY,UAE3C8D,EAAKyD,MAAM1F,KAAK,eAAeY,SAAS,YAG5CqB,EAAKmE,kBAAkBpG,KAAK,gBAAgB7B,YAAY,UACxD8D,EAAKmE,kBAAkBpG,KAAK,8BAA8BY,SAAS,UACnEqB,EAAKmE,kBAAkBpG,KAAK,6BAA6BgB,KAAK+G,EAAW,OAAG5J,YAAY,YAGhG8J,MAAO,WACHhG,EAAKmE,kBAAkBpG,KAAK,gBAAgB7B,YAAY,UACxD8D,EAAKmE,kBAAkBpG,KAAK,8BAA8B7B,YAAY,UACtE8D,EAAKmE,kBAAkBpG,KAAK,6BAA6BgB,KAAK,IAAIJ,SAAS,cAK/E2D,EAAAlE,UAAA6H,oBAAR,WAAA,IAAAjG,EAAApD,KACQsJ,EAAkBtJ,KAAKuH,kBAAkBpG,KAAK,wBAQlD,GANAV,OAAO8I,YAAY,WACXD,EAAQV,KAAK,YACbxF,EAAKgF,aAEV,KAECoB,aAAc,CACd,IAAIC,EAAQD,aAAaE,QAAQ,2BACnB,OAAVD,GACAH,EAAQV,KAAK,UAAqB,KAATa,GAGjCH,EAAQK,OAAO,WACX,IAAIC,EAAkBN,EAAQV,KAAK,WAC/BY,cACAA,aAAaK,QAAQ,0BAA4BD,EAAS,IAAM,OAErEtJ,QAAQ,WAGPoF,EAAAlE,UAAA0F,gBAAR,WAMI,GALAlH,KAAKuH,kBAAoBvH,KAAK6G,MAAM1F,KAAK,qBACzCnB,KAAKuH,kBAAkBpG,KAAK,cAAcC,GAAG,QAASpB,KAAKoI,UAAUlH,KAAKlB,OAC1EA,KAAKuH,kBAAkBpG,KAAK,sBAAsBC,GAAG,SAAUpB,KAAKoI,UAAUlH,KAAKlB,OACnFA,KAAKqJ,sBAEDrJ,KAAKuH,kBAAkB5F,KAAK,gBAAiB,CAC7C,IAAI2F,EAAO,IAAI6B,KAAKnJ,KAAKuH,kBAAkB5F,KAAK,iBAChD3B,KAAKqH,aAAaC,GAGtBzJ,EAAE,sBAAsBM,UAzHduH,EAAAC,YAAqE,KACrED,EAAAlC,WAAqB,KA0HvCkC,EA5HA,GAAa/F,EAAA+F,sBAAAA","file":"MotionMergeAmendments.js","sourcesContent":["import {AntragsgruenEditor} from \"../shared/AntragsgruenEditor\";\nimport editor = CKEDITOR.editor;\n\nexport class MotionMergeChangeActions {\n    public static removeEmptyParagraphs() {\n        $('.paragraphHolder').each((i, el) => {\n            if (el.childNodes.length == 0) {\n                $(el).remove();\n            }\n        });\n    }\n\n    public static accept(node: Element) {\n        let $node = $(node);\n        if ($node.hasClass(\"ice-ins\")) {\n            MotionMergeChangeActions.insertAccept(node);\n        }\n        if ($node.hasClass(\"ice-del\")) {\n            MotionMergeChangeActions.deleteAccept(node);\n        }\n    }\n\n    public static reject(node: Element) {\n        let $node = $(node);\n        if ($node.hasClass(\"ice-ins\")) {\n            MotionMergeChangeActions.insertReject($node);\n        }\n        if ($node.hasClass(\"ice-del\")) {\n            MotionMergeChangeActions.deleteReject($node);\n        }\n    }\n\n    public static insertReject($node: JQuery) {\n        let $removeEl: JQuery,\n            name = $node[0].nodeName.toLowerCase();\n        if (name == 'li') {\n            $removeEl = $node.parent();\n        } else {\n            $removeEl = $node;\n        }\n        if (name == 'ul' || name == 'ol' || name == 'li' || name == 'blockquote' || name == 'pre' || name == 'p') {\n            $removeEl.css(\"overflow\", \"hidden\").height($removeEl.height());\n            $removeEl.animate({\"height\": \"0\"}, 250, function () {\n                $removeEl.remove();\n                $(\".collidingParagraph:empty\").remove();\n                MotionMergeChangeActions.removeEmptyParagraphs();\n            });\n        } else {\n            $removeEl.remove();\n        }\n    }\n\n    public static insertAccept(node: Element) {\n        let $this: JQuery = $(node);\n        $this.removeClass(\"ice-cts ice-ins appendHint moved\");\n        $this.removeAttr(\"data-moving-partner data-moving-partner-id data-moving-partner-paragraph data-moving-msg\");\n        if (node.nodeName.toLowerCase() == 'ul' || node.nodeName.toLowerCase() == 'ol') {\n            $this.children().removeClass(\"ice-cts\").removeClass(\"ice-ins\").removeClass(\"appendHint\");\n        }\n        if (node.nodeName.toLowerCase() == 'li') {\n            $this.parent().removeClass(\"ice-cts\").removeClass(\"ice-ins\").removeClass(\"appendHint\");\n        }\n        if (node.nodeName.toLowerCase() == 'ins') {\n            $this.replaceWith($this.html());\n        }\n    }\n\n    public static deleteReject($node: JQuery) {\n        $node.removeClass(\"ice-cts ice-del appendHint\");\n        $node.removeAttr(\"data-moving-partner data-moving-partner-id data-moving-partner-paragraph data-moving-msg\");\n        let nodeName = $node[0].nodeName.toLowerCase();\n        if (nodeName == 'ul' || nodeName == 'ol') {\n            $node.children().removeClass(\"ice-cts\").removeClass(\"ice-del\").removeClass(\"appendHint\");\n        }\n        if (nodeName == 'li') {\n            $node.parent().removeClass(\"ice-cts\").removeClass(\"ice-del\").removeClass(\"appendHint\");\n        }\n        if (nodeName == 'del') {\n            $node.replaceWith($node.html());\n        }\n    }\n\n    public static deleteAccept(node: Element) {\n        let name = node.nodeName.toLowerCase(),\n            $removeEl: JQuery;\n        if (name == 'li') {\n            $removeEl = $(node).parent();\n        } else {\n            $removeEl = $(node);\n        }\n\n        if (name == 'ul' || name == 'ol' || name == 'li' || name == 'blockquote' || name == 'pre' || name == 'p') {\n            $removeEl.css(\"overflow\", \"hidden\").height($removeEl.height());\n            $removeEl.animate({\"height\": \"0\"}, 250, function () {\n                $removeEl.remove();\n                $(\".collidingParagraph:empty\").remove();\n                MotionMergeChangeActions.removeEmptyParagraphs();\n            });\n        } else {\n            $removeEl.remove();\n        }\n    }\n}\n\n\nclass MotionMergeChangeTooltip {\n    constructor(private $element, mouseX: number, mouseY: number, private parent: MotionMergeAmendmentsTextarea) {\n        let positionX: number = null,\n            positionY: number = null;\n        $element.popover({\n            'container': 'body',\n            'animation': false,\n            'trigger': 'manual',\n            'placement': function (popover) {\n                let $popover = $(popover);\n                window.setTimeout(() => {\n                    let width = $popover.width(),\n                        elTop = $element.offset().top,\n                        elHeight = $element.height();\n                    if (positionX === null && width > 0) {\n                        positionX = (mouseX - width / 2);\n                        positionY = mouseY + 10;\n                        if (positionY < (elTop + 19)) {\n                            positionY = elTop + 19;\n                        }\n                        if (positionY > elTop + elHeight) {\n                            positionY = elTop + elHeight;\n                        }\n                    }\n                    $popover.css(\"left\", positionX + \"px\");\n                    $popover.css(\"top\", positionY + \"px\");\n                }, 1);\n                return \"bottom\";\n            },\n            'html': true,\n            'content': this.getContent.bind(this)\n        });\n\n        $element.popover('show');\n        let $popover = $element.find(\"> .popover\");\n        $popover.on(\"mousemove\", (ev) => {\n            ev.stopPropagation();\n        });\n        window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n    }\n\n    private getContent() {\n        let $myEl = this.$element,\n            html,\n            cid = $myEl.data(\"cid\");\n        if (cid == undefined) {\n            cid = $myEl.parent().data(\"cid\");\n        }\n        $myEl.parents(\".texteditor\").first().find(\"[data-cid=\" + cid + \"]\").addClass(\"hover\");\n\n        html = '<div>';\n        html += '<button type=\"button\" class=\"accept btn btn-sm btn-default\"></button>';\n        html += '<button type=\"button\" class=\"reject btn btn-sm btn-default\"></button>';\n        html += '<a href=\"#\" class=\"btn btn-small btn-default opener\" target=\"_blank\"><span class=\"glyphicon glyphicon-new-window\"></span></a>';\n        html += '<div class=\"initiator\" style=\"font-size: 0.8em;\"></div>';\n        html += '</div>';\n        let $el: JQuery = $(html);\n        $el.find(\".opener\").attr(\"href\", $myEl.data(\"link\")).attr(\"title\", __t(\"merge\", \"title_open_in_blank\"));\n        $el.find(\".initiator\").text(__t(\"merge\", \"initiated_by\") + \": \" + $myEl.data(\"username\"));\n        if ($myEl.hasClass(\"ice-ins\")) {\n            $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n            $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n        } else if ($myEl.hasClass(\"ice-del\")) {\n            $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n            $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n        } else if ($myEl[0].nodeName.toLowerCase() == 'li') {\n            let $list = $myEl.parent();\n            if ($list.hasClass(\"ice-ins\")) {\n                $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n                $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n            } else if ($list.hasClass(\"ice-del\")) {\n                $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n                $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n            } else {\n                console.log(\"unknown\", $list);\n            }\n        } else {\n            console.log(\"unknown\", $myEl);\n            alert(\"unknown\");\n        }\n        return $el;\n    }\n\n    private removePopupIfInactive() {\n        if (this.$element.is(\":hover\")) {\n            return window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n        }\n        if ($(\"body\").find(\".popover:hover\").length > 0) {\n            return window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n        }\n        this.destroy();\n    }\n\n    private affectedChangesets() {\n        let cid = this.$element.data(\"cid\");\n        if (cid == undefined) {\n            cid = this.$element.parent().data(\"cid\");\n        }\n        return this.$element.parents(\".texteditor\").find(\"[data-cid=\" + cid + \"]\");\n    }\n\n    private performActionWithUI(action) {\n        let scrollX = window.scrollX,\n            scrollY = window.scrollY;\n\n        this.parent.saveEditorSnapshot();\n        this.destroy();\n        action.call(this);\n        $(\".collidingParagraph:empty\").remove();\n        this.parent.focusTextarea();\n\n        window.scrollTo(scrollX, scrollY);\n    }\n\n    private accept() {\n        this.performActionWithUI(() => {\n            this.affectedChangesets().each((i, el) => {\n                MotionMergeChangeActions.accept(el);\n            });\n        });\n    }\n\n    private reject() {\n        this.performActionWithUI(() => {\n            this.affectedChangesets().each((i, el) => {\n                MotionMergeChangeActions.reject(el);\n            });\n        });\n    }\n\n    public destroy() {\n        this.$element.popover(\"hide\").popover(\"destroy\");\n\n        let cid = this.$element.data(\"cid\");\n        if (cid == undefined) {\n            cid = this.$element.parent().data(\"cid\");\n        }\n        this.$element.parents(\".texteditor\").first().find(\"[data-cid=\" + cid + \"]\").removeClass(\"hover\");\n\n        try {\n            // Remove stale objects that were not removed correctly previously\n            const $popovers = $(\".popover\");\n            $popovers.popover(\"hide\").popover(\"destroy\");\n            $popovers.remove();\n        } catch (e) {}\n    }\n}\n\nclass MotionMergeConflictTooltip {\n    constructor(private $element, currMouseX, private parent: MotionMergeAmendmentsTextarea) {\n        $element.popover({\n            'container': 'body',\n            'animation': false,\n            'trigger': 'manual',\n            'placement': 'bottom',\n            'html': true,\n            'title': __t(\"merge\", \"colliding_title\"),\n            'content': this.getContent.bind(this)\n        });\n        $element.popover('show');\n\n        let $popover = $(\"body > .popover\"),\n            width = $popover.width();\n        $popover.css(\"left\", Math.floor($element.offset().left + currMouseX - (width / 2) + 20) + \"px\");\n        $popover.on(\"mousemove\", function (ev) {\n            ev.stopPropagation();\n        });\n        window.setTimeout(this.removePopupIfInactive.bind(this), 500);\n    }\n\n    private removePopupIfInactive() {\n        if (this.$element.is(\":hover\")) {\n            return window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n        }\n        if ($(\"body\").find(\".popover:hover\").length > 0) {\n            return window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n        }\n        this.destroy();\n    }\n\n    private performActionWithUI(action) {\n        this.parent.saveEditorSnapshot();\n        this.destroy();\n        action.call(this);\n        $(\".collidingParagraph:empty\").remove();\n        this.parent.focusTextarea();\n    }\n\n\n    private getContent() {\n        let $this = this.$element,\n            html = '<div style=\"white-space: nowrap;\"><button type=\"button\" class=\"btn btn-small btn-default delTitle\">' +\n                '<span style=\"text-decoration: line-through\">' + __t(\"merge\", \"title\") + '</span></button>';\n        html += '<button type=\"button\" class=\"reject btn btn-small btn-default\"><span class=\"glyphicon glyphicon-trash\"></span></button>';\n        html += '<a href=\"#\" class=\"btn btn-small btn-default opener\" target=\"_blank\"><span class=\"glyphicon glyphicon-new-window\"></span></a>';\n        html += '<div class=\"initiator\" style=\"font-size: 0.8em;\"></div>';\n        html += '</div>';\n        let $el = $(html);\n        $el.find(\".delTitle\").attr(\"title\", __t(\"merge\", \"title_del_title\"));\n        $el.find(\".reject\").attr(\"title\", __t(\"merge\", \"title_del_colliding\"));\n        $el.find(\"a.opener\").attr(\"href\", $this.find(\"a\").attr(\"href\")).attr(\"title\", __t(\"merge\", \"title_open_in_blank\"));\n        $el.find(\".initiator\").text(__t(\"merge\", \"initiated_by\") + \": \" + $this.parents(\".collidingParagraph\").data(\"username\"));\n        $el.find(\".reject\").click(() => {\n            this.performActionWithUI.call(this, () => {\n                let $para = $this.parents(\".collidingParagraph\");\n                $para.css({\"overflow\": \"hidden\"}).height($para.height());\n                $para.animate({\"height\": \"0\"}, 250, function () {\n                    let $parent = $para.parents(\".paragraphHolder\");\n                    $para.remove();\n                    if ($parent.find(\".collidingParagraph\").length == 0) {\n                        $parent.removeClass(\"hasCollisions\");\n                    }\n                });\n            });\n        });\n        $el.find(\".delTitle\").click(() => {\n            this.performActionWithUI.call(this, () => {\n                let $para = $this.parents(\".collidingParagraph\");\n                $this.remove();\n                $para.removeClass(\"collidingParagraph\");\n                let $parent = $para.parents(\".paragraphHolder\");\n                if ($parent.find(\".collidingParagraph\").length == 0) {\n                    $parent.removeClass(\"hasCollisions\");\n                }\n            });\n        });\n        return $el;\n    }\n\n    public destroy() {\n        let cid = this.$element.data(\"cid\");\n        if (cid == undefined) {\n            cid = this.$element.parent().data(\"cid\");\n        }\n        this.$element.parents(\".texteditor\").first().find(\"[data-cid=\" + cid + \"]\").removeClass(\"hover\");\n\n        /*\n        this.$element.popover(\"hide\").popover(\"destroy\");\n        */\n\n        try {\n            // Remove stale objects that were not removed correctly previously\n            const $popovers = $(\".popover\");\n            $popovers.popover(\"hide\").popover(\"destroy\");\n            $popovers.remove();\n        } catch (e) {}\n    }\n}\n\nclass MotionMergeAmendmentsTextarea {\n    private texteditor: editor;\n\n    private prepareText() {\n        let $text = $('<div>' + this.texteditor.getData() + '</div>');\n\n        // Move the amendment-Data from OL's and UL's to their list items\n        $text.find(\"ul.appendHint, ol.appendHint\").each((i, el) => {\n            let $this = $(el),\n                appendHint = $this.data(\"append-hint\");\n            $this.find(\"> li\").addClass(\"appendHint\").attr(\"data-append-hint\", appendHint)\n                .attr(\"data-link\", $this.data(\"link\"))\n                .attr(\"data-username\", $this.data(\"username\"));\n            $this.removeClass(\"appendHint\").removeData(\"append-hint\");\n        });\n\n        // Remove double markup\n        $text.find(\".moved .moved\").removeClass('moved');\n        $text.find(\".moved\").each(this.markupMovedParagraph.bind(this));\n\n        // Add hints about starting / ending collisions\n        $text.find(\".hasCollisions\")\n            .attr(\"data-collision-start-msg\", __t('merge', 'colliding_start'))\n            .attr(\"data-collision-end-msg\", __t('merge', 'colliding_end'));\n\n        let newText = $text.html();\n        this.texteditor.setData(newText);\n    }\n\n    private markupMovedParagraph(i, el) {\n        let $node = $(el),\n            paragraphNew = $node.data('moving-partner-paragraph'),\n            msg: string;\n\n        if ($node.hasClass('inserted')) {\n            msg = __t('std', 'moved_paragraph_from');\n        } else {\n            msg = __t('std', 'moved_paragraph_to');\n        }\n        msg = msg.replace(/##PARA##/, (paragraphNew + 1));\n\n        if ($node[0].nodeName === 'LI') {\n            $node = $node.parent();\n        }\n\n        $node.attr(\"data-moving-msg\", msg);\n    }\n\n    private initializeTooltips() {\n        this.$holder.on('mouseover', '.collidingParagraphHead', (ev) => {\n            $(ev.target).parents(\".collidingParagraph\").addClass(\"hovered\");\n\n            if (MotionMergeAmendments.activePopup) {\n                MotionMergeAmendments.activePopup.destroy();\n            }\n            MotionMergeAmendments.activePopup = new MotionMergeConflictTooltip(\n                $(ev.currentTarget), MotionMergeAmendments.currMouseX, this\n            );\n        }).on('mouseout', '.collidingParagraphHead', (ev) => {\n            $(ev.target).parents(\".collidingParagraph\").removeClass(\"hovered\");\n        });\n\n        this.$holder.on(\"mouseover\", \".appendHint\", (ev) => {\n            if (MotionMergeAmendments.activePopup) {\n                MotionMergeAmendments.activePopup.destroy();\n            }\n            MotionMergeAmendments.activePopup = new MotionMergeChangeTooltip(\n                $(ev.currentTarget), ev.pageX, ev.pageY, this\n            );\n        });\n    }\n\n    private acceptAll() {\n        this.texteditor.fire('saveSnapshot');\n        this.$holder.find(\".collidingParagraph\").each((i, el) => {\n            let $this = $(el);\n            $this.find(\".collidingParagraphHead\").remove();\n            $this.replaceWith($this.children());\n        });\n        this.$holder.find(\".ice-ins\").each((i, el) => {\n            MotionMergeChangeActions.insertAccept(el);\n        });\n        this.$holder.find(\".ice-del\").each((i, el) => {\n            MotionMergeChangeActions.deleteAccept(el);\n        });\n    }\n\n    private rejectAll() {\n        this.texteditor.fire('saveSnapshot');\n        this.$holder.find(\".collidingParagraph\").each((i, el) => {\n            $(el).remove();\n        });\n        this.$holder.find(\".ice-ins\").each((i, el) => {\n            MotionMergeChangeActions.insertReject($(el));\n        });\n        this.$holder.find(\".ice-del\").each((i, el) => {\n            MotionMergeChangeActions.deleteReject($(el));\n        });\n    }\n\n    public saveEditorSnapshot() {\n        this.texteditor.fire('saveSnapshot');\n    }\n\n    public focusTextarea() {\n        //this.$holder.find(\".texteditor\").focus();\n        // This lead to strange cursor behavior, e.g. when removing a colliding paragraph\n    }\n\n    public getContent(): string {\n        return this.texteditor.getData();\n    }\n\n    constructor(private $holder: JQuery, private rootObject: MotionMergeAmendments) {\n        let $textarea = $holder.find(\".texteditor\");\n        let edit = new AntragsgruenEditor($textarea.attr(\"id\"));\n        this.texteditor = edit.getEditor();\n        this.rootObject.addSubmitListener(() => {\n            $holder.find(\"textarea.raw\").val(this.texteditor.getData());\n            $holder.find(\"textarea.consolidated\").val(this.texteditor.getData());\n        });\n\n        this.prepareText();\n        this.initializeTooltips();\n\n        this.$holder.find(\".acceptAllChanges\").click(this.acceptAll.bind(this));\n        this.$holder.find(\".rejectAllChanges\").click(this.rejectAll.bind(this));\n    }\n}\n\nclass MotionMergeAmendmentsParagraph {\n    private sectionId: number;\n    private paragraphId: number;\n\n    constructor(private $holder: JQuery) {\n        this.sectionId = parseInt($holder.data('sectionId'));\n        this.paragraphId = parseInt($holder.data('paragraphId'));\n\n        this.initButtons();\n    }\n\n    private hasChanged() {\n        return false; // @TODO\n    }\n\n    private initButtons() {\n        this.$holder.find('.toggleAmendment').click((ev) => {\n            if (this.hasChanged()) {\n                alert(\"TO DO\");\n            } else {\n                const $input = $(ev.currentTarget).find(\".amendmentActive\");\n                if (parseInt($input.val()) === 1) {\n                    $input.val(\"0\");\n                    $input.parents(\".btn-group\").find(\".btn\").addClass(\"btn-default\").removeClass(\"btn-success\");\n                } else {\n                    $input.val(\"1\");\n                    $input.parents(\".btn-group\").find(\".btn\").removeClass(\"btn-default\").addClass(\"btn-success\");\n                }\n                this.reloadText();\n            }\n        });\n    }\n\n    private reloadText() {\n        const amendmentIds = [];\n        this.$holder.find(\".amendmentActive[value='1']\").each((i, el) => {\n            amendmentIds.push(parseInt($(el).data('amendment-id')));\n        });\n        console.log(this.$holder, this.$holder.data(\"reload-url\"));\n        const url = this.$holder.data(\"reload-url\").replace('DUMMY', amendmentIds.join(\",\"));\n        $.get(url, (data) => {\n            console.log(data);\n        });\n    }\n}\n\nexport class MotionMergeAmendments {\n    public static activePopup: MotionMergeChangeTooltip | MotionMergeConflictTooltip = null;\n    public static currMouseX: number = null;\n\n    public $draftSavingPanel: JQuery;\n    private textareas: { [id: string]: MotionMergeAmendmentsTextarea } = {};\n\n    constructor(private $form: JQuery) {\n        $(\".wysiwyg-textarea\").each((i, el) => {\n            const $el = $(el);\n            this.textareas[$el.attr(\"id\")] = new MotionMergeAmendmentsTextarea($el, this);\n            $el.on(\"mousemove\", (ev) => {\n                MotionMergeAmendments.currMouseX = ev.offsetX;\n            });\n        });\n\n        $(\".paragraphWrapper\").each((i, el) => {\n            new MotionMergeAmendmentsParagraph($(el));\n        });\n\n        this.$form.on(\"submit\", () => {\n            $(window).off(\"beforeunload\", MotionMergeAmendments.onLeavePage);\n        });\n        $(window).on(\"beforeunload\", MotionMergeAmendments.onLeavePage);\n\n        this.initDraftSaving();\n    }\n\n    public static onLeavePage(): string {\n        return __t(\"std\", \"leave_changed_page\");\n    }\n\n    public addSubmitListener(cb) {\n        this.$form.submit(cb);\n    }\n\n    private setDraftDate(date: Date) {\n        this.$draftSavingPanel.find(\".lastSaved .none\").hide();\n\n        let options = {\n                year: 'numeric', month: 'numeric', day: 'numeric',\n                hour: 'numeric', minute: 'numeric',\n                hour12: false\n            },\n            lang: string = $(\"html\").attr(\"lang\"),\n            formatted = new Intl.DateTimeFormat(lang, options).format(date);\n\n        this.$draftSavingPanel.find(\".lastSaved .value\").text(formatted);\n    }\n\n    private saveDraft() {\n        let sections = {};\n        for (let id of Object.getOwnPropertyNames(this.textareas)) {\n            sections[id.replace('section_holder_', '')] = this.textareas[id].getContent();\n        }\n        let isPublic: boolean = this.$draftSavingPanel.find('input[name=public]').prop('checked');\n\n        $.ajax({\n            type: \"POST\",\n            url: this.$form.data('draftSaving'),\n            data: {\n                'public': (isPublic ? 1 : 0),\n                'sections': sections,\n                '_csrf': this.$form.find('> input[name=_csrf]').val()\n            },\n            success: (ret) => {\n                if (ret['success']) {\n                    this.$draftSavingPanel.find('.savingError').addClass('hidden');\n                    this.setDraftDate(new Date(ret['date']));\n                    if (isPublic) {\n                        this.$form.find('.publicLink').removeClass('hidden');\n                    } else {\n                        this.$form.find('.publicLink').addClass('hidden');\n                    }\n                } else {\n                    this.$draftSavingPanel.find('.savingError').removeClass('hidden');\n                    this.$draftSavingPanel.find('.savingError .errorNetwork').addClass('hidden');\n                    this.$draftSavingPanel.find('.savingError .errorHolder').text(ret['error']).removeClass('hidden');\n                }\n            },\n            error: () => {\n                this.$draftSavingPanel.find('.savingError').removeClass('hidden');\n                this.$draftSavingPanel.find('.savingError .errorNetwork').removeClass('hidden');\n                this.$draftSavingPanel.find('.savingError .errorHolder').text('').addClass('hidden');\n            }\n        });\n    }\n\n    private initAutosavingDraft() {\n        let $toggle: JQuery = this.$draftSavingPanel.find('input[name=autosave]');\n\n        window.setInterval(() => {\n            if ($toggle.prop('checked')) {\n                this.saveDraft();\n            }\n        }, 5000);\n\n        if (localStorage) {\n            let state = localStorage.getItem('merging-draft-auto-save');\n            if (state !== null) {\n                $toggle.prop('checked', (state == '1'));\n            }\n        }\n        $toggle.change(() => {\n            let active: boolean = $toggle.prop('checked');\n            if (localStorage) {\n                localStorage.setItem('merging-draft-auto-save', (active ? '1' : '0'));\n            }\n        }).trigger('change');\n    }\n\n    private initDraftSaving() {\n        this.$draftSavingPanel = this.$form.find('#draftSavingPanel');\n        this.$draftSavingPanel.find('.saveDraft').on('click', this.saveDraft.bind(this));\n        this.$draftSavingPanel.find('input[name=public]').on('change', this.saveDraft.bind(this));\n        this.initAutosavingDraft();\n\n        if (this.$draftSavingPanel.data(\"resumed-date\")) {\n            let date = new Date(this.$draftSavingPanel.data(\"resumed-date\"));\n            this.setDraftDate(date);\n        }\n\n        $(\"#yii-debug-toolbar\").remove();\n    }\n}\n"]}