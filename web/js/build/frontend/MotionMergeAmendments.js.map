{"version":3,"sources":["frontend/MotionMergeAmendments.ts"],"names":["STATUS_ACCEPTED","STATUS_MODIFIED_ACCEPTED","STATUS_PROCESSED","STATUS_ADOPTED","STATUS_COMPLETED","AmendmentStatuses","init","statuses","console","log","Object","keys","forEach","amendmentId","statusListeners","getAmendmentStatus","registerParagraph","paragraph","push","setStatus","status","onAmendmentStatusChanged","MotionMergeChangeActions","removeEmptyParagraphs","$","each","i","el","childNodes","length","remove","accept","node","onFinished","$node","hasClass","insertAccept","deleteAccept","reject","insertReject","deleteReject","$removeEl","name","nodeName","toLowerCase","parent","css","height","animate","$this","removeClass","removeAttr","children","replaceWith","html","exports","MotionMergeChangeTooltip","$element","mouseX","mouseY","this","positionX","positionY","popover","container","animation","trigger","placement","$popover","window","setTimeout","width","elTop","offset","top","elHeight","content","getContent","bind","find","on","ev","stopPropagation","removePopupIfInactive","prototype","$myEl","cid","data","undefined","parents","first","addClass","$el","attr","__t","text","click","$list","alert","is","destroy","affectedChangesets","performActionWithUI","action","scrollX","scrollY","saveEditorSnapshot","call","focusTextarea","scrollTo","_this","onChanged","$popovers","e","MotionMergeAmendmentsTextarea","$holder","$changedIndicator","rootObject","unchangedText","hasChanged","$textarea","edit","AntragsgruenEditor_1","AntragsgruenEditor","texteditor","getEditor","addSubmitListener","val","getData","setText","acceptAll","rejectAll","prepareText","$text","appendHint","removeData","markupMovedParagraph","newText","setData","normalizeHtml","fire","msg","paragraphNew","replace","initializeTooltips","MotionMergeAmendments","activePopup","currentTarget","pageX","pageY","entities","&nbsp;","&ndash;","&auml;","&ouml;","&uuml;","&Auml;","&Ouml;","&Uuml;","&szlig;","&bdquo;","&ldquo;","&bull;","&sect;","&eacute;","&rsquo;","&euro;","ent","RegExp","hasChanges","MotionMergeAmendmentsParagraph","textarea","sectionId","parseInt","paragraphId","initButtons","element","$input","doToggle","reloadText","bootbox","confirm","result","initTooltip","currentStatus","preventDefault","$btn","indexOf","amendmentIds","url","join","get","collisions","str","$form","textareas","$para","$changed","currMouseX","offsetX","off","onLeavePage","initDraftSaving","cb","submit","setDraftDate","date","$draftSavingPanel","hide","lang","formatted","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","saveDraft","sections","_i","_a","getOwnPropertyNames","id","isPublic","prop","ajax","type","public","_csrf","success","ret","Date","error","initAutosavingDraft","$toggle","setInterval","localStorage","state","getItem","change","active","setItem"],"mappings":"0IAGA,IAAMA,EAAkB,EAClBC,EAA2B,EAC3BC,EAAmB,GACnBC,EAAiB,EACjBC,EAAmB,EAEzBC,EAAA,WAAA,SAAAA,KA0BA,OAtBkBA,EAAAC,KAAd,SAAmBC,GACfC,QAAQC,IAAI,iBACZJ,EAAkBE,SAAWA,EAC7BG,OAAOC,KAAKJ,GAAUK,QAAQ,SAAAC,GAC3BR,EAAkBS,gBAAgBD,GAAe,MAI1CR,EAAAU,mBAAd,SAAiCF,GAC7B,OAAOR,EAAkBE,SAASM,IAGxBR,EAAAW,kBAAd,SAAgCH,EAAqBI,GACjDZ,EAAkBS,gBAAgBD,GAAaK,KAAKD,IAG1CZ,EAAAc,UAAd,SAAwBN,EAAqBO,GACzCf,EAAkBE,SAASM,GAAeO,EAC1Cf,EAAkBS,gBAAgBD,GAAaD,QAAQ,SAAAK,GACnDA,EAAUI,yBAAyBR,EAAaO,MArBzCf,EAAAS,gBAA6E,GAwBhGT,EA1BA,GA4BAiB,EAAA,WAAA,SAAAA,KAyGA,OAxGkBA,EAAAC,sBAAd,WACIC,EAAE,oBAAoBC,KAAK,SAACC,EAAGC,GACC,GAAxBA,EAAGC,WAAWC,QACdL,EAAEG,GAAIG,YAKJR,EAAAS,OAAd,SAAqBC,EAAeC,QAAA,IAAAA,IAAAA,EAAA,MAChC,IAAIC,EAAQV,EAAEQ,GACVE,EAAMC,SAAS,YACfb,EAAyBc,aAAaJ,EAAMC,GAE5CC,EAAMC,SAAS,YACfb,EAAyBe,aAAaL,EAAMC,IAItCX,EAAAgB,OAAd,SAAqBN,EAAeC,QAAA,IAAAA,IAAAA,EAAA,MAChC,IAAIC,EAAQV,EAAEQ,GACVE,EAAMC,SAAS,YACfb,EAAyBiB,aAAaL,EAAOD,GAE7CC,EAAMC,SAAS,YACfb,EAAyBkB,aAAaN,EAAOD,IAIvCX,EAAAiB,aAAd,SAA2BL,EAAeD,QAAA,IAAAA,IAAAA,EAAA,MACtC,IAAIQ,EACAC,EAAOR,EAAM,GAAGS,SAASC,cAEzBH,EADQ,MAARC,EACYR,EAAMW,SAENX,EAEJ,MAARQ,GAAwB,MAARA,GAAwB,MAARA,GAAwB,cAARA,GAAgC,OAARA,GAAyB,KAARA,GACzFD,EAAUK,IAAI,WAAY,UAAUC,OAAON,EAAUM,UACrDN,EAAUO,QAAQ,CAACD,OAAU,KAAM,IAAK,WACpCN,EAAUX,SACVN,EAAE,6BAA6BM,SAC/BR,EAAyBC,wBACrBU,GAAYA,QAGpBQ,EAAUX,SACNG,GAAYA,MAIVX,EAAAc,aAAd,SAA2BJ,EAAeC,QAAA,IAAAA,IAAAA,EAAA,MACtC,IAAIgB,EAAgBzB,EAAEQ,GACtBiB,EAAMC,YAAY,oCAClBD,EAAME,WAAW,4FACkB,MAA/BnB,EAAKW,SAASC,eAAwD,MAA/BZ,EAAKW,SAASC,eACrDK,EAAMG,WAAWF,YAAY,WAAWA,YAAY,WAAWA,YAAY,cAE5C,MAA/BlB,EAAKW,SAASC,eACdK,EAAMJ,SAASK,YAAY,WAAWA,YAAY,WAAWA,YAAY,cAE1C,OAA/BlB,EAAKW,SAASC,eACdK,EAAMI,YAAYJ,EAAMK,QAExBrB,GAAYA,KAGNX,EAAAkB,aAAd,SAA2BN,EAAeD,QAAA,IAAAA,IAAAA,EAAA,MACtCC,EAAMgB,YAAY,8BAClBhB,EAAMiB,WAAW,4FACjB,IAAIR,EAAWT,EAAM,GAAGS,SAASC,cACjB,MAAZD,GAAgC,MAAZA,GACpBT,EAAMkB,WAAWF,YAAY,WAAWA,YAAY,WAAWA,YAAY,cAE/D,MAAZP,GACAT,EAAMW,SAASK,YAAY,WAAWA,YAAY,WAAWA,YAAY,cAE7D,OAAZP,GACAT,EAAMmB,YAAYnB,EAAMoB,QAExBrB,GAAYA,KAGNX,EAAAe,aAAd,SAA2BL,EAAeC,QAAA,IAAAA,IAAAA,EAAA,MACtC,IACIQ,EADAC,EAAOV,EAAKW,SAASC,cAGrBH,EADQ,MAARC,EACYlB,EAAEQ,GAAMa,SAERrB,EAAEQ,GAGN,MAARU,GAAwB,MAARA,GAAwB,MAARA,GAAwB,cAARA,GAAgC,OAARA,GAAyB,KAARA,GACzFD,EAAUK,IAAI,WAAY,UAAUC,OAAON,EAAUM,UACrDN,EAAUO,QAAQ,CAACD,OAAU,KAAM,IAAK,WACpCN,EAAUX,SACVN,EAAE,6BAA6BM,SAC/BR,EAAyBC,wBACrBU,GAAYA,QAGpBQ,EAAUX,SACNG,GAAYA,MAG5BX,EAzGA,GAAaiC,EAAAjC,yBAAAA,EA4Gb,IAAAkC,EAAA,WACI,SAAAA,EAAoBC,EAAkBC,EAAgBC,EAAwBd,GAA1De,KAAAH,SAAAA,EAA0DG,KAAAf,OAAAA,EAC1E,IAAIgB,EAAoB,KACpBC,EAAoB,KACxBL,EAASM,QAAQ,CACbC,UAAa,OACbC,WAAa,EACbC,QAAW,SACXC,UAAa,SAAUJ,GACnB,IAAIK,EAAW5C,EAAEuC,GAkBjB,OAjBAM,OAAOC,WAAW,WACd,IAAIC,EAAQH,EAASG,QACjBC,EAAQf,EAASgB,SAASC,IAC1BC,EAAWlB,EAASV,SACN,OAAdc,GAA8B,EAARU,IACtBV,EAAaH,EAASa,EAAQ,GAC9BT,EAAYH,EAAS,IACJa,EAAQ,KACrBV,EAAYU,EAAQ,IAERA,EAAQG,EAApBb,IACAA,EAAYU,EAAQG,IAG5BP,EAAStB,IAAI,OAAQe,EAAY,MACjCO,EAAStB,IAAI,MAAOgB,EAAY,OACjC,GACI,UAEXR,MAAQ,EACRsB,QAAWhB,KAAKiB,WAAWC,KAAKlB,QAGpCH,EAASM,QAAQ,QACMN,EAASsB,KAAK,cAC5BC,GAAG,YAAa,SAACC,GACtBA,EAAGC,oBAEPb,OAAOC,WAAWV,KAAKuB,sBAAsBL,KAAKlB,MAAO,KAgHjE,OA7GYJ,EAAA4B,UAAAP,WAAR,WACI,IAAIQ,EAAgBzB,KAAKH,SAErB6B,EAAMD,EAAME,KAAK,OACVC,MAAPF,IACAA,EAAMD,EAAMxC,SAAS0C,KAAK,QAE9BF,EAAMI,QAAQ,eAAeC,QAAQX,KAAK,aAAeO,EAAM,KAAKK,SAAS,SAQ7E,IAAIC,EAAcpE,EADlB8B,6UAIA,GAFAsC,EAAIb,KAAK,WAAWc,KAAK,OAAQR,EAAME,KAAK,SAASM,KAAK,QAASC,IAAI,QAAS,wBAChFF,EAAIb,KAAK,cAAcgB,KAAKD,IAAI,QAAS,gBAAkB,KAAOT,EAAME,KAAK,aACzEF,EAAMlD,SAAS,WACfyD,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAK7B,OAAO+C,KAAKlB,OACrFgC,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAKtB,OAAOwC,KAAKlB,YAClF,GAAIyB,EAAMlD,SAAS,WACtByD,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAK7B,OAAO+C,KAAKlB,OACrFgC,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAKtB,OAAOwC,KAAKlB,YAClF,GAAuC,MAAnCyB,EAAM,GAAG1C,SAASC,cAAuB,CAChD,IAAIqD,EAAQZ,EAAMxC,SACdoD,EAAM9D,SAAS,YACfyD,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAK7B,OAAO+C,KAAKlB,OACrFgC,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAKtB,OAAOwC,KAAKlB,QAC9EqC,EAAM9D,SAAS,YACtByD,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAK7B,OAAO+C,KAAKlB,OACrFgC,EAAIb,KAAK,iBAAiBgB,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAKtB,OAAOwC,KAAKlB,QAErFpD,QAAQC,IAAI,UAAWwF,QAG3BzF,QAAQC,IAAI,UAAW4E,GACvBa,MAAM,WAEV,OAAON,GAGHpC,EAAA4B,UAAAD,sBAAR,WACI,OAAIvB,KAAKH,SAAS0C,GAAG,UACV9B,OAAOC,WAAWV,KAAKuB,sBAAsBL,KAAKlB,MAAO,KAEtB,EAA1CpC,EAAE,QAAQuD,KAAK,kBAAkBlD,OAC1BwC,OAAOC,WAAWV,KAAKuB,sBAAsBL,KAAKlB,MAAO,UAEpEA,KAAKwC,WAGD5C,EAAA4B,UAAAiB,mBAAR,WACI,IAAIf,EAAM1B,KAAKH,SAAS8B,KAAK,OAI7B,OAHWC,MAAPF,IACAA,EAAM1B,KAAKH,SAASZ,SAAS0C,KAAK,QAE/B3B,KAAKH,SAASgC,QAAQ,eAAeV,KAAK,aAAeO,EAAM,MAGlE9B,EAAA4B,UAAAkB,oBAAR,SAA4BC,GACxB,IAAIC,EAAUnC,OAAOmC,QACjBC,EAAUpC,OAAOoC,QAErB7C,KAAKf,OAAO6D,qBACZ9C,KAAKwC,UACLG,EAAOI,KAAK/C,MACZA,KAAKf,OAAO+D,gBAEZvC,OAAOwC,SAASL,EAASC,IAGrBjD,EAAA4B,UAAArD,OAAR,WAAA,IAAA+E,EAAAlD,KACIA,KAAK0C,oBAAoB,WACrBQ,EAAKT,qBAAqB5E,KAAK,SAACC,EAAGC,GAC/BL,EAAyBS,OAAOJ,EAAI,WAChCmF,EAAKjE,OAAOkE,mBAMpBvD,EAAA4B,UAAA9C,OAAR,WAAA,IAAAwE,EAAAlD,KACIA,KAAK0C,oBAAoB,WACrBQ,EAAKT,qBAAqB5E,KAAK,SAACC,EAAGC,GAC/BL,EAAyBgB,OAAOX,EAAI,WAChCmF,EAAKjE,OAAOkE,mBAMrBvD,EAAA4B,UAAAgB,QAAP,WACIxC,KAAKH,SAASM,QAAQ,QAAQA,QAAQ,WAEtC,IAAIuB,EAAM1B,KAAKH,SAAS8B,KAAK,OAClBC,MAAPF,IACAA,EAAM1B,KAAKH,SAASZ,SAAS0C,KAAK,QAEtC3B,KAAKH,SAASgC,QAAQ,eAAeC,QAAQX,KAAK,aAAeO,EAAM,KAAKpC,YAAY,SAExF,IAEI,IAAM8D,EAAYxF,EAAE,YACpBwF,EAAUjD,QAAQ,QAAQA,QAAQ,WAClCiD,EAAUlF,SACZ,MAAOmF,MAGjBzD,EAtJA,GAwJA0D,EAAA,WAsJI,SAAAA,EAAoBC,EAAyBC,EAAmCC,GAAhF,IAAAP,EAAAlD,KAAoBA,KAAAuD,QAAAA,EAAyBvD,KAAAwD,kBAAAA,EAAmCxD,KAAAyD,WAAAA,EApJxEzD,KAAA0D,cAAwB,KACxB1D,KAAA2D,YAAsB,EAoJ1B,IAAIC,EAAYL,EAAQpC,KAAK,eACzB0C,EAAO,IAAIC,EAAAC,mBAAmBH,EAAU3B,KAAK,OACjDjC,KAAKgE,WAAaH,EAAKI,YACvBjE,KAAKyD,WAAWS,kBAAkB,WAC9BX,EAAQpC,KAAK,gBAAgBgD,IAAIjB,EAAKc,WAAWI,WACjDb,EAAQpC,KAAK,yBAAyBgD,IAAIjB,EAAKc,WAAWI,aAG9DpE,KAAKqE,QAAQrE,KAAKgE,WAAWI,WAE7BpE,KAAKuD,QAAQpC,KAAK,qBAAqBiB,MAAMpC,KAAKsE,UAAUpD,KAAKlB,OACjEA,KAAKuD,QAAQpC,KAAK,qBAAqBiB,MAAMpC,KAAKuE,UAAUrD,KAAKlB,OAEjEA,KAAKgE,WAAW5C,GAAG,SAAUpB,KAAKmD,UAAUjC,KAAKlB,OAEzD,OAjKYsD,EAAA9B,UAAAgD,YAAR,SAAoB9E,GAChB,IAAI+E,EAAgB7G,EAAE,QAAU8B,EAAO,UAGvC+E,EAAMtD,KAAK,gCAAgCtD,KAAK,SAACC,EAAGC,GAChD,IAAIsB,EAAgBzB,EAAEG,GAClB2G,EAAarF,EAAMsC,KAAK,eAC5BtC,EAAM8B,KAAK,QAAQY,SAAS,cAAcE,KAAK,mBAAoByC,GAC9DzC,KAAK,YAAa5C,EAAMsC,KAAK,SAC7BM,KAAK,gBAAiB5C,EAAMsC,KAAK,aACtCtC,EAAMC,YAAY,cAAcqF,WAAW,iBAI/CF,EAAMtD,KAAK,iBAAiB7B,YAAY,SACxCmF,EAAMtD,KAAK,UAAUtD,KAAKmC,KAAK4E,qBAAqB1D,KAAKlB,OAGzDyE,EAAMtD,KAAK,kBACNc,KAAK,2BAA4BC,IAAI,QAAS,oBAC9CD,KAAK,yBAA0BC,IAAI,QAAS,kBAEjD,IAAI2C,EAAUJ,EAAM/E,OACpBM,KAAKgE,WAAWc,QAAQD,GACxB7E,KAAK0D,cAAgB1D,KAAK+E,cAAc/E,KAAKgE,WAAWI,WACxDpE,KAAKgE,WAAWgB,KAAK,gBACrBhF,KAAKmD,aAGDG,EAAA9B,UAAAoD,qBAAR,SAA6B9G,EAAGC,GAC5B,IAEIkH,EAFA3G,EAAQV,EAAEG,GACVmH,EAAe5G,EAAMqD,KAAK,4BAQ9BsD,GAJIA,EADA3G,EAAMC,SAAS,YACT2D,IAAI,MAAO,wBAEXA,IAAI,MAAO,uBAEXiD,QAAQ,WAAaD,EAAe,GAEpB,OAAtB5G,EAAM,GAAGS,WACTT,EAAQA,EAAMW,UAGlBX,EAAM2D,KAAK,kBAAmBgD,IAG1B3B,EAAA9B,UAAA4D,mBAAR,WAAA,IAAAlC,EAAAlD,KACIA,KAAKuD,QAAQnC,GAAG,YAAa,cAAe,SAACC,GACrCgE,EAAsBC,aACtBD,EAAsBC,YAAY9C,UAEtC6C,EAAsBC,YAAc,IAAI1F,EACpChC,EAAEyD,EAAGkE,eAAgBlE,EAAGmE,MAAOnE,EAAGoE,MAAOvC,MAK7CI,EAAA9B,UAAA8C,UAAR,WACItE,KAAKgE,WAAWgB,KAAK,gBACrBhF,KAAKuD,QAAQpC,KAAK,uBAAuBtD,KAAK,SAACC,EAAGC,GAC9C,IAAIsB,EAAQzB,EAAEG,GACdsB,EAAM8B,KAAK,2BAA2BjD,SACtCmB,EAAMI,YAAYJ,EAAMG,cAE5BQ,KAAKuD,QAAQpC,KAAK,YAAYtD,KAAK,SAACC,EAAGC,GACnCL,EAAyBc,aAAaT,KAE1CiC,KAAKuD,QAAQpC,KAAK,YAAYtD,KAAK,SAACC,EAAGC,GACnCL,EAAyBe,aAAaV,MAItCuF,EAAA9B,UAAA+C,UAAR,WACIvE,KAAKgE,WAAWgB,KAAK,gBACrBhF,KAAKuD,QAAQpC,KAAK,uBAAuBtD,KAAK,SAACC,EAAGC,GAC9CH,EAAEG,GAAIG,WAEV8B,KAAKuD,QAAQpC,KAAK,YAAYtD,KAAK,SAACC,EAAGC,GACnCL,EAAyBiB,aAAaf,EAAEG,MAE5CiC,KAAKuD,QAAQpC,KAAK,YAAYtD,KAAK,SAACC,EAAGC,GACnCL,EAAyBkB,aAAahB,EAAEG,OAIzCuF,EAAA9B,UAAAsB,mBAAP,WACI9C,KAAKgE,WAAWgB,KAAK,iBAGlB1B,EAAA9B,UAAAwB,cAAP,aAKOM,EAAA9B,UAAAP,WAAP,WACI,OAAOjB,KAAKgE,WAAWI,WAGpBd,EAAA9B,UAAA6C,QAAP,SAAe3E,GACXM,KAAKwE,YAAY9E,GACjBM,KAAKoF,sBAGD9B,EAAA9B,UAAAuD,cAAR,SAAsBrF,GAClB,IAAMgG,EAAW,CACbC,SAAU,IACVC,UAAW,IACXC,SAAU,IACVC,SAAU,IACVC,SAAU,IACVC,SAAU,IACVC,SAAU,IACVC,SAAU,IACVC,UAAW,IACXC,UAAW,IACXC,UAAW,IACXC,SAAU,IACVC,SAAU,IACVC,WAAY,IACZC,UAAW,IACXC,SAAU,KAMd,OAJA5J,OAAOC,KAAK2I,GAAU1I,QAAQ,SAAA2J,GAC1BjH,EAAOA,EAAKyF,QAAQ,IAAIyB,OAAOD,EAAK,KAAMjB,EAASiB,MAGhDjH,EAAKyF,QAAQ,QAAS,KAAKA,QAAQ,QAAS,KAAKA,QAAQ,WAAY,KAGzE7B,EAAA9B,UAAA2B,UAAP,WACQnD,KAAK+E,cAAc/E,KAAKgE,WAAWI,aAAepE,KAAK0D,eACvD1D,KAAKwD,kBAAkBzB,SAAS,UAChC/B,KAAK2D,YAAa,IAElB3D,KAAKwD,kBAAkBlE,YAAY,UACnCU,KAAK2D,YAAa,IAInBL,EAAA9B,UAAAqF,WAAP,WACI,OAAO7G,KAAK2D,YAmBpBL,EAtKA,GAwKAwD,EAAA,WAII,SAAAA,EAAoBvD,EAAyBwD,GAA7C,IAAA7D,EAAAlD,KAAoBA,KAAAuD,QAAAA,EAAyBvD,KAAA+G,SAAAA,EACzC/G,KAAKgH,UAAYC,SAAS1D,EAAQ5B,KAAK,cACvC3B,KAAKkH,YAAcD,SAAS1D,EAAQ5B,KAAK,gBAEzC3B,KAAKmH,cACL5D,EAAQpC,KAAK,oBAAoBtD,KAAK,SAACC,EAAWsJ,GAC9C3K,EAAkBW,kBAAkBQ,EAAEwJ,GAASzF,KAAK,gBAAiBuB,KAgGjF,OA5FY4D,EAAAtF,UAAA2F,YAAR,WAAA,IAAAjE,EAAAlD,KACIA,KAAKuD,QAAQpC,KAAK,oBAAoBiB,MAAM,SAACf,GACzC,IAAMgG,EAASzJ,EAAEyD,EAAGkE,eAAepE,KAAK,oBAClCmG,EAAW,WACkB,IAA3BL,SAASI,EAAOlD,QAChBkD,EAAOlD,IAAI,KACXkD,EAAOxF,QAAQ,cAAcV,KAAK,QAAQY,SAAS,eAAezC,YAAY,iBAE9E+H,EAAOlD,IAAI,KACXkD,EAAOxF,QAAQ,cAAcV,KAAK,QAAQ7B,YAAY,eAAeyC,SAAS,gBAElFmB,EAAKqE,cAGLrE,EAAK6D,SAASF,aACdW,QAAQC,QAAQvF,IAAI,QAAS,mBAAoB,SAACwF,GAC1CA,GACAJ,MAIRA,MAIR,IAAMK,EAAc,SAACpE,GACjB,IAAMtG,EAAcgK,SAAS1D,EAAQ5B,KAAK,iBACpCiG,EAAgBnL,EAAkBU,mBAAmBF,GAE3DsG,EAAQpC,KAAK,4BAA4B7B,YAAY,YACrDiE,EAAQpC,KAAK,yBAA2ByG,GAAe7F,SAAS,aAGpE/B,KAAKuD,QAAQpC,KAAK,8BAA8BC,GAAG,mBAAoB,SAAAC,GACnEsG,EAAY/J,EAAEyD,EAAGkE,kBAGrBvF,KAAKuD,QAAQpC,KAAK,yBAAyBiB,MAAM,SAAAf,GAC7CA,EAAGwG,iBACH,IAAMtE,EAAU3F,EAAEyD,EAAGkE,eAAe1D,QAAQ,cACtC5E,EAAcgK,SAAS1D,EAAQ5B,KAAK,iBAC1ClF,EAAkBc,UAAUN,EAAagK,SAASrJ,EAAEyD,EAAGkE,eAAe5D,KAAK,YAC3EgG,EAAYpE,MAIbuD,EAAAtF,UAAA/D,yBAAP,SAAgCR,EAAqBO,GACjD,GAAIwC,KAAK+G,SAASF,aACdjK,QAAQC,IAAI,sCADhB,CAIA,IAAM0G,EAAUvD,KAAKuD,QAAQpC,KAAK,sCAAwClE,EAAc,KAClF6K,EAAOvE,EAAQpC,KAAK,QACpBkG,EAAS9D,EAAQpC,KAAK,0BAOL,IANnB,CACA/E,EACAC,EACAC,EACAC,EACAC,GACFuL,QAAQvK,IACN6J,EAAOlD,IAAI,KACX2D,EAAKxI,YAAY,eAAeyC,SAAS,iBAEzCsF,EAAOlD,IAAI,KACX2D,EAAK/F,SAAS,eAAezC,YAAY,gBAE7CU,KAAKuH,eAGDT,EAAAtF,UAAA+F,WAAR,WAAA,IAAArE,EAAAlD,KACUgI,EAAe,GACrBhI,KAAKuD,QAAQpC,KAAK,+BAA+BtD,KAAK,SAACC,EAAGC,GACtDiK,EAAa1K,KAAK2J,SAASrJ,EAAEG,GAAI4D,KAAK,oBAE1C,IAAMsG,EAAMjI,KAAKuD,QAAQ5B,KAAK,cAAcwD,QAAQ,QAAS6C,EAAaE,KAAK,MAC/EtK,EAAEuK,IAAIF,EAAK,SAACtG,GACRuB,EAAK6D,SAAS1C,QAAQ1C,EAAKQ,MAE3B,IAAIiG,EAAa,GACjBzG,EAAKyG,WAAWpL,QAAQ,SAAAqL,GACpBD,GAAcC,IAGlBnF,EAAKK,QAAQpC,KAAK,qBAAqBzB,KAAK0I,GACf,EAAzBzG,EAAKyG,WAAWnK,OAChBiF,EAAKK,QAAQxB,SAAS,iBAEtBmB,EAAKK,QAAQjE,YAAY,oBAIzCwH,EA1GA,GA4GAzB,EAAA,WAOI,SAAAA,EAAoBiD,GAApB,IAAApF,EAAAlD,KAAoBA,KAAAsI,MAAAA,EAFZtI,KAAAuI,UAA6D,GAGjE9L,EAAkBC,KAAK4L,EAAM3G,KAAK,uBAElC/D,EAAE,qBAAqBC,KAAK,SAACC,EAAGC,GAC5B,IAAMyK,EAAQ5K,EAAEG,GACV6F,EAAY4E,EAAMrH,KAAK,qBACvBsH,EAAWD,EAAMrH,KAAK,qBAC5B+B,EAAKqF,UAAU3E,EAAU3B,KAAK,OAAS,IAAIqB,EAA8BM,EAAW6E,EAAUvF,GAC9FU,EAAUxC,GAAG,YAAa,SAACC,GACvBgE,EAAsBqD,WAAarH,EAAGsH,UAG1C,IAAI7B,EAA+B0B,EAAOtF,EAAKqF,UAAU3E,EAAU3B,KAAK,UAG5EjC,KAAKsI,MAAMlH,GAAG,SAAU,WACpBxD,EAAE6C,QAAQmI,IAAI,eAAgBvD,EAAsBwD,eAExDjL,EAAE6C,QAAQW,GAAG,eAAgBiE,EAAsBwD,aAEnD7I,KAAK8I,kBAmGb,OAhGkBzD,EAAAwD,YAAd,WACI,OAAO3G,IAAI,MAAO,uBAGfmD,EAAA7D,UAAA0C,kBAAP,SAAyB6E,GACrB/I,KAAKsI,MAAMU,OAAOD,IAGd1D,EAAA7D,UAAAyH,aAAR,SAAqBC,GACjBlJ,KAAKmJ,kBAAkBhI,KAAK,oBAAoBiI,OAEhD,IAKIC,EAAezL,EAAE,QAAQqE,KAAK,QAC9BqH,EAAY,IAAIC,KAAKC,eAAeH,EAN1B,CACNI,KAAM,UAAWC,MAAO,UAAWC,IAAK,UACxCC,KAAM,UAAWC,OAAQ,UACzBC,QAAQ,IAGuCC,OAAOb,GAE9DlJ,KAAKmJ,kBAAkBhI,KAAK,qBAAqBgB,KAAKmH,IAGlDjE,EAAA7D,UAAAwI,UAAR,WAEI,IAFJ,IAAA9G,EAAAlD,KACQiK,EAAW,GACAC,EAAA,EAAAC,EAAArN,OAAOsN,oBAAoBpK,KAAKuI,WAAhC2B,EAAAC,EAAAlM,OAAAiM,IAA4C,CAAtD,IAAIG,EAAEF,EAAAD,GACPD,EAASI,EAAGlF,QAAQ,kBAAmB,KAAOnF,KAAKuI,UAAU8B,GAAIpJ,aAErE,IAAIqJ,EAAoBtK,KAAKmJ,kBAAkBhI,KAAK,sBAAsBoJ,KAAK,WAE/E3M,EAAE4M,KAAK,CACHC,KAAM,OACNxC,IAAKjI,KAAKsI,MAAM3G,KAAK,eACrBA,KAAM,CACF+I,OAAWJ,EAAW,EAAI,EAC1BL,SAAYA,EACZU,MAAS3K,KAAKsI,MAAMnH,KAAK,uBAAuBgD,OAEpDyG,QAAS,SAACC,GACFA,EAAa,SACb3H,EAAKiG,kBAAkBhI,KAAK,gBAAgBY,SAAS,UACrDmB,EAAK+F,aAAa,IAAI6B,KAAKD,EAAU,OACjCP,EACApH,EAAKoF,MAAMnH,KAAK,eAAe7B,YAAY,UAE3C4D,EAAKoF,MAAMnH,KAAK,eAAeY,SAAS,YAG5CmB,EAAKiG,kBAAkBhI,KAAK,gBAAgB7B,YAAY,UACxD4D,EAAKiG,kBAAkBhI,KAAK,8BAA8BY,SAAS,UACnEmB,EAAKiG,kBAAkBhI,KAAK,6BAA6BgB,KAAK0I,EAAW,OAAGvL,YAAY,YAGhGyL,MAAO,WACH7H,EAAKiG,kBAAkBhI,KAAK,gBAAgB7B,YAAY,UACxD4D,EAAKiG,kBAAkBhI,KAAK,8BAA8B7B,YAAY,UACtE4D,EAAKiG,kBAAkBhI,KAAK,6BAA6BgB,KAAK,IAAIJ,SAAS,cAK/EsD,EAAA7D,UAAAwJ,oBAAR,WAAA,IAAA9H,EAAAlD,KACQiL,EAAkBjL,KAAKmJ,kBAAkBhI,KAAK,wBAQlD,GANAV,OAAOyK,YAAY,WACXD,EAAQV,KAAK,YACbrH,EAAK8G,aAEV,KAECmB,aAAc,CACd,IAAIC,EAAQD,aAAaE,QAAQ,2BACnB,OAAVD,GACAH,EAAQV,KAAK,UAAqB,KAATa,GAGjCH,EAAQK,OAAO,WACX,IAAIC,EAAkBN,EAAQV,KAAK,WAC/BY,cACAA,aAAaK,QAAQ,0BAA4BD,EAAS,IAAM,OAErEjL,QAAQ,WAGP+E,EAAA7D,UAAAsH,gBAAR,WAMI,GALA9I,KAAKmJ,kBAAoBnJ,KAAKsI,MAAMnH,KAAK,qBACzCnB,KAAKmJ,kBAAkBhI,KAAK,cAAcC,GAAG,QAASpB,KAAKgK,UAAU9I,KAAKlB,OAC1EA,KAAKmJ,kBAAkBhI,KAAK,sBAAsBC,GAAG,SAAUpB,KAAKgK,UAAU9I,KAAKlB,OACnFA,KAAKgL,sBAEDhL,KAAKmJ,kBAAkBxH,KAAK,gBAAiB,CAC7C,IAAIuH,EAAO,IAAI4B,KAAK9K,KAAKmJ,kBAAkBxH,KAAK,iBAChD3B,KAAKiJ,aAAaC,GAGtBtL,EAAE,sBAAsBM,UA3HdmH,EAAAC,YAAwC,KACxCD,EAAAqD,WAAqB,KA4HvCrD,EA9HA,GAAa1F,EAAA0F,sBAAAA","file":"MotionMergeAmendments.js","sourcesContent":["import {AntragsgruenEditor} from \"../shared/AntragsgruenEditor\";\nimport editor = CKEDITOR.editor;\n\nconst STATUS_ACCEPTED = 4;\nconst STATUS_MODIFIED_ACCEPTED = 6;\nconst STATUS_PROCESSED = 17;\nconst STATUS_ADOPTED = 8;\nconst STATUS_COMPLETED = 9;\n\nclass AmendmentStatuses {\n    private static statuses: {[amendmentId: number]: number};\n    private static statusListeners: {[amendmentId: number]: MotionMergeAmendmentsParagraph[]} = {};\n\n    public static init(statuses: {[amendmentId: number]: number}) {\n        console.log(\"Init statuses\");\n        AmendmentStatuses.statuses = statuses;\n        Object.keys(statuses).forEach(amendmentId => {\n           AmendmentStatuses.statusListeners[amendmentId] = [];\n        });\n    }\n\n    public static getAmendmentStatus(amendmentId: number): number {\n        return AmendmentStatuses.statuses[amendmentId];\n    }\n\n    public static registerParagraph(amendmentId: number, paragraph: MotionMergeAmendmentsParagraph) {\n        AmendmentStatuses.statusListeners[amendmentId].push(paragraph);\n    }\n\n    public static setStatus(amendmentId: number, status: number) {\n        AmendmentStatuses.statuses[amendmentId] = status;\n        AmendmentStatuses.statusListeners[amendmentId].forEach(paragraph => {\n            paragraph.onAmendmentStatusChanged(amendmentId, status);\n        });\n    }\n}\n\nexport class MotionMergeChangeActions {\n    public static removeEmptyParagraphs() {\n        $('.paragraphHolder').each((i, el) => {\n            if (el.childNodes.length == 0) {\n                $(el).remove();\n            }\n        });\n    }\n\n    public static accept(node: Element, onFinished: () => void = null) {\n        let $node = $(node);\n        if ($node.hasClass(\"ice-ins\")) {\n            MotionMergeChangeActions.insertAccept(node, onFinished);\n        }\n        if ($node.hasClass(\"ice-del\")) {\n            MotionMergeChangeActions.deleteAccept(node, onFinished);\n        }\n    }\n\n    public static reject(node: Element, onFinished: () => void = null) {\n        let $node = $(node);\n        if ($node.hasClass(\"ice-ins\")) {\n            MotionMergeChangeActions.insertReject($node, onFinished);\n        }\n        if ($node.hasClass(\"ice-del\")) {\n            MotionMergeChangeActions.deleteReject($node, onFinished);\n        }\n    }\n\n    public static insertReject($node: JQuery, onFinished: () => void = null) {\n        let $removeEl: JQuery,\n            name = $node[0].nodeName.toLowerCase();\n        if (name == 'li') {\n            $removeEl = $node.parent();\n        } else {\n            $removeEl = $node;\n        }\n        if (name == 'ul' || name == 'ol' || name == 'li' || name == 'blockquote' || name == 'pre' || name == 'p') {\n            $removeEl.css(\"overflow\", \"hidden\").height($removeEl.height());\n            $removeEl.animate({\"height\": \"0\"}, 250, () => {\n                $removeEl.remove();\n                $(\".collidingParagraph:empty\").remove();\n                MotionMergeChangeActions.removeEmptyParagraphs();\n                if (onFinished) onFinished();\n            });\n        } else {\n            $removeEl.remove();\n            if (onFinished) onFinished();\n        }\n    }\n\n    public static insertAccept(node: Element, onFinished: () => void = null) {\n        let $this: JQuery = $(node);\n        $this.removeClass(\"ice-cts ice-ins appendHint moved\");\n        $this.removeAttr(\"data-moving-partner data-moving-partner-id data-moving-partner-paragraph data-moving-msg\");\n        if (node.nodeName.toLowerCase() == 'ul' || node.nodeName.toLowerCase() == 'ol') {\n            $this.children().removeClass(\"ice-cts\").removeClass(\"ice-ins\").removeClass(\"appendHint\");\n        }\n        if (node.nodeName.toLowerCase() == 'li') {\n            $this.parent().removeClass(\"ice-cts\").removeClass(\"ice-ins\").removeClass(\"appendHint\");\n        }\n        if (node.nodeName.toLowerCase() == 'ins') {\n            $this.replaceWith($this.html());\n        }\n        if (onFinished) onFinished();\n    }\n\n    public static deleteReject($node: JQuery, onFinished: () => void = null) {\n        $node.removeClass(\"ice-cts ice-del appendHint\");\n        $node.removeAttr(\"data-moving-partner data-moving-partner-id data-moving-partner-paragraph data-moving-msg\");\n        let nodeName = $node[0].nodeName.toLowerCase();\n        if (nodeName == 'ul' || nodeName == 'ol') {\n            $node.children().removeClass(\"ice-cts\").removeClass(\"ice-del\").removeClass(\"appendHint\");\n        }\n        if (nodeName == 'li') {\n            $node.parent().removeClass(\"ice-cts\").removeClass(\"ice-del\").removeClass(\"appendHint\");\n        }\n        if (nodeName == 'del') {\n            $node.replaceWith($node.html());\n        }\n        if (onFinished) onFinished();\n    }\n\n    public static deleteAccept(node: Element, onFinished: () => void = null) {\n        let name = node.nodeName.toLowerCase(),\n            $removeEl: JQuery;\n        if (name == 'li') {\n            $removeEl = $(node).parent();\n        } else {\n            $removeEl = $(node);\n        }\n\n        if (name == 'ul' || name == 'ol' || name == 'li' || name == 'blockquote' || name == 'pre' || name == 'p') {\n            $removeEl.css(\"overflow\", \"hidden\").height($removeEl.height());\n            $removeEl.animate({\"height\": \"0\"}, 250, () => {\n                $removeEl.remove();\n                $(\".collidingParagraph:empty\").remove();\n                MotionMergeChangeActions.removeEmptyParagraphs();\n                if (onFinished) onFinished();\n            });\n        } else {\n            $removeEl.remove();\n            if (onFinished) onFinished();\n        }\n    }\n}\n\n\nclass MotionMergeChangeTooltip {\n    constructor(private $element: JQuery, mouseX: number, mouseY: number, private parent: MotionMergeAmendmentsTextarea) {\n        let positionX: number = null,\n            positionY: number = null;\n        $element.popover({\n            'container': 'body',\n            'animation': false,\n            'trigger': 'manual',\n            'placement': function (popover) {\n                let $popover = $(popover);\n                window.setTimeout(() => {\n                    let width = $popover.width(),\n                        elTop = $element.offset().top,\n                        elHeight = $element.height();\n                    if (positionX === null && width > 0) {\n                        positionX = (mouseX - width / 2);\n                        positionY = mouseY + 10;\n                        if (positionY < (elTop + 19)) {\n                            positionY = elTop + 19;\n                        }\n                        if (positionY > elTop + elHeight) {\n                            positionY = elTop + elHeight;\n                        }\n                    }\n                    $popover.css(\"left\", positionX + \"px\");\n                    $popover.css(\"top\", positionY + \"px\");\n                }, 1);\n                return \"bottom\";\n            },\n            'html': true,\n            'content': this.getContent.bind(this)\n        });\n\n        $element.popover('show');\n        let $popover: JQuery = $element.find(\"> .popover\");\n        $popover.on(\"mousemove\", (ev) => {\n            ev.stopPropagation();\n        });\n        window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n    }\n\n    private getContent() {\n        let $myEl: JQuery = this.$element,\n            html,\n            cid = $myEl.data(\"cid\");\n        if (cid == undefined) {\n            cid = $myEl.parent().data(\"cid\");\n        }\n        $myEl.parents(\".texteditor\").first().find(\"[data-cid=\" + cid + \"]\").addClass(\"hover\");\n\n        html = '<div>';\n        html += '<button type=\"button\" class=\"accept btn btn-sm btn-default\"></button>';\n        html += '<button type=\"button\" class=\"reject btn btn-sm btn-default\"></button>';\n        html += '<a href=\"#\" class=\"btn btn-small btn-default opener\" target=\"_blank\"><span class=\"glyphicon glyphicon-new-window\"></span></a>';\n        html += '<div class=\"initiator\" style=\"font-size: 0.8em;\"></div>';\n        html += '</div>';\n        let $el: JQuery = $(html);\n        $el.find(\".opener\").attr(\"href\", $myEl.data(\"link\")).attr(\"title\", __t(\"merge\", \"title_open_in_blank\"));\n        $el.find(\".initiator\").text(__t(\"merge\", \"initiated_by\") + \": \" + $myEl.data(\"username\"));\n        if ($myEl.hasClass(\"ice-ins\")) {\n            $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n            $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n        } else if ($myEl.hasClass(\"ice-del\")) {\n            $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n            $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n        } else if ($myEl[0].nodeName.toLowerCase() == 'li') {\n            let $list = $myEl.parent();\n            if ($list.hasClass(\"ice-ins\")) {\n                $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n                $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n            } else if ($list.hasClass(\"ice-del\")) {\n                $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n                $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n            } else {\n                console.log(\"unknown\", $list);\n            }\n        } else {\n            console.log(\"unknown\", $myEl);\n            alert(\"unknown\");\n        }\n        return $el;\n    }\n\n    private removePopupIfInactive() {\n        if (this.$element.is(\":hover\")) {\n            return window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n        }\n        if ($(\"body\").find(\".popover:hover\").length > 0) {\n            return window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n        }\n        this.destroy();\n    }\n\n    private affectedChangesets() {\n        let cid = this.$element.data(\"cid\");\n        if (cid == undefined) {\n            cid = this.$element.parent().data(\"cid\");\n        }\n        return this.$element.parents(\".texteditor\").find(\"[data-cid=\" + cid + \"]\");\n    }\n\n    private performActionWithUI(action) {\n        let scrollX = window.scrollX,\n            scrollY = window.scrollY;\n\n        this.parent.saveEditorSnapshot();\n        this.destroy();\n        action.call(this);\n        this.parent.focusTextarea();\n\n        window.scrollTo(scrollX, scrollY);\n    }\n\n    private accept() {\n        this.performActionWithUI(() => {\n            this.affectedChangesets().each((i, el) => {\n                MotionMergeChangeActions.accept(el, () => {\n                    this.parent.onChanged();\n                });\n            });\n        });\n    }\n\n    private reject() {\n        this.performActionWithUI(() => {\n            this.affectedChangesets().each((i, el) => {\n                MotionMergeChangeActions.reject(el, () => {\n                    this.parent.onChanged();\n                });\n            });\n        });\n    }\n\n    public destroy() {\n        this.$element.popover(\"hide\").popover(\"destroy\");\n\n        let cid = this.$element.data(\"cid\");\n        if (cid == undefined) {\n            cid = this.$element.parent().data(\"cid\");\n        }\n        this.$element.parents(\".texteditor\").first().find(\"[data-cid=\" + cid + \"]\").removeClass(\"hover\");\n\n        try {\n            // Remove stale objects that were not removed correctly previously\n            const $popovers = $(\".popover\");\n            $popovers.popover(\"hide\").popover(\"destroy\");\n            $popovers.remove();\n        } catch (e) {\n        }\n    }\n}\n\nclass MotionMergeAmendmentsTextarea {\n    private texteditor: editor;\n    private unchangedText: string = null;\n    private hasChanged: boolean = false;\n\n    private prepareText(html: string) {\n        let $text: JQuery = $('<div>' + html + '</div>');\n\n        // Move the amendment-Data from OL's and UL's to their list items\n        $text.find(\"ul.appendHint, ol.appendHint\").each((i, el) => {\n            let $this: JQuery = $(el),\n                appendHint = $this.data(\"append-hint\");\n            $this.find(\"> li\").addClass(\"appendHint\").attr(\"data-append-hint\", appendHint)\n                .attr(\"data-link\", $this.data(\"link\"))\n                .attr(\"data-username\", $this.data(\"username\"));\n            $this.removeClass(\"appendHint\").removeData(\"append-hint\");\n        });\n\n        // Remove double markup\n        $text.find(\".moved .moved\").removeClass('moved');\n        $text.find(\".moved\").each(this.markupMovedParagraph.bind(this));\n\n        // Add hints about starting / ending collisions\n        $text.find(\".hasCollisions\")\n            .attr(\"data-collision-start-msg\", __t('merge', 'colliding_start'))\n            .attr(\"data-collision-end-msg\", __t('merge', 'colliding_end'));\n\n        let newText = $text.html();\n        this.texteditor.setData(newText);\n        this.unchangedText = this.normalizeHtml(this.texteditor.getData());\n        this.texteditor.fire('saveSnapshot');\n        this.onChanged();\n    }\n\n    private markupMovedParagraph(i, el) {\n        let $node = $(el),\n            paragraphNew = $node.data('moving-partner-paragraph'),\n            msg: string;\n\n        if ($node.hasClass('inserted')) {\n            msg = __t('std', 'moved_paragraph_from');\n        } else {\n            msg = __t('std', 'moved_paragraph_to');\n        }\n        msg = msg.replace(/##PARA##/, (paragraphNew + 1));\n\n        if ($node[0].nodeName === 'LI') {\n            $node = $node.parent();\n        }\n\n        $node.attr(\"data-moving-msg\", msg);\n    }\n\n    private initializeTooltips() {\n        this.$holder.on(\"mouseover\", \".appendHint\", (ev) => {\n            if (MotionMergeAmendments.activePopup) {\n                MotionMergeAmendments.activePopup.destroy();\n            }\n            MotionMergeAmendments.activePopup = new MotionMergeChangeTooltip(\n                $(ev.currentTarget), ev.pageX, ev.pageY, this\n            );\n        });\n    }\n\n    private acceptAll() {\n        this.texteditor.fire('saveSnapshot');\n        this.$holder.find(\".collidingParagraph\").each((i, el) => {\n            let $this = $(el);\n            $this.find(\".collidingParagraphHead\").remove();\n            $this.replaceWith($this.children());\n        });\n        this.$holder.find(\".ice-ins\").each((i, el) => {\n            MotionMergeChangeActions.insertAccept(el);\n        });\n        this.$holder.find(\".ice-del\").each((i, el) => {\n            MotionMergeChangeActions.deleteAccept(el);\n        });\n    }\n\n    private rejectAll() {\n        this.texteditor.fire('saveSnapshot');\n        this.$holder.find(\".collidingParagraph\").each((i, el) => {\n            $(el).remove();\n        });\n        this.$holder.find(\".ice-ins\").each((i, el) => {\n            MotionMergeChangeActions.insertReject($(el));\n        });\n        this.$holder.find(\".ice-del\").each((i, el) => {\n            MotionMergeChangeActions.deleteReject($(el));\n        });\n    }\n\n    public saveEditorSnapshot() {\n        this.texteditor.fire('saveSnapshot');\n    }\n\n    public focusTextarea() {\n        //this.$holder.find(\".texteditor\").focus();\n        // This lead to strange cursor behavior, e.g. when removing a colliding paragraph\n    }\n\n    public getContent(): string {\n        return this.texteditor.getData();\n    }\n\n    public setText(html: string) {\n        this.prepareText(html);\n        this.initializeTooltips();\n    }\n\n    private normalizeHtml(html: string) {\n        const entities = {\n            '&nbsp;': ' ',\n            '&ndash;': '-',\n            '&auml;': 'ä',\n            '&ouml;': 'ö',\n            '&uuml;': 'ü',\n            '&Auml;': 'Ä',\n            '&Ouml;': 'Ö',\n            '&Uuml;': 'Ü',\n            '&szlig;': 'ß',\n            '&bdquo;': '„',\n            '&ldquo;': '“',\n            '&bull;': '•',\n            '&sect;': '§',\n            '&eacute;': 'é',\n            '&rsquo;': '’',\n            '&euro;': '€'\n        };\n        Object.keys(entities).forEach(ent => {\n            html = html.replace(new RegExp(ent, 'g'), entities[ent]);\n        });\n\n        return html.replace(/\\s+</g, '<').replace(/>\\s+/g, '>').replace(/<[^>]*>/g, '');\n    }\n\n    public onChanged() {\n        if (this.normalizeHtml(this.texteditor.getData()) === this.unchangedText) {\n            this.$changedIndicator.addClass(\"hidden\");\n            this.hasChanged = false;\n        } else {\n            this.$changedIndicator.removeClass(\"hidden\");\n            this.hasChanged = true;\n        }\n    }\n\n    public hasChanges(): boolean {\n        return this.hasChanged;\n    }\n\n    constructor(private $holder: JQuery, private $changedIndicator: JQuery, private rootObject: MotionMergeAmendments) {\n        let $textarea = $holder.find(\".texteditor\");\n        let edit = new AntragsgruenEditor($textarea.attr(\"id\"));\n        this.texteditor = edit.getEditor();\n        this.rootObject.addSubmitListener(() => {\n            $holder.find(\"textarea.raw\").val(this.texteditor.getData());\n            $holder.find(\"textarea.consolidated\").val(this.texteditor.getData());\n        });\n\n        this.setText(this.texteditor.getData());\n\n        this.$holder.find(\".acceptAllChanges\").click(this.acceptAll.bind(this));\n        this.$holder.find(\".rejectAllChanges\").click(this.rejectAll.bind(this));\n\n        this.texteditor.on('change', this.onChanged.bind(this));\n    }\n}\n\nclass MotionMergeAmendmentsParagraph {\n    private sectionId: number;\n    private paragraphId: number;\n\n    constructor(private $holder: JQuery, private textarea: MotionMergeAmendmentsTextarea) {\n        this.sectionId = parseInt($holder.data('sectionId'));\n        this.paragraphId = parseInt($holder.data('paragraphId'));\n\n        this.initButtons();\n        $holder.find(\".amendmentStatus\").each((i: number, element) => {\n            AmendmentStatuses.registerParagraph($(element).data(\"amendment-id\"), this);\n        });\n    }\n\n    private initButtons() {\n        this.$holder.find('.toggleAmendment').click((ev) => {\n            const $input = $(ev.currentTarget).find(\".amendmentActive\");\n            const doToggle = () => {\n                if (parseInt($input.val()) === 1) {\n                    $input.val(\"0\");\n                    $input.parents(\".btn-group\").find(\".btn\").addClass(\"btn-default\").removeClass(\"btn-success\");\n                } else {\n                    $input.val(\"1\");\n                    $input.parents(\".btn-group\").find(\".btn\").removeClass(\"btn-default\").addClass(\"btn-success\");\n                }\n                this.reloadText();\n            };\n\n            if (this.textarea.hasChanges()) {\n                bootbox.confirm(__t('merge', 'reloadParagraph'), (result) => {\n                    if (result) {\n                        doToggle();\n                    }\n                });\n            } else {\n                doToggle();\n            }\n        });\n\n        const initTooltip = ($holder: JQuery) => {\n            const amendmentId = parseInt($holder.data(\"amendment-id\"));\n            const currentStatus = AmendmentStatuses.getAmendmentStatus(amendmentId);\n\n            $holder.find(\".dropdown-menu .selected\").removeClass(\"selected\");\n            $holder.find(\".dropdown-menu .status\" + currentStatus).addClass(\"selected\");\n        };\n\n        this.$holder.find('.btn-group.amendmentStatus').on('show.bs.dropdown', ev => {\n            initTooltip($(ev.currentTarget))\n        });\n\n        this.$holder.find(\".btn-group .setStatus\").click(ev => {\n            ev.preventDefault();\n            const $holder = $(ev.currentTarget).parents(\".btn-group\");\n            const amendmentId = parseInt($holder.data(\"amendment-id\"));\n            AmendmentStatuses.setStatus(amendmentId, parseInt($(ev.currentTarget).data(\"status\")));\n            initTooltip($holder);\n        });\n    }\n\n    public onAmendmentStatusChanged(amendmentId: number, status: number) {\n        if (this.textarea.hasChanges()) {\n            console.log(\"Skipping, as there are changes\");\n            return;\n        }\n        const $holder = this.$holder.find(\".amendmentStatus[data-amendment-id=\" + amendmentId + \"]\");\n        const $btn = $holder.find(\".btn\");\n        const $input = $holder.find(\"input.amendmentActive\");\n        if ([\n            STATUS_ACCEPTED,\n            STATUS_MODIFIED_ACCEPTED,\n            STATUS_PROCESSED,\n            STATUS_ADOPTED,\n            STATUS_COMPLETED\n        ].indexOf(status) !== -1) {\n            $input.val(\"1\");\n            $btn.removeClass(\"btn-default\").addClass(\"btn-success\");\n        } else {\n            $input.val(\"0\");\n            $btn.addClass(\"btn-default\").removeClass(\"btn-success\");\n        }\n        this.reloadText();\n    }\n\n    private reloadText() {\n        const amendmentIds = [];\n        this.$holder.find(\".amendmentActive[value='1']\").each((i, el) => {\n            amendmentIds.push(parseInt($(el).data('amendment-id')));\n        });\n        const url = this.$holder.data(\"reload-url\").replace('DUMMY', amendmentIds.join(\",\"));\n        $.get(url, (data) => {\n            this.textarea.setText(data.text);\n\n            let collisions = '';\n            data.collisions.forEach(str => {\n                collisions += str;\n            });\n\n            this.$holder.find(\".collisionsHolder\").html(collisions);\n            if (data.collisions.length > 0) {\n                this.$holder.addClass(\"hasCollisions\");\n            } else {\n                this.$holder.removeClass(\"hasCollisions\");\n            }\n        });\n    }\n}\n\nexport class MotionMergeAmendments {\n    public static activePopup: MotionMergeChangeTooltip = null;\n    public static currMouseX: number = null;\n\n    public $draftSavingPanel: JQuery;\n    private textareas: { [id: string]: MotionMergeAmendmentsTextarea } = {};\n\n    constructor(private $form: JQuery) {\n        AmendmentStatuses.init($form.data(\"amendment-statuses\"));\n\n        $(\".paragraphWrapper\").each((i, el) => {\n            const $para = $(el);\n            const $textarea = $para.find(\".wysiwyg-textarea\");\n            const $changed = $para.find(\".changedIndicator\");\n            this.textareas[$textarea.attr(\"id\")] = new MotionMergeAmendmentsTextarea($textarea, $changed, this);\n            $textarea.on(\"mousemove\", (ev) => {\n                MotionMergeAmendments.currMouseX = ev.offsetX;\n            });\n\n            new MotionMergeAmendmentsParagraph($para, this.textareas[$textarea.attr(\"id\")]);\n        });\n\n        this.$form.on(\"submit\", () => {\n            $(window).off(\"beforeunload\", MotionMergeAmendments.onLeavePage);\n        });\n        $(window).on(\"beforeunload\", MotionMergeAmendments.onLeavePage);\n\n        this.initDraftSaving();\n    }\n\n    public static onLeavePage(): string {\n        return __t(\"std\", \"leave_changed_page\");\n    }\n\n    public addSubmitListener(cb) {\n        this.$form.submit(cb);\n    }\n\n    private setDraftDate(date: Date) {\n        this.$draftSavingPanel.find(\".lastSaved .none\").hide();\n\n        let options = {\n                year: 'numeric', month: 'numeric', day: 'numeric',\n                hour: 'numeric', minute: 'numeric',\n                hour12: false\n            },\n            lang: string = $(\"html\").attr(\"lang\"),\n            formatted = new Intl.DateTimeFormat(lang, options).format(date);\n\n        this.$draftSavingPanel.find(\".lastSaved .value\").text(formatted);\n    }\n\n    private saveDraft() {\n        let sections = {};\n        for (let id of Object.getOwnPropertyNames(this.textareas)) {\n            sections[id.replace('section_holder_', '')] = this.textareas[id].getContent();\n        }\n        let isPublic: boolean = this.$draftSavingPanel.find('input[name=public]').prop('checked');\n\n        $.ajax({\n            type: \"POST\",\n            url: this.$form.data('draftSaving'),\n            data: {\n                'public': (isPublic ? 1 : 0),\n                'sections': sections,\n                '_csrf': this.$form.find('> input[name=_csrf]').val()\n            },\n            success: (ret) => {\n                if (ret['success']) {\n                    this.$draftSavingPanel.find('.savingError').addClass('hidden');\n                    this.setDraftDate(new Date(ret['date']));\n                    if (isPublic) {\n                        this.$form.find('.publicLink').removeClass('hidden');\n                    } else {\n                        this.$form.find('.publicLink').addClass('hidden');\n                    }\n                } else {\n                    this.$draftSavingPanel.find('.savingError').removeClass('hidden');\n                    this.$draftSavingPanel.find('.savingError .errorNetwork').addClass('hidden');\n                    this.$draftSavingPanel.find('.savingError .errorHolder').text(ret['error']).removeClass('hidden');\n                }\n            },\n            error: () => {\n                this.$draftSavingPanel.find('.savingError').removeClass('hidden');\n                this.$draftSavingPanel.find('.savingError .errorNetwork').removeClass('hidden');\n                this.$draftSavingPanel.find('.savingError .errorHolder').text('').addClass('hidden');\n            }\n        });\n    }\n\n    private initAutosavingDraft() {\n        let $toggle: JQuery = this.$draftSavingPanel.find('input[name=autosave]');\n\n        window.setInterval(() => {\n            if ($toggle.prop('checked')) {\n                this.saveDraft();\n            }\n        }, 5000);\n\n        if (localStorage) {\n            let state = localStorage.getItem('merging-draft-auto-save');\n            if (state !== null) {\n                $toggle.prop('checked', (state == '1'));\n            }\n        }\n        $toggle.change(() => {\n            let active: boolean = $toggle.prop('checked');\n            if (localStorage) {\n                localStorage.setItem('merging-draft-auto-save', (active ? '1' : '0'));\n            }\n        }).trigger('change');\n    }\n\n    private initDraftSaving() {\n        this.$draftSavingPanel = this.$form.find('#draftSavingPanel');\n        this.$draftSavingPanel.find('.saveDraft').on('click', this.saveDraft.bind(this));\n        this.$draftSavingPanel.find('input[name=public]').on('change', this.saveDraft.bind(this));\n        this.initAutosavingDraft();\n\n        if (this.$draftSavingPanel.data(\"resumed-date\")) {\n            let date = new Date(this.$draftSavingPanel.data(\"resumed-date\"));\n            this.setDraftDate(date);\n        }\n\n        $(\"#yii-debug-toolbar\").remove();\n    }\n}\n"]}