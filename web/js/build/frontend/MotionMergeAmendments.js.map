{"version":3,"sources":["frontend/MotionMergeAmendments.ts"],"names":["AMENDMENT_VERSION","STATUS_ACCEPTED","STATUS_MODIFIED_ACCEPTED","STATUS_PROCESSED","STATUS_ADOPTED","STATUS_COMPLETED","AmendmentStatuses","init","statuses","versions","Object","keys","forEach","amendmentId","statusListeners","getAmendmentStatus","getAmendmentVersion","registerParagraph","paragraph","push","setStatus","status","onAmendmentStatusChanged","setVersion","version","onAmendmentVersionChanged","getAllStatuses","getAllVersions","MotionMergeChangeActions","removeEmptyParagraphs","$","each","i","el","childNodes","length","remove","accept","node","onFinished","$node","hasClass","insertAccept","deleteAccept","reject","insertReject","deleteReject","$removeEl","name","nodeName","toLowerCase","parent","css","height","animate","$this","removeClass","removeAttr","children","replaceWith","html","exports","MotionMergeChangeTooltip","$element","mouseX","mouseY","this","positionX","positionY","popover","container","animation","trigger","placement","$popover","data","window","setTimeout","width","elTop","offset","top","elHeight","content","getContent","bind","find","on","ev","stopPropagation","removePopupIfInactive","prototype","$myEl","cid","undefined","parents","first","addClass","$el","attr","__t","text","click","$list","console","log","alert","is","destroy","affectedChangesets","performActionWithUI","action","scrollX","scrollY","saveEditorSnapshot","call","focusTextarea","scrollTo","_this","onChanged","focusAtSameCid","stale","$stale","warn","e","MotionMergeAmendmentsTextarea","$holder","$changedIndicator","$mergeActionHolder","unchangedText","hasChanged","$textarea","edit","AntragsgruenEditor_1","AntragsgruenEditor","texteditor","getEditor","MotionMergeAmendments","addSubmitListener","val","getData","setText","prepareText","$text","appendHint","removeData","markupMovedParagraph","newText","setData","normalizeHtml","fire","msg","paragraphNew","replace","initializeTooltips","$target","currentTarget","activePopup","pageX","pageY","acceptAll","rejectAll","getUnchangedContent","entities","&nbsp;","&ndash;","&auml;","&ouml;","&uuml;","&Auml;","&Ouml;","&Uuml;","&szlig;","&bdquo;","&ldquo;","&bull;","&sect;","&eacute;","&rsquo;","&euro;","ent","RegExp","hasChanges","MotionMergeAmendmentsParagraph","sectionId","parseInt","paragraphId","$changed","textarea","initButtons","element","$input","doToggle","reloadText","bootbox","confirm","result","initTooltip","currentStatus","currentVersion","preventDefault","$btn","indexOf","amendments","id","url","JSON","stringify","get","collisions","str","getDraftData","amendmentToggles","unchanged","$form","paragraphs","draft","parse","document","getElementById","getAttribute","amendmentStatuses","amendmentVersions","$para","currMouseX","offsetX","saveDraft","off","onLeavePage","initDraftSaving","cb","submit","setDraftDate","date","$draftSavingPanel","hide","lang","formatted","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","onlyInput","sections","$section","para","isPublic","prop","dataStr","setAttribute","ajax","type","public","_csrf","success","ret","Date","error","initAutosavingDraft","$toggle","setInterval","localStorage","state","getItem","change","active","setItem"],"mappings":"0IAGA,IAMKA,EAAAA,EANCC,EAAkB,EAClBC,EAA2B,EAC3BC,EAAmB,GACnBC,EAAiB,EACjBC,EAAmB,GAEpBL,EAAAA,IAAAA,EAAiB,KAClB,SAAA,OACAA,EAAA,mBAAA,OAGJ,IAAAM,EAAA,WAAA,SAAAA,KA+CA,OA1CkBA,EAAAC,KAAd,SAAmBC,EAA6CC,GAC5DH,EAAkBE,SAAWA,EAC7BF,EAAkBG,SAAWA,EAE7BC,OAAOC,KAAKH,GAAUI,QAAQ,SAAAC,GAC1BP,EAAkBQ,gBAAgBD,GAAe,MAI3CP,EAAAS,mBAAd,SAAiCF,GAC7B,OAAOP,EAAkBE,SAASK,IAGxBP,EAAAU,oBAAd,SAAkCH,GAC9B,OAAOP,EAAkBG,SAASI,IAGxBP,EAAAW,kBAAd,SAAgCJ,EAAqBK,GACjDZ,EAAkBQ,gBAAgBD,GAAaM,KAAKD,IAG1CZ,EAAAc,UAAd,SAAwBP,EAAqBQ,GACzCf,EAAkBE,SAASK,GAAeQ,EAC1Cf,EAAkBQ,gBAAgBD,GAAaD,QAAQ,SAAAM,GACnDA,EAAUI,yBAAyBT,EAAaQ,MAI1Cf,EAAAiB,WAAd,SAAyBV,EAAqBW,GAC1ClB,EAAkBG,SAASI,GAAeW,EAC1ClB,EAAkBQ,gBAAgBD,GAAaD,QAAQ,SAAAM,GACnDA,EAAUO,+BAIJnB,EAAAoB,eAAd,WACI,OAAOpB,EAAkBE,UAGfF,EAAAqB,eAAd,WACI,OAAOrB,EAAkBG,UA1CdH,EAAAQ,gBAA+E,GA4ClGR,EA/CA,GAiDAsB,EAAA,WAAA,SAAAA,KAyGA,OAxGkBA,EAAAC,sBAAd,WACIC,EAAE,oBAAoBC,KAAK,SAACC,EAAGC,GACC,GAAxBA,EAAGC,WAAWC,QACdL,EAAEG,GAAIG,YAKJR,EAAAS,OAAd,SAAqBC,EAAeC,QAAA,IAAAA,IAAAA,EAAA,MAChC,IAAIC,EAAQV,EAAEQ,GACVE,EAAMC,SAAS,YACfb,EAAyBc,aAAaJ,EAAMC,GAE5CC,EAAMC,SAAS,YACfb,EAAyBe,aAAaL,EAAMC,IAItCX,EAAAgB,OAAd,SAAqBN,EAAeC,QAAA,IAAAA,IAAAA,EAAA,MAChC,IAAIC,EAAQV,EAAEQ,GACVE,EAAMC,SAAS,YACfb,EAAyBiB,aAAaL,EAAOD,GAE7CC,EAAMC,SAAS,YACfb,EAAyBkB,aAAaN,EAAOD,IAIvCX,EAAAiB,aAAd,SAA2BL,EAAeD,QAAA,IAAAA,IAAAA,EAAA,MACtC,IAAIQ,EACAC,EAAOR,EAAM,GAAGS,SAASC,cAEzBH,EADQ,MAARC,EACYR,EAAMW,SAENX,EAEJ,MAARQ,GAAwB,MAARA,GAAwB,MAARA,GAAwB,cAARA,GAAgC,OAARA,GAAyB,KAARA,GACzFD,EAAUK,IAAI,WAAY,UAAUC,OAAON,EAAUM,UACrDN,EAAUO,QAAQ,CAACD,OAAU,KAAM,IAAK,WACpCN,EAAUX,SACVN,EAAE,6BAA6BM,SAC/BR,EAAyBC,wBACrBU,GAAYA,QAGpBQ,EAAUX,SACNG,GAAYA,MAIVX,EAAAc,aAAd,SAA2BJ,EAAeC,QAAA,IAAAA,IAAAA,EAAA,MACtC,IAAIgB,EAAgBzB,EAAEQ,GACtBiB,EAAMC,YAAY,oCAClBD,EAAME,WAAW,4FACkB,MAA/BnB,EAAKW,SAASC,eAAwD,MAA/BZ,EAAKW,SAASC,eACrDK,EAAMG,WAAWF,YAAY,WAAWA,YAAY,WAAWA,YAAY,cAE5C,MAA/BlB,EAAKW,SAASC,eACdK,EAAMJ,SAASK,YAAY,WAAWA,YAAY,WAAWA,YAAY,cAE1C,OAA/BlB,EAAKW,SAASC,eACdK,EAAMI,YAAYJ,EAAMK,QAExBrB,GAAYA,KAGNX,EAAAkB,aAAd,SAA2BN,EAAeD,QAAA,IAAAA,IAAAA,EAAA,MACtCC,EAAMgB,YAAY,8BAClBhB,EAAMiB,WAAW,4FACjB,IAAIR,EAAWT,EAAM,GAAGS,SAASC,cACjB,MAAZD,GAAgC,MAAZA,GACpBT,EAAMkB,WAAWF,YAAY,WAAWA,YAAY,WAAWA,YAAY,cAE/D,MAAZP,GACAT,EAAMW,SAASK,YAAY,WAAWA,YAAY,WAAWA,YAAY,cAE7D,OAAZP,GACAT,EAAMmB,YAAYnB,EAAMoB,QAExBrB,GAAYA,KAGNX,EAAAe,aAAd,SAA2BL,EAAeC,QAAA,IAAAA,IAAAA,EAAA,MACtC,IACIQ,EADAC,EAAOV,EAAKW,SAASC,cAGrBH,EADQ,MAARC,EACYlB,EAAEQ,GAAMa,SAERrB,EAAEQ,GAGN,MAARU,GAAwB,MAARA,GAAwB,MAARA,GAAwB,cAARA,GAAgC,OAARA,GAAyB,KAARA,GACzFD,EAAUK,IAAI,WAAY,UAAUC,OAAON,EAAUM,UACrDN,EAAUO,QAAQ,CAACD,OAAU,KAAM,IAAK,WACpCN,EAAUX,SACVN,EAAE,6BAA6BM,SAC/BR,EAAyBC,wBACrBU,GAAYA,QAGpBQ,EAAUX,SACNG,GAAYA,MAG5BX,EAzGA,GAAaiC,EAAAjC,yBAAAA,EA4Gb,IAAAkC,EAAA,WACI,SAAAA,EAAoBC,EAAkBC,EAAgBC,EAAwBd,GAA1De,KAAAH,SAAAA,EAA0DG,KAAAf,OAAAA,EAC1E,IAAIgB,EAAoB,KACpBC,EAAoB,KACxBL,EAASM,QAAQ,CACbC,UAAa,OACbC,WAAa,EACbC,QAAW,SACXC,UAAa,SAAUJ,GACnB,IAAIK,EAAW5C,EAAOuC,GAmBtB,OAlBAK,EAASC,KAAK,UAAWZ,GACzBa,OAAOC,WAAW,WACd,IAAIC,EAAQJ,EAASI,QACjBC,EAAQhB,EAASiB,SAASC,IAC1BC,EAAWnB,EAASV,SACN,OAAdc,GAA8B,EAARW,IACtBX,EAAaH,EAASc,EAAQ,GAC9BV,EAAYH,EAAS,IACJc,EAAQ,KACrBX,EAAYW,EAAQ,IAERA,EAAQG,EAApBd,IACAA,EAAYW,EAAQG,IAG5BR,EAAStB,IAAI,OAAQe,EAAY,MACjCO,EAAStB,IAAI,MAAOgB,EAAY,OACjC,GACI,UAEXR,MAAQ,EACRuB,QAAWjB,KAAKkB,WAAWC,KAAKnB,QAGpCH,EAASM,QAAQ,QACMN,EAASuB,KAAK,cAC5BC,GAAG,YAAa,SAACC,GACtBA,EAAGC,oBAEPb,OAAOC,WAAWX,KAAKwB,sBAAsBL,KAAKnB,MAAO,KA8HjE,OA3HYJ,EAAA6B,UAAAP,WAAR,WACI,IAAIQ,EAAgB1B,KAAKH,SAErB8B,EAAMD,EAAMjB,KAAK,OACVmB,MAAPD,IACAA,EAAMD,EAAMzC,SAASwB,KAAK,QAE9BiB,EAAMG,QAAQ,eAAeC,QAAQV,KAAK,aAAeO,EAAM,KAAKI,SAAS,SAQ7E,IAAIC,EAAcpE,EADlB8B,6UAIA,GAFAsC,EAAIZ,KAAK,WAAWa,KAAK,OAAQP,EAAMjB,KAAK,SAASwB,KAAK,QAASC,IAAI,QAAS,wBAChFF,EAAIZ,KAAK,cAAce,KAAKD,IAAI,QAAS,gBAAkB,KAAOR,EAAMjB,KAAK,aACzEiB,EAAMnD,SAAS,WACfyD,EAAIZ,KAAK,iBAAiBe,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAK7B,OAAOgD,KAAKnB,OACrFgC,EAAIZ,KAAK,iBAAiBe,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAKtB,OAAOyC,KAAKnB,YAClF,GAAI0B,EAAMnD,SAAS,WACtByD,EAAIZ,KAAK,iBAAiBe,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAK7B,OAAOgD,KAAKnB,OACrFgC,EAAIZ,KAAK,iBAAiBe,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAKtB,OAAOyC,KAAKnB,YAClF,GAAuC,MAAnC0B,EAAM,GAAG3C,SAASC,cAAuB,CAChD,IAAIqD,EAAQX,EAAMzC,SACdoD,EAAM9D,SAAS,YACfyD,EAAIZ,KAAK,iBAAiBe,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAK7B,OAAOgD,KAAKnB,OACrFgC,EAAIZ,KAAK,iBAAiBe,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAKtB,OAAOyC,KAAKnB,QAC9EqC,EAAM9D,SAAS,YACtByD,EAAIZ,KAAK,iBAAiBe,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAK7B,OAAOgD,KAAKnB,OACrFgC,EAAIZ,KAAK,iBAAiBe,KAAKD,IAAI,QAAS,kBAAkBE,MAAMpC,KAAKtB,OAAOyC,KAAKnB,QAErFsC,QAAQC,IAAI,UAAWF,QAG3BC,QAAQC,IAAI,UAAWb,GACvBc,MAAM,WAEV,OAAOR,GAGHpC,EAAA6B,UAAAD,sBAAR,WACI,OAAIxB,KAAKH,SAAS4C,GAAG,UACV/B,OAAOC,WAAWX,KAAKwB,sBAAsBL,KAAKnB,MAAO,KAEtB,EAA1CpC,EAAE,QAAQwD,KAAK,kBAAkBnD,OAC1ByC,OAAOC,WAAWX,KAAKwB,sBAAsBL,KAAKnB,MAAO,UAEpEA,KAAK0C,WAGD9C,EAAA6B,UAAAkB,mBAAR,WACI,IAAIhB,EAAM3B,KAAKH,SAASY,KAAK,OAI7B,OAHWmB,MAAPD,IACAA,EAAM3B,KAAKH,SAASZ,SAASwB,KAAK,QAE/BT,KAAKH,SAASgC,QAAQ,eAAeT,KAAK,aAAeO,EAAM,MAGlE/B,EAAA6B,UAAAmB,oBAAR,SAA4BC,GACxB,IAAIC,EAAUpC,OAAOoC,QACjBC,EAAUrC,OAAOqC,QAErB/C,KAAKf,OAAO+D,qBACZhD,KAAK0C,UACLG,EAAOI,KAAKjD,MACZA,KAAKf,OAAOiE,gBAEZxC,OAAOyC,SAASL,EAASC,IAGrBnD,EAAA6B,UAAAtD,OAAR,WAAA,IAAAiF,EAAApD,KACIA,KAAK4C,oBAAoB,WACrBQ,EAAKT,qBAAqB9E,KAAK,SAACC,EAAGC,GAC/BL,EAAyBS,OAAOJ,EAAI,WAChCqF,EAAKnE,OAAOoE,mBAMpBzD,EAAA6B,UAAA/C,OAAR,WAAA,IAAA0E,EAAApD,KACIA,KAAK4C,oBAAoB,WACrBQ,EAAKT,qBAAqB9E,KAAK,SAACC,EAAGC,GAC/BL,EAAyBgB,OAAOX,EAAI,WAChCqF,EAAKnE,OAAOoE,mBAMrBzD,EAAA6B,UAAAiB,QAAP,WACI1C,KAAKH,SAASM,QAAQ,QAAQA,QAAQ,WAEtC,IAAIwB,EAAM3B,KAAKH,SAASY,KAAK,OAClBmB,MAAPD,IACAA,EAAM3B,KAAKH,SAASZ,SAASwB,KAAK,QAGtC,IAAI6C,GAAiB,EACrBtD,KAAKH,SAASgC,QAAQ,eAAeC,QAAQV,KAAK,aAAeO,EAAM,KAAK9D,KAAK,SAACC,EAAGC,GAC7EH,EAAEG,GAAI0E,GAAG,YACTa,GAAiB,KAGpBA,GACDtD,KAAKH,SAASgC,QAAQ,eAAeC,QAAQV,KAAK,aAAeO,EAAM,KAAKrC,YAAY,SAG5F,IAEI1B,EAAE,YAAYC,KAAK,SAACC,EAAGyF,GACnB,IAAMC,EAAS5F,EAAE2F,GACZC,EAAO/C,KAAK,WAAWgC,GAAG,YAC3Be,EAAOrD,QAAQ,QAAQA,QAAQ,WAC/BqD,EAAOtF,SACPoE,QAAQmB,KAAK,yBAA0BD,MAGjD,MAAOE,MAGjB9D,EArKA,GAuKA+D,EAAA,WAsKI,SAAAA,EAAoBC,EAAyBC,EAAmCC,GAAhF,IAAAV,EAAApD,KAAoBA,KAAA4D,QAAAA,EAAyB5D,KAAA6D,kBAAAA,EAAmC7D,KAAA8D,mBAAAA,EApKxE9D,KAAA+D,cAAwB,KACxB/D,KAAAgE,YAAsB,EAoK1B,IAAIC,EAAYL,EAAQxC,KAAK,eACzB8C,EAAO,IAAIC,EAAAC,mBAAmBH,EAAUhC,KAAK,OACjDjC,KAAKqE,WAAaH,EAAKI,YACvBC,EAAsBC,kBAAkB,WACpCZ,EAAQxC,KAAK,gBAAgBqD,IAAIrB,EAAKiB,WAAWK,WACjDd,EAAQxC,KAAK,yBAAyBqD,IAAIrB,EAAKiB,WAAWK,aAG9D1E,KAAK2E,QAAQ3E,KAAKqE,WAAWK,WAEzBd,EAAQnD,KAAK,eACbT,KAAK+D,cAAgBH,EAAQnD,KAAK,aAClCT,KAAKqD,aAGTrD,KAAKqE,WAAWhD,GAAG,SAAUrB,KAAKqD,UAAUlC,KAAKnB,OAEzD,OAnLY2D,EAAAlC,UAAAmD,YAAR,SAAoBlF,GAChB,IAAImF,EAAgBjH,EAAE,QAAU8B,EAAO,UAGvCmF,EAAMzD,KAAK,gCAAgCvD,KAAK,SAACC,EAAGC,GAChD,IAAIsB,EAAgBzB,EAAEG,GAClB+G,EAAazF,EAAMoB,KAAK,eAC5BpB,EAAM+B,KAAK,QAAQW,SAAS,cAAcE,KAAK,mBAAoB6C,GAC9D7C,KAAK,YAAa5C,EAAMoB,KAAK,SAC7BwB,KAAK,gBAAiB5C,EAAMoB,KAAK,aACtCpB,EAAMC,YAAY,cAAcyF,WAAW,iBAI/CF,EAAMzD,KAAK,iBAAiB9B,YAAY,SACxCuF,EAAMzD,KAAK,UAAUvD,KAAKmC,KAAKgF,qBAAqB7D,KAAKnB,OAGzD6E,EAAMzD,KAAK,kBACNa,KAAK,2BAA4BC,IAAI,QAAS,oBAC9CD,KAAK,yBAA0BC,IAAI,QAAS,kBAEjD,IAAI+C,EAAUJ,EAAMnF,OACpBM,KAAKqE,WAAWa,QAAQD,GACxBjF,KAAK+D,cAAgB/D,KAAKmF,cAAcnF,KAAKqE,WAAWK,WACxD1E,KAAKqE,WAAWe,KAAK,gBACrBpF,KAAKqD,aAGDM,EAAAlC,UAAAuD,qBAAR,SAA6BlH,EAAGC,GAC5B,IAEIsH,EAFA/G,EAAQV,EAAEG,GACVuH,EAAehH,EAAMmC,KAAK,4BAQ9B4E,GAJIA,EADA/G,EAAMC,SAAS,YACT2D,IAAI,MAAO,wBAEXA,IAAI,MAAO,uBAEXqD,QAAQ,WAAaD,EAAe,GAEpB,OAAtBhH,EAAM,GAAGS,WACTT,EAAQA,EAAMW,UAGlBX,EAAM2D,KAAK,kBAAmBoD,IAG1B1B,EAAAlC,UAAA+D,mBAAR,WAAA,IAAApC,EAAApD,KACIA,KAAK4D,QAAQvC,GAAG,YAAa,cAAe,SAACC,GACzC,IAAMmE,EAAU7H,EAAE0D,EAAGoE,eACmE,EAApFD,EAAQ5D,QAAQ,qBAAqBC,QAAQV,KAAK,yBAAyBnD,SAG3EsG,EAAsBoB,aACtBpB,EAAsBoB,YAAYjD,UAEtC6B,EAAsBoB,YAAc,IAAI/F,EAAyB6F,EAASnE,EAAGsE,MAAOtE,EAAGuE,MAAOzC,OAK/FO,EAAAlC,UAAAqE,UAAP,WAAA,IAAA1C,EAAApD,KACIA,KAAKgD,qBACLhD,KAAK4D,QAAQxC,KAAK,YAAYvD,KAAK,SAACC,EAAGC,GACnCL,EAAyBc,aAAaT,KAE1CiC,KAAK4D,QAAQxC,KAAK,YAAYvD,KAAK,SAACC,EAAGC,GACnCL,EAAyBe,aAAaV,KAE1CiC,KAAKqD,YACL3C,OAAOC,WAAW,WAEdyC,EAAKC,YACLD,EAAKJ,sBACN,MAGAW,EAAAlC,UAAAsE,UAAP,WAAA,IAAA3C,EAAApD,KACIA,KAAKgD,qBACLhD,KAAK4D,QAAQxC,KAAK,YAAYvD,KAAK,SAACC,EAAGC,GACnCL,EAAyBiB,aAAaf,EAAEG,MAE5CiC,KAAK4D,QAAQxC,KAAK,YAAYvD,KAAK,SAACC,EAAGC,GACnCL,EAAyBkB,aAAahB,EAAEG,MAE5CiC,KAAKqD,YACL3C,OAAOC,WAAW,WAEdyC,EAAKC,YACLD,EAAKJ,sBACN,MAGAW,EAAAlC,UAAAuB,mBAAP,WACIhD,KAAKqE,WAAWe,KAAK,iBAGlBzB,EAAAlC,UAAAyB,cAAP,aAKOS,EAAAlC,UAAAP,WAAP,WACI,OAAOlB,KAAKqE,WAAWK,WAGpBf,EAAAlC,UAAAuE,oBAAP,WACI,OAAOhG,KAAK+D,eAGTJ,EAAAlC,UAAAkD,QAAP,SAAejF,GACXM,KAAK4E,YAAYlF,GACjBM,KAAKwF,sBAGD7B,EAAAlC,UAAA0D,cAAR,SAAsBzF,GAClB,IAAMuG,EAAW,CACbC,SAAU,IACVC,UAAW,IACXC,SAAU,IACVC,SAAU,IACVC,SAAU,IACVC,SAAU,IACVC,SAAU,IACVC,SAAU,IACVC,UAAW,IACXC,UAAW,IACXC,UAAW,IACXC,SAAU,IACVC,SAAU,IACVC,WAAY,IACZC,UAAW,IACXC,SAAU,KAMd,OAJAzK,OAAOC,KAAKwJ,GAAUvJ,QAAQ,SAAAwK,GAC1BxH,EAAOA,EAAK6F,QAAQ,IAAI4B,OAAOD,EAAK,KAAMjB,EAASiB,MAGhDxH,EAAK6F,QAAQ,QAAS,KAAKA,QAAQ,QAAS,KAAKA,QAAQ,WAAY,KAGzE5B,EAAAlC,UAAA4B,UAAP,WACQrD,KAAKmF,cAAcnF,KAAKqE,WAAWK,aAAe1E,KAAK+D,eACvD/D,KAAK6D,kBAAkB9B,SAAS,aAChC/B,KAAKgE,YAAa,IAElBhE,KAAK6D,kBAAkBvE,YAAY,aACnCU,KAAKgE,YAAa,GAEqB,EAAvChE,KAAK4D,QAAQxC,KAAK,YAAYnD,QAAqD,EAAvC+B,KAAK4D,QAAQxC,KAAK,YAAYnD,OAC1E+B,KAAK8D,mBAAmBxE,YAAY,UAEpCU,KAAK8D,mBAAmB/B,SAAS,WAIlC4B,EAAAlC,UAAA2F,WAAP,WACI,OAAOpH,KAAKgE,YAqBpBL,EAxLA,GA0LA0D,EAAA,WAKI,SAAAA,EAAoBzD,GAApB,IAAAR,EAAApD,KAAoBA,KAAA4D,QAAAA,EAChB5D,KAAKsH,UAAYC,SAAS3D,EAAQnD,KAAK,cACvCT,KAAKwH,YAAcD,SAAS3D,EAAQnD,KAAK,gBAEzC,IAAMwD,EAAYL,EAAQxC,KAAK,qBACzBqG,EAAW7D,EAAQxC,KAAK,qBACxB0C,EAAqBF,EAAQxC,KAAK,sBACxCpB,KAAK0H,SAAW,IAAI/D,EAA8BM,EAAWwD,EAAU3D,GAEvE9D,KAAK2H,cACL/D,EAAQxC,KAAK,oBAAoBvD,KAAK,SAACC,EAAW8J,GAC9CxL,EAAkBW,kBAAkBa,EAAEgK,GAASnH,KAAK,gBAAiB2C,KA+IjF,OA3IYiE,EAAA5F,UAAAkG,YAAR,WAAA,IAAAvE,EAAApD,KACIA,KAAK4D,QAAQxC,KAAK,oBAAoBgB,MAAM,SAACd,GACzC,IAAMuG,EAASjK,EAAE0D,EAAGoE,eAAetE,KAAK,oBAClC0G,EAAW,WACkB,IAA3BP,SAASM,EAAOpD,QAChBoD,EAAOpD,IAAI,KACXoD,EAAOhG,QAAQ,cAAcT,KAAK,QAAQW,SAAS,eAAezC,YAAY,iBAE9EuI,EAAOpD,IAAI,KACXoD,EAAOhG,QAAQ,cAAcT,KAAK,QAAQ9B,YAAY,eAAeyC,SAAS,gBAElFqB,EAAK2E,cAGL3E,EAAKsE,SAASN,aACdY,QAAQC,QAAQ/F,IAAI,QAAS,mBAAoB,SAACgG,GAC1CA,GACAJ,MAIRA,MAIR,IAAMK,EAAc,SAACvE,GACjB,IAAMjH,EAAc4K,SAAS3D,EAAQnD,KAAK,iBACpC2H,EAAgBhM,EAAkBS,mBAAmBF,GACrD0L,EAAiBjM,EAAkBU,oBAAoBH,GAE7DiH,EAAQxC,KAAK,4BAA4B9B,YAAY,YACrDsE,EAAQxC,KAAK,yBAA2BgH,GAAerG,SAAS,YAChE6B,EAAQxC,KAAK,0BAA4BiH,GAAgBtG,SAAS,aAGtE/B,KAAK4D,QAAQxC,KAAK,8BAA8BC,GAAG,mBAAoB,SAAAC,GACnE6G,EAAYvK,EAAE0D,EAAGoE,kBAGrB1F,KAAK4D,QAAQxC,KAAK,yBAAyBgB,MAAM,SAAAd,GAC7CA,EAAGgH,iBACH,IAAM1E,EAAUhG,EAAE0D,EAAGoE,eAAe7D,QAAQ,cACtClF,EAAc4K,SAAS3D,EAAQnD,KAAK,iBAC1CrE,EAAkBc,UAAUP,EAAa4K,SAAS3J,EAAE0D,EAAGoE,eAAejF,KAAK,YAC3E0H,EAAYvE,KAGhB5D,KAAK4D,QAAQxC,KAAK,0BAA0BgB,MAAM,SAAAd,GAC9CA,EAAGgH,iBACH,IAAM1E,EAAUhG,EAAE0D,EAAGoE,eAAe7D,QAAQ,cACtClF,EAAc4K,SAAS3D,EAAQnD,KAAK,iBAC1CrE,EAAkBiB,WAAWV,EAAaiB,EAAE0D,EAAGoE,eAAejF,KAAK,YACnE0H,EAAYvE,KAGhB5D,KAAK4D,QAAQxC,KAAK,iCAAiCgB,MAAM,SAAAd,GACrDA,EAAGgH,iBACHlF,EAAKsE,SAAS5B,cAGlB9F,KAAK4D,QAAQxC,KAAK,iCAAiCgB,MAAM,SAAAd,GACrDA,EAAGgH,iBACHlF,EAAKsE,SAAS3B,eAIfsB,EAAA5F,UAAAlE,0BAAP,WACQyC,KAAK0H,SAASN,aACd9E,QAAQC,IAAI,kCAGhBvC,KAAK+H,cAGFV,EAAA5F,UAAArE,yBAAP,SAAgCT,EAAqBQ,GACjD,GAAI6C,KAAK0H,SAASN,aACd9E,QAAQC,IAAI,sCADhB,CAIA,IAAMqB,EAAU5D,KAAK4D,QAAQxC,KAAK,sCAAwCzE,EAAc,KAClF4L,EAAO3E,EAAQxC,KAAK,QACpByG,EAASjE,EAAQxC,KAAK,0BAOL,IANnB,CACArF,EACAC,EACAC,EACAC,EACAC,GACFqM,QAAQrL,IACN0K,EAAOpD,IAAI,KACX8D,EAAKjJ,YAAY,eAAeyC,SAAS,iBAEzC8F,EAAOpD,IAAI,KACX8D,EAAKxG,SAAS,eAAezC,YAAY,gBAE7CU,KAAK+H,eAGDV,EAAA5F,UAAAsG,WAAR,WAAA,IAAA3E,EAAApD,KACUyI,EAAa,GACnBzI,KAAK4D,QAAQxC,KAAK,+BAA+BvD,KAAK,SAACC,EAAGC,GACtD,IAAMpB,EAAc4K,SAAS3J,EAAEG,GAAI0C,KAAK,iBACxCgI,EAAWxL,KAAK,CACZyL,GAAI/L,EACJW,QAASlB,EAAkBU,oBAAoBH,OAGvD,IAAMgM,EAAM3I,KAAK4D,QAAQnD,KAAK,cAAc8E,QAAQ,QAASqD,KAAKC,UAAUJ,IAC5E7K,EAAEkL,IAAIH,EAAK,SAAClI,GACR2C,EAAKsE,SAAS/C,QAAQlE,EAAK0B,MAE3B,IAAI4G,EAAa,GACjBtI,EAAKsI,WAAWrM,QAAQ,SAAAsM,GACpBD,GAAcC,IAGlB5F,EAAKQ,QAAQxC,KAAK,qBAAqB1B,KAAKqJ,GACf,EAAzBtI,EAAKsI,WAAW9K,OAChBmF,EAAKQ,QAAQ7B,SAAS,iBAEtBqB,EAAKQ,QAAQtE,YAAY,oBAK9B+H,EAAA5F,UAAAwH,aAAP,WACI,IAAMC,EAAmB,GAOzB,OANAlJ,KAAK4D,QAAQxC,KAAK,oBAAoBvD,KAAK,SAAC6K,EAAI3K,GAC5C,IAAMiE,EAAMpE,EAAEG,GACwB,EAAlCiE,EAAIZ,KAAK,gBAAgBnD,QACzBiL,EAAiBjM,KAAK+E,EAAIvB,KAAK,mBAGhC,CACHyI,iBAAgBA,EAChB/G,KAAMnC,KAAK0H,SAASxG,aACpBiI,UAAWnJ,KAAK0H,SAAS1B,wBAGrCqB,EA/JA,GAoKA9C,EAAA,WAQI,SAAAA,EAAY6E,GAAZ,IAAAhG,EAAApD,KAFQA,KAAAqJ,WAA+C,GAGnD9E,EAAsB6E,MAAQA,EAE9B,IAAME,EAAQV,KAAKW,MAAMC,SAASC,eAAe,cAAcC,aAAa,UAC5EtN,EAAkBC,KAAKiN,EAAMK,kBAAmBL,EAAMM,mBAEtDhM,EAAE,qBAAqBC,KAAK,SAACC,EAAGC,GAC5B,IAAM8L,EAAQjM,EAAEG,GAChB8L,EAAMzI,KAAK,qBAAqBC,GAAG,YAAa,SAACC,GAC7CiD,EAAsBuF,WAAaxI,EAAGyI,UAG1C3G,EAAKiG,WAAWpM,KAAK,IAAIoK,EAA+BwC,MAG5DtF,EAAsB6E,MAAM/H,GAAG,SAAU,SAACC,GACtC8B,EAAK4G,WAAU,GACfpM,EAAE8C,QAAQuJ,IAAI,eAAgB1F,EAAsB2F,eAExDtM,EAAE8C,QAAQW,GAAG,eAAgBkD,EAAsB2F,aAEnDlK,KAAKmK,kBAmHb,OAhHkB5F,EAAA2F,YAAd,WACI,OAAOhI,IAAI,MAAO,uBAGRqC,EAAAC,kBAAd,SAAgC4F,GAC5BpK,KAAKoJ,MAAMiB,OAAOD,IAGd7F,EAAA9C,UAAA6I,aAAR,SAAqBC,GACjBvK,KAAKwK,kBAAkBpJ,KAAK,oBAAoBqJ,OAEhD,IAKIC,EAAe9M,EAAE,QAAQqE,KAAK,QAC9B0I,EAAY,IAAIC,KAAKC,eAAeH,EAN1B,CACNI,KAAM,UAAWC,MAAO,UAAWC,IAAK,UACxCC,KAAM,UAAWC,OAAQ,UACzBC,QAAQ,IAGuCC,OAAOb,GAE9DvK,KAAKwK,kBAAkBpJ,KAAK,qBAAqBe,KAAKwI,IAGlDpG,EAAA9C,UAAAuI,UAAR,SAAkBqB,GAAlB,IAAAjI,EAAApD,UAAkB,IAAAqL,IAAAA,GAAA,GACd,IAAM5K,EAAO,CACTkJ,kBAAqBvN,EAAkBoB,iBACvCoM,kBAAqBxN,EAAkBqB,iBACvC4L,WAAc,GACdiC,SAAY,IAEhB1N,EAAE,iBAAiBC,KAAK,SAACC,EAAGC,GACxB,IAAMwN,EAAW3N,EAAEG,GACfuJ,EAAYiE,EAAS9K,KAAK,cAC9BA,EAAK6K,SAAShE,GAAaiE,EAASnK,KAAK,iBAAiBqD,QAG9DzE,KAAKqJ,WAAW3M,QAAQ,SAAA8O,GACpB/K,EAAK4I,WAAWmC,EAAKlE,UAAY,IAAMkE,EAAKhE,aAAegE,EAAKvC,iBAEpE,IAAIwC,EAAoBzL,KAAKwK,kBAAkBpJ,KAAK,sBAAsBsK,KAAK,WAEzEC,EAAU/C,KAAKC,UAAUpI,GAC/B+I,SAASC,eAAe,cAAcmC,aAAa,QAASD,GAEvDN,GACDzN,EAAEiO,KAAK,CACHC,KAAM,OACNnD,IAAKpE,EAAsB6E,MAAM3I,KAAK,eACtCA,KAAM,CACFsL,OAAWN,EAAW,EAAI,EAC1BhL,KAAMkL,EACNK,MAASzH,EAAsB6E,MAAMhI,KAAK,uBAAuBqD,OAErEwH,QAAS,SAACC,GACFA,EAAa,SACb9I,EAAKoH,kBAAkBpJ,KAAK,gBAAgBW,SAAS,UACrDqB,EAAKkH,aAAa,IAAI6B,KAAKD,EAAU,OACjCT,EACAlH,EAAsB6E,MAAMhI,KAAK,eAAe9B,YAAY,UAE5DiF,EAAsB6E,MAAMhI,KAAK,eAAeW,SAAS,YAG7DqB,EAAKoH,kBAAkBpJ,KAAK,gBAAgB9B,YAAY,UACxD8D,EAAKoH,kBAAkBpJ,KAAK,8BAA8BW,SAAS,UACnEqB,EAAKoH,kBAAkBpJ,KAAK,6BAA6Be,KAAK+J,EAAW,OAAG5M,YAAY,YAGhG8M,MAAO,WACHhJ,EAAKoH,kBAAkBpJ,KAAK,gBAAgB9B,YAAY,UACxD8D,EAAKoH,kBAAkBpJ,KAAK,8BAA8B9B,YAAY,UACtE8D,EAAKoH,kBAAkBpJ,KAAK,6BAA6Be,KAAK,IAAIJ,SAAS,cAMnFwC,EAAA9C,UAAA4K,oBAAR,WAAA,IAAAjJ,EAAApD,KACQsM,EAAkBtM,KAAKwK,kBAAkBpJ,KAAK,wBAQlD,GANAV,OAAO6L,YAAY,WACXD,EAAQZ,KAAK,YACbtI,EAAK4G,WAAU,IAEpB,KAECwC,aAAc,CACd,IAAIC,EAAQD,aAAaE,QAAQ,2BACnB,OAAVD,GACAH,EAAQZ,KAAK,UAAqB,KAATe,GAGjCH,EAAQK,OAAO,WACX,IAAIC,EAAkBN,EAAQZ,KAAK,WAC/Bc,cACAA,aAAaK,QAAQ,0BAA4BD,EAAS,IAAM,OAErEtM,QAAQ,WAGPiE,EAAA9C,UAAA0I,gBAAR,WAAA,IAAA/G,EAAApD,KAMI,GALAA,KAAKwK,kBAAoBjG,EAAsB6E,MAAMhI,KAAK,qBAC1DpB,KAAKwK,kBAAkBpJ,KAAK,cAAcC,GAAG,QAAS,WAAM,OAAA+B,EAAK4G,WAAU,KAC3EhK,KAAKwK,kBAAkBpJ,KAAK,sBAAsBC,GAAG,SAAU,WAAM,OAAA+B,EAAK4G,WAAU,KACpFhK,KAAKqM,sBAEDrM,KAAKwK,kBAAkB/J,KAAK,gBAAiB,CAC7C,IAAI8J,EAAO,IAAI4B,KAAKnM,KAAKwK,kBAAkB/J,KAAK,iBAChDT,KAAKsK,aAAaC,GAGtB3M,EAAE,sBAAsBM,UA7IdqG,EAAAoB,YAAwC,KACxCpB,EAAAuF,WAAqB,KA8IvCvF,EAhJA,GAAa5E,EAAA4E,sBAAAA","file":"MotionMergeAmendments.js","sourcesContent":["import { AntragsgruenEditor } from \"../shared/AntragsgruenEditor\";\nimport editor = CKEDITOR.editor;\n\nconst STATUS_ACCEPTED = 4;\nconst STATUS_MODIFIED_ACCEPTED = 6;\nconst STATUS_PROCESSED = 17;\nconst STATUS_ADOPTED = 8;\nconst STATUS_COMPLETED = 9;\n\nenum AMENDMENT_VERSION {\n    ORIGINAL = 'orig',\n    PROPOSED_PROCEDURE = 'prop',\n}\n\nclass AmendmentStatuses {\n    private static statuses: { [amendmentId: number]: number };\n    private static versions: { [amendmentId: number]: AMENDMENT_VERSION };\n    private static statusListeners: { [amendmentId: number]: MotionMergeAmendmentsParagraph[] } = {};\n\n    public static init(statuses: { [amendmentId: number]: number }, versions: { [amendmentId: number]: AMENDMENT_VERSION }) {\n        AmendmentStatuses.statuses = statuses;\n        AmendmentStatuses.versions = versions;\n\n        Object.keys(statuses).forEach(amendmentId => {\n            AmendmentStatuses.statusListeners[amendmentId] = [];\n        });\n    }\n\n    public static getAmendmentStatus(amendmentId: number): number {\n        return AmendmentStatuses.statuses[amendmentId];\n    }\n\n    public static getAmendmentVersion(amendmentId: number): AMENDMENT_VERSION {\n        return AmendmentStatuses.versions[amendmentId];\n    }\n\n    public static registerParagraph(amendmentId: number, paragraph: MotionMergeAmendmentsParagraph) {\n        AmendmentStatuses.statusListeners[amendmentId].push(paragraph);\n    }\n\n    public static setStatus(amendmentId: number, status: number) {\n        AmendmentStatuses.statuses[amendmentId] = status;\n        AmendmentStatuses.statusListeners[amendmentId].forEach(paragraph => {\n            paragraph.onAmendmentStatusChanged(amendmentId, status);\n        });\n    }\n\n    public static setVersion(amendmentId: number, version: AMENDMENT_VERSION) {\n        AmendmentStatuses.versions[amendmentId] = version;\n        AmendmentStatuses.statusListeners[amendmentId].forEach(paragraph => {\n            paragraph.onAmendmentVersionChanged();\n        });\n    }\n\n    public static getAllStatuses(): { [amendmentId: number]: number } {\n        return AmendmentStatuses.statuses;\n    }\n\n    public static getAllVersions(): { [amendmentId: number]: AMENDMENT_VERSION } {\n        return AmendmentStatuses.versions;\n    }\n}\n\nexport class MotionMergeChangeActions {\n    public static removeEmptyParagraphs() {\n        $('.paragraphHolder').each((i, el) => {\n            if (el.childNodes.length == 0) {\n                $(el).remove();\n            }\n        });\n    }\n\n    public static accept(node: Element, onFinished: () => void = null) {\n        let $node = $(node);\n        if ($node.hasClass(\"ice-ins\")) {\n            MotionMergeChangeActions.insertAccept(node, onFinished);\n        }\n        if ($node.hasClass(\"ice-del\")) {\n            MotionMergeChangeActions.deleteAccept(node, onFinished);\n        }\n    }\n\n    public static reject(node: Element, onFinished: () => void = null) {\n        let $node = $(node);\n        if ($node.hasClass(\"ice-ins\")) {\n            MotionMergeChangeActions.insertReject($node, onFinished);\n        }\n        if ($node.hasClass(\"ice-del\")) {\n            MotionMergeChangeActions.deleteReject($node, onFinished);\n        }\n    }\n\n    public static insertReject($node: JQuery, onFinished: () => void = null) {\n        let $removeEl: JQuery,\n            name = $node[0].nodeName.toLowerCase();\n        if (name == 'li') {\n            $removeEl = $node.parent();\n        } else {\n            $removeEl = $node;\n        }\n        if (name == 'ul' || name == 'ol' || name == 'li' || name == 'blockquote' || name == 'pre' || name == 'p') {\n            $removeEl.css(\"overflow\", \"hidden\").height($removeEl.height());\n            $removeEl.animate({\"height\": \"0\"}, 250, () => {\n                $removeEl.remove();\n                $(\".collidingParagraph:empty\").remove();\n                MotionMergeChangeActions.removeEmptyParagraphs();\n                if (onFinished) onFinished();\n            });\n        } else {\n            $removeEl.remove();\n            if (onFinished) onFinished();\n        }\n    }\n\n    public static insertAccept(node: Element, onFinished: () => void = null) {\n        let $this: JQuery = $(node);\n        $this.removeClass(\"ice-cts ice-ins appendHint moved\");\n        $this.removeAttr(\"data-moving-partner data-moving-partner-id data-moving-partner-paragraph data-moving-msg\");\n        if (node.nodeName.toLowerCase() == 'ul' || node.nodeName.toLowerCase() == 'ol') {\n            $this.children().removeClass(\"ice-cts\").removeClass(\"ice-ins\").removeClass(\"appendHint\");\n        }\n        if (node.nodeName.toLowerCase() == 'li') {\n            $this.parent().removeClass(\"ice-cts\").removeClass(\"ice-ins\").removeClass(\"appendHint\");\n        }\n        if (node.nodeName.toLowerCase() == 'ins') {\n            $this.replaceWith($this.html());\n        }\n        if (onFinished) onFinished();\n    }\n\n    public static deleteReject($node: JQuery, onFinished: () => void = null) {\n        $node.removeClass(\"ice-cts ice-del appendHint\");\n        $node.removeAttr(\"data-moving-partner data-moving-partner-id data-moving-partner-paragraph data-moving-msg\");\n        let nodeName = $node[0].nodeName.toLowerCase();\n        if (nodeName == 'ul' || nodeName == 'ol') {\n            $node.children().removeClass(\"ice-cts\").removeClass(\"ice-del\").removeClass(\"appendHint\");\n        }\n        if (nodeName == 'li') {\n            $node.parent().removeClass(\"ice-cts\").removeClass(\"ice-del\").removeClass(\"appendHint\");\n        }\n        if (nodeName == 'del') {\n            $node.replaceWith($node.html());\n        }\n        if (onFinished) onFinished();\n    }\n\n    public static deleteAccept(node: Element, onFinished: () => void = null) {\n        let name = node.nodeName.toLowerCase(),\n            $removeEl: JQuery;\n        if (name == 'li') {\n            $removeEl = $(node).parent();\n        } else {\n            $removeEl = $(node);\n        }\n\n        if (name == 'ul' || name == 'ol' || name == 'li' || name == 'blockquote' || name == 'pre' || name == 'p') {\n            $removeEl.css(\"overflow\", \"hidden\").height($removeEl.height());\n            $removeEl.animate({\"height\": \"0\"}, 250, () => {\n                $removeEl.remove();\n                $(\".collidingParagraph:empty\").remove();\n                MotionMergeChangeActions.removeEmptyParagraphs();\n                if (onFinished) onFinished();\n            });\n        } else {\n            $removeEl.remove();\n            if (onFinished) onFinished();\n        }\n    }\n}\n\n\nclass MotionMergeChangeTooltip {\n    constructor(private $element: JQuery, mouseX: number, mouseY: number, private parent: MotionMergeAmendmentsTextarea) {\n        let positionX: number = null,\n            positionY: number = null;\n        $element.popover({\n            'container': 'body',\n            'animation': false,\n            'trigger': 'manual',\n            'placement': function (popover) {\n                let $popover = $(<any>popover);\n                $popover.data(\"element\", $element);\n                window.setTimeout(() => {\n                    let width = $popover.width(),\n                        elTop = $element.offset().top,\n                        elHeight = $element.height();\n                    if (positionX === null && width > 0) {\n                        positionX = (mouseX - width / 2);\n                        positionY = mouseY + 10;\n                        if (positionY < (elTop + 19)) {\n                            positionY = elTop + 19;\n                        }\n                        if (positionY > elTop + elHeight) {\n                            positionY = elTop + elHeight;\n                        }\n                    }\n                    $popover.css(\"left\", positionX + \"px\");\n                    $popover.css(\"top\", positionY + \"px\");\n                }, 1);\n                return \"bottom\";\n            },\n            'html': true,\n            'content': this.getContent.bind(this)\n        });\n\n        $element.popover('show');\n        let $popover: JQuery = $element.find(\"> .popover\");\n        $popover.on(\"mousemove\", (ev) => {\n            ev.stopPropagation();\n        });\n        window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n    }\n\n    private getContent() {\n        let $myEl: JQuery = this.$element,\n            html,\n            cid = $myEl.data(\"cid\");\n        if (cid == undefined) {\n            cid = $myEl.parent().data(\"cid\");\n        }\n        $myEl.parents(\".texteditor\").first().find(\"[data-cid=\" + cid + \"]\").addClass(\"hover\");\n\n        html = '<div>';\n        html += '<button type=\"button\" class=\"accept btn btn-sm btn-default\"></button>';\n        html += '<button type=\"button\" class=\"reject btn btn-sm btn-default\"></button>';\n        html += '<a href=\"#\" class=\"btn btn-small btn-default opener\" target=\"_blank\"><span class=\"glyphicon glyphicon-new-window\"></span></a>';\n        html += '<div class=\"initiator\" style=\"font-size: 0.8em;\"></div>';\n        html += '</div>';\n        let $el: JQuery = $(html);\n        $el.find(\".opener\").attr(\"href\", $myEl.data(\"link\")).attr(\"title\", __t(\"merge\", \"title_open_in_blank\"));\n        $el.find(\".initiator\").text(__t(\"merge\", \"initiated_by\") + \": \" + $myEl.data(\"username\"));\n        if ($myEl.hasClass(\"ice-ins\")) {\n            $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n            $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n        } else if ($myEl.hasClass(\"ice-del\")) {\n            $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n            $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n        } else if ($myEl[0].nodeName.toLowerCase() == 'li') {\n            let $list = $myEl.parent();\n            if ($list.hasClass(\"ice-ins\")) {\n                $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n                $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n            } else if ($list.hasClass(\"ice-del\")) {\n                $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n                $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n            } else {\n                console.log(\"unknown\", $list);\n            }\n        } else {\n            console.log(\"unknown\", $myEl);\n            alert(\"unknown\");\n        }\n        return $el;\n    }\n\n    private removePopupIfInactive() {\n        if (this.$element.is(\":hover\")) {\n            return window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n        }\n        if ($(\"body\").find(\".popover:hover\").length > 0) {\n            return window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n        }\n        this.destroy();\n    }\n\n    private affectedChangesets() {\n        let cid = this.$element.data(\"cid\");\n        if (cid == undefined) {\n            cid = this.$element.parent().data(\"cid\");\n        }\n        return this.$element.parents(\".texteditor\").find(\"[data-cid=\" + cid + \"]\");\n    }\n\n    private performActionWithUI(action) {\n        let scrollX = window.scrollX,\n            scrollY = window.scrollY;\n\n        this.parent.saveEditorSnapshot();\n        this.destroy();\n        action.call(this);\n        this.parent.focusTextarea();\n\n        window.scrollTo(scrollX, scrollY);\n    }\n\n    private accept() {\n        this.performActionWithUI(() => {\n            this.affectedChangesets().each((i, el) => {\n                MotionMergeChangeActions.accept(el, () => {\n                    this.parent.onChanged();\n                });\n            });\n        });\n    }\n\n    private reject() {\n        this.performActionWithUI(() => {\n            this.affectedChangesets().each((i, el) => {\n                MotionMergeChangeActions.reject(el, () => {\n                    this.parent.onChanged();\n                });\n            });\n        });\n    }\n\n    public destroy() {\n        this.$element.popover(\"hide\").popover(\"destroy\");\n\n        let cid = this.$element.data(\"cid\");\n        if (cid == undefined) {\n            cid = this.$element.parent().data(\"cid\");\n        }\n\n        let focusAtSameCid = false;\n        this.$element.parents(\".texteditor\").first().find(\"[data-cid=\" + cid + \"]\").each((i, el) => {\n            if ($(el).is(\":hover\")) {\n                focusAtSameCid = true;\n            }\n        });\n        if (!focusAtSameCid) {\n            this.$element.parents(\".texteditor\").first().find(\"[data-cid=\" + cid + \"]\").removeClass(\"hover\");\n        }\n\n        try {\n            // Remove stale objects that were not removed correctly previously\n            $(\".popover\").each((i, stale) => {\n                const $stale = $(stale);\n                if (!$stale.data(\"element\").is(\":hover\")) {\n                    $stale.popover(\"hide\").popover(\"destroy\");\n                    $stale.remove();\n                    console.warn(\"Removed stale window: \", $stale);\n                }\n            });\n        } catch (e) {\n        }\n    }\n}\n\nclass MotionMergeAmendmentsTextarea {\n    private texteditor: editor;\n    private unchangedText: string = null;\n    private hasChanged: boolean = false;\n\n    private prepareText(html: string) {\n        let $text: JQuery = $('<div>' + html + '</div>');\n\n        // Move the amendment-Data from OL's and UL's to their list items\n        $text.find(\"ul.appendHint, ol.appendHint\").each((i, el) => {\n            let $this: JQuery = $(el),\n                appendHint = $this.data(\"append-hint\");\n            $this.find(\"> li\").addClass(\"appendHint\").attr(\"data-append-hint\", appendHint)\n                .attr(\"data-link\", $this.data(\"link\"))\n                .attr(\"data-username\", $this.data(\"username\"));\n            $this.removeClass(\"appendHint\").removeData(\"append-hint\");\n        });\n\n        // Remove double markup\n        $text.find(\".moved .moved\").removeClass('moved');\n        $text.find(\".moved\").each(this.markupMovedParagraph.bind(this));\n\n        // Add hints about starting / ending collisions\n        $text.find(\".hasCollisions\")\n            .attr(\"data-collision-start-msg\", __t('merge', 'colliding_start'))\n            .attr(\"data-collision-end-msg\", __t('merge', 'colliding_end'));\n\n        let newText = $text.html();\n        this.texteditor.setData(newText);\n        this.unchangedText = this.normalizeHtml(this.texteditor.getData());\n        this.texteditor.fire('saveSnapshot');\n        this.onChanged();\n    }\n\n    private markupMovedParagraph(i, el) {\n        let $node = $(el),\n            paragraphNew = $node.data('moving-partner-paragraph'),\n            msg: string;\n\n        if ($node.hasClass('inserted')) {\n            msg = __t('std', 'moved_paragraph_from');\n        } else {\n            msg = __t('std', 'moved_paragraph_to');\n        }\n        msg = msg.replace(/##PARA##/, (paragraphNew + 1));\n\n        if ($node[0].nodeName === 'LI') {\n            $node = $node.parent();\n        }\n\n        $node.attr(\"data-moving-msg\", msg);\n    }\n\n    private initializeTooltips() {\n        this.$holder.on(\"mouseover\", \".appendHint\", (ev) => {\n            const $target = $(ev.currentTarget);\n            if ($target.parents('.paragraphWrapper').first().find('.amendmentStatus.open').length > 0) {\n                return;\n            }\n            if (MotionMergeAmendments.activePopup) {\n                MotionMergeAmendments.activePopup.destroy();\n            }\n            MotionMergeAmendments.activePopup = new MotionMergeChangeTooltip($target, ev.pageX, ev.pageY, this);\n        });\n    }\n\n\n    public acceptAll() {\n        this.saveEditorSnapshot();\n        this.$holder.find(\".ice-ins\").each((i, el) => {\n            MotionMergeChangeActions.insertAccept(el);\n        });\n        this.$holder.find(\".ice-del\").each((i, el) => {\n            MotionMergeChangeActions.deleteAccept(el);\n        });\n        this.onChanged();\n        window.setTimeout(() => {\n            // Wait for animation -> remove \"all dropdown\"\n            this.onChanged();\n            this.saveEditorSnapshot();\n        }, 1000);\n    }\n\n    public rejectAll() {\n        this.saveEditorSnapshot();\n        this.$holder.find(\".ice-ins\").each((i, el) => {\n            MotionMergeChangeActions.insertReject($(el));\n        });\n        this.$holder.find(\".ice-del\").each((i, el) => {\n            MotionMergeChangeActions.deleteReject($(el));\n        });\n        this.onChanged();\n        window.setTimeout(() => {\n            // Wait for animation -> remove \"all dropdown\"\n            this.onChanged();\n            this.saveEditorSnapshot();\n        }, 1000);\n    }\n\n    public saveEditorSnapshot() {\n        this.texteditor.fire('saveSnapshot');\n    }\n\n    public focusTextarea() {\n        //this.$holder.find(\".texteditor\").focus();\n        // This lead to strange cursor behavior, e.g. when removing a colliding paragraph\n    }\n\n    public getContent(): string {\n        return this.texteditor.getData();\n    }\n\n    public getUnchangedContent(): string {\n        return this.unchangedText;\n    }\n\n    public setText(html: string) {\n        this.prepareText(html);\n        this.initializeTooltips();\n    }\n\n    private normalizeHtml(html: string) {\n        const entities = {\n            '&nbsp;': ' ',\n            '&ndash;': '-',\n            '&auml;': 'ä',\n            '&ouml;': 'ö',\n            '&uuml;': 'ü',\n            '&Auml;': 'Ä',\n            '&Ouml;': 'Ö',\n            '&Uuml;': 'Ü',\n            '&szlig;': 'ß',\n            '&bdquo;': '„',\n            '&ldquo;': '“',\n            '&bull;': '•',\n            '&sect;': '§',\n            '&eacute;': 'é',\n            '&rsquo;': '’',\n            '&euro;': '€'\n        };\n        Object.keys(entities).forEach(ent => {\n            html = html.replace(new RegExp(ent, 'g'), entities[ent]);\n        });\n\n        return html.replace(/\\s+</g, '<').replace(/>\\s+/g, '>').replace(/<[^>]*>/g, '');\n    }\n\n    public onChanged() {\n        if (this.normalizeHtml(this.texteditor.getData()) === this.unchangedText) {\n            this.$changedIndicator.addClass(\"unchanged\");\n            this.hasChanged = false;\n        } else {\n            this.$changedIndicator.removeClass(\"unchanged\");\n            this.hasChanged = true;\n        }\n        if (this.$holder.find(\".ice-ins\").length > 0 || this.$holder.find(\".ice-del\").length > 0) {\n            this.$mergeActionHolder.removeClass(\"hidden\");\n        } else {\n            this.$mergeActionHolder.addClass(\"hidden\");\n        }\n    }\n\n    public hasChanges(): boolean {\n        return this.hasChanged;\n    }\n\n    constructor(private $holder: JQuery, private $changedIndicator: JQuery, private $mergeActionHolder: JQuery) {\n        let $textarea = $holder.find(\".texteditor\");\n        let edit = new AntragsgruenEditor($textarea.attr(\"id\"));\n        this.texteditor = edit.getEditor();\n        MotionMergeAmendments.addSubmitListener(() => {\n            $holder.find(\"textarea.raw\").val(this.texteditor.getData());\n            $holder.find(\"textarea.consolidated\").val(this.texteditor.getData());\n        });\n\n        this.setText(this.texteditor.getData());\n\n        if ($holder.data(\"unchanged\")) {\n            this.unchangedText = $holder.data(\"unchanged\");\n            this.onChanged();\n        }\n\n        this.texteditor.on('change', this.onChanged.bind(this));\n    }\n}\n\nclass MotionMergeAmendmentsParagraph {\n    public sectionId: number;\n    public paragraphId: number;\n    public textarea: MotionMergeAmendmentsTextarea;\n\n    constructor(private $holder: JQuery) {\n        this.sectionId = parseInt($holder.data('sectionId'));\n        this.paragraphId = parseInt($holder.data('paragraphId'));\n\n        const $textarea = $holder.find(\".wysiwyg-textarea\");\n        const $changed = $holder.find(\".changedIndicator\");\n        const $mergeActionHolder = $holder.find(\".mergeActionHolder\");\n        this.textarea = new MotionMergeAmendmentsTextarea($textarea, $changed, $mergeActionHolder);\n\n        this.initButtons();\n        $holder.find(\".amendmentStatus\").each((i: number, element) => {\n            AmendmentStatuses.registerParagraph($(element).data(\"amendment-id\"), this);\n        });\n    }\n\n    private initButtons() {\n        this.$holder.find('.toggleAmendment').click((ev) => {\n            const $input = $(ev.currentTarget).find(\".amendmentActive\");\n            const doToggle = () => {\n                if (parseInt($input.val()) === 1) {\n                    $input.val(\"0\");\n                    $input.parents(\".btn-group\").find(\".btn\").addClass(\"btn-default\").removeClass(\"btn-success\");\n                } else {\n                    $input.val(\"1\");\n                    $input.parents(\".btn-group\").find(\".btn\").removeClass(\"btn-default\").addClass(\"btn-success\");\n                }\n                this.reloadText();\n            };\n\n            if (this.textarea.hasChanges()) {\n                bootbox.confirm(__t('merge', 'reloadParagraph'), (result) => {\n                    if (result) {\n                        doToggle();\n                    }\n                });\n            } else {\n                doToggle();\n            }\n        });\n\n        const initTooltip = ($holder: JQuery) => {\n            const amendmentId = parseInt($holder.data(\"amendment-id\"));\n            const currentStatus = AmendmentStatuses.getAmendmentStatus(amendmentId);\n            const currentVersion = AmendmentStatuses.getAmendmentVersion(amendmentId);\n\n            $holder.find(\".dropdown-menu .selected\").removeClass(\"selected\");\n            $holder.find(\".dropdown-menu .status\" + currentStatus).addClass(\"selected\");\n            $holder.find(\".dropdown-menu .version\" + currentVersion).addClass(\"selected\");\n        };\n\n        this.$holder.find('.btn-group.amendmentStatus').on('show.bs.dropdown', ev => {\n            initTooltip($(ev.currentTarget))\n        });\n\n        this.$holder.find(\".btn-group .setStatus\").click(ev => {\n            ev.preventDefault();\n            const $holder = $(ev.currentTarget).parents(\".btn-group\");\n            const amendmentId = parseInt($holder.data(\"amendment-id\"));\n            AmendmentStatuses.setStatus(amendmentId, parseInt($(ev.currentTarget).data(\"status\")));\n            initTooltip($holder);\n        });\n\n        this.$holder.find(\".btn-group .setVersion\").click(ev => {\n            ev.preventDefault();\n            const $holder = $(ev.currentTarget).parents(\".btn-group\");\n            const amendmentId = parseInt($holder.data(\"amendment-id\"));\n            AmendmentStatuses.setVersion(amendmentId, $(ev.currentTarget).data(\"version\"));\n            initTooltip($holder);\n        });\n\n        this.$holder.find(\".mergeActionHolder .acceptAll\").click(ev => {\n            ev.preventDefault();\n            this.textarea.acceptAll();\n        });\n\n        this.$holder.find(\".mergeActionHolder .rejectAll\").click(ev => {\n            ev.preventDefault();\n            this.textarea.rejectAll();\n        });\n    }\n\n    public onAmendmentVersionChanged() {\n        if (this.textarea.hasChanges()) {\n            console.log(\"Skipping, as there are changes\");\n            return;\n        }\n        this.reloadText();\n    }\n\n    public onAmendmentStatusChanged(amendmentId: number, status: number) {\n        if (this.textarea.hasChanges()) {\n            console.log(\"Skipping, as there are changes\");\n            return;\n        }\n        const $holder = this.$holder.find(\".amendmentStatus[data-amendment-id=\" + amendmentId + \"]\");\n        const $btn = $holder.find(\".btn\");\n        const $input = $holder.find(\"input.amendmentActive\");\n        if ([\n            STATUS_ACCEPTED,\n            STATUS_MODIFIED_ACCEPTED,\n            STATUS_PROCESSED,\n            STATUS_ADOPTED,\n            STATUS_COMPLETED\n        ].indexOf(status) !== -1) {\n            $input.val(\"1\");\n            $btn.removeClass(\"btn-default\").addClass(\"btn-success\");\n        } else {\n            $input.val(\"0\");\n            $btn.addClass(\"btn-default\").removeClass(\"btn-success\");\n        }\n        this.reloadText();\n    }\n\n    private reloadText() {\n        const amendments = [];\n        this.$holder.find(\".amendmentActive[value='1']\").each((i, el) => {\n            const amendmentId = parseInt($(el).data('amendment-id'));\n            amendments.push({\n                id: amendmentId,\n                version: AmendmentStatuses.getAmendmentVersion(amendmentId),\n            });\n        });\n        const url = this.$holder.data(\"reload-url\").replace('DUMMY', JSON.stringify(amendments));\n        $.get(url, (data) => {\n            this.textarea.setText(data.text);\n\n            let collisions = '';\n            data.collisions.forEach(str => {\n                collisions += str;\n            });\n\n            this.$holder.find(\".collisionsHolder\").html(collisions);\n            if (data.collisions.length > 0) {\n                this.$holder.addClass(\"hasCollisions\");\n            } else {\n                this.$holder.removeClass(\"hasCollisions\");\n            }\n        });\n    }\n\n    public getDraftData() {\n        const amendmentToggles = [];\n        this.$holder.find(\".amendmentStatus\").each((id, el) => {\n            const $el = $(el);\n            if ($el.find(\".btn-success\").length > 0) {\n                amendmentToggles.push($el.data(\"amendment-id\"));\n            }\n        });\n        return {\n            amendmentToggles,\n            text: this.textarea.getContent(),\n            unchanged: this.textarea.getUnchangedContent(),\n        };\n    }\n}\n\n/**\n * Singleton object\n */\nexport class MotionMergeAmendments {\n    public static activePopup: MotionMergeChangeTooltip = null;\n    public static currMouseX: number = null;\n    public static $form;\n\n    public $draftSavingPanel: JQuery;\n    private paragraphs: MotionMergeAmendmentsParagraph[] = [];\n\n    constructor($form: JQuery) {\n        MotionMergeAmendments.$form = $form;\n\n        const draft = JSON.parse(document.getElementById('mergeDraft').getAttribute('value'));\n        AmendmentStatuses.init(draft.amendmentStatuses, draft.amendmentVersions);\n\n        $(\".paragraphWrapper\").each((i, el) => {\n            const $para = $(el);\n            $para.find(\".wysiwyg-textarea\").on(\"mousemove\", (ev) => {\n                MotionMergeAmendments.currMouseX = ev.offsetX;\n            });\n\n            this.paragraphs.push(new MotionMergeAmendmentsParagraph($para));\n        });\n\n        MotionMergeAmendments.$form.on(\"submit\", (ev) => {\n            this.saveDraft(true);\n            $(window).off(\"beforeunload\", MotionMergeAmendments.onLeavePage);\n        });\n        $(window).on(\"beforeunload\", MotionMergeAmendments.onLeavePage);\n\n        this.initDraftSaving();\n    }\n\n    public static onLeavePage(): string {\n        return __t(\"std\", \"leave_changed_page\");\n    }\n\n    public static addSubmitListener(cb) {\n        this.$form.submit(cb);\n    }\n\n    private setDraftDate(date: Date) {\n        this.$draftSavingPanel.find(\".lastSaved .none\").hide();\n\n        let options = {\n                year: 'numeric', month: 'numeric', day: 'numeric',\n                hour: 'numeric', minute: 'numeric',\n                hour12: false\n            },\n            lang: string = $(\"html\").attr(\"lang\"),\n            formatted = new Intl.DateTimeFormat(lang, options).format(date);\n\n        this.$draftSavingPanel.find(\".lastSaved .value\").text(formatted);\n    }\n\n    private saveDraft(onlyInput = false) {\n        const data = {\n            \"amendmentStatuses\": AmendmentStatuses.getAllStatuses(),\n            \"amendmentVersions\": AmendmentStatuses.getAllVersions(),\n            \"paragraphs\": {},\n            \"sections\": {},\n        };\n        $(\".sectionType0\").each((i, el) => {\n            const $section = $(el),\n                sectionId = $section.data(\"section-id\");\n            data.sections[sectionId] = $section.find(\".form-control\").val();\n        });\n\n        this.paragraphs.forEach(para => {\n            data.paragraphs[para.sectionId + '_' + para.paragraphId] = para.getDraftData();\n        });\n        let isPublic: boolean = this.$draftSavingPanel.find('input[name=public]').prop('checked');\n\n        const dataStr = JSON.stringify(data);\n        document.getElementById('mergeDraft').setAttribute('value', dataStr);\n\n        if (!onlyInput) {\n            $.ajax({\n                type: \"POST\",\n                url: MotionMergeAmendments.$form.data('draftSaving'),\n                data: {\n                    'public': (isPublic ? 1 : 0),\n                    data: dataStr,\n                    '_csrf': MotionMergeAmendments.$form.find('> input[name=_csrf]').val()\n                },\n                success: (ret) => {\n                    if (ret['success']) {\n                        this.$draftSavingPanel.find('.savingError').addClass('hidden');\n                        this.setDraftDate(new Date(ret['date']));\n                        if (isPublic) {\n                            MotionMergeAmendments.$form.find('.publicLink').removeClass('hidden');\n                        } else {\n                            MotionMergeAmendments.$form.find('.publicLink').addClass('hidden');\n                        }\n                    } else {\n                        this.$draftSavingPanel.find('.savingError').removeClass('hidden');\n                        this.$draftSavingPanel.find('.savingError .errorNetwork').addClass('hidden');\n                        this.$draftSavingPanel.find('.savingError .errorHolder').text(ret['error']).removeClass('hidden');\n                    }\n                },\n                error: () => {\n                    this.$draftSavingPanel.find('.savingError').removeClass('hidden');\n                    this.$draftSavingPanel.find('.savingError .errorNetwork').removeClass('hidden');\n                    this.$draftSavingPanel.find('.savingError .errorHolder').text('').addClass('hidden');\n                }\n            });\n        }\n    }\n\n    private initAutosavingDraft() {\n        let $toggle: JQuery = this.$draftSavingPanel.find('input[name=autosave]');\n\n        window.setInterval(() => {\n            if ($toggle.prop('checked')) {\n                this.saveDraft(false);\n            }\n        }, 5000);\n\n        if (localStorage) {\n            let state = localStorage.getItem('merging-draft-auto-save');\n            if (state !== null) {\n                $toggle.prop('checked', (state == '1'));\n            }\n        }\n        $toggle.change(() => {\n            let active: boolean = $toggle.prop('checked');\n            if (localStorage) {\n                localStorage.setItem('merging-draft-auto-save', (active ? '1' : '0'));\n            }\n        }).trigger('change');\n    }\n\n    private initDraftSaving() {\n        this.$draftSavingPanel = MotionMergeAmendments.$form.find('#draftSavingPanel');\n        this.$draftSavingPanel.find('.saveDraft').on('click', () => this.saveDraft(false));\n        this.$draftSavingPanel.find('input[name=public]').on('change', () => this.saveDraft(false));\n        this.initAutosavingDraft();\n\n        if (this.$draftSavingPanel.data(\"resumed-date\")) {\n            let date = new Date(this.$draftSavingPanel.data(\"resumed-date\"));\n            this.setDraftDate(date);\n        }\n\n        $(\"#yii-debug-toolbar\").remove();\n    }\n}\n"]}