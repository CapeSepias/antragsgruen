{"version":3,"sources":["frontend/MotionMergeAmendments.ts"],"names":["AMENDMENT_VERSION","STATUS_ACCEPTED","STATUS_MODIFIED_ACCEPTED","STATUS_PROCESSED","STATUS_ADOPTED","STATUS_COMPLETED","AmendmentStatuses","init","statuses","versions","votingData","Object","keys","forEach","amendmentId","statusListeners","getAmendmentStatus","getAmendmentVersion","getAmendmentVotingData","registerParagraph","paragraph","push","setStatus","status","onAmendmentStatusChanged","setVersion","version","onAmendmentVersionChanged","setVotesYes","votes","votesYes","setVotesNo","votesNo","setVotesAbstention","votesAbstention","setVotesInvalid","votesInvalid","setVotesComment","comment","getAllStatuses","getAllVersions","getAllVotingData","MotionMergeChangeActions","removeEmptyParagraphs","$","each","i","el","childNodes","length","remove","accept","node","onFinished","$node","hasClass","insertAccept","deleteAccept","reject","insertReject","deleteReject","$removeEl","name","nodeName","toLowerCase","parent","css","height","animate","$this","removeClass","removeAttr","children","replaceWith","html","exports","MotionMergeChangeTooltip","$element","mouseX","mouseY","this","positionX","positionY","popover","container","animation","trigger","placement","$popover","data","window","setTimeout","width","elTop","offset","top","elHeight","content","getContent","bind","find","on","ev","stopPropagation","removePopupIfInactive","prototype","$myEl","cid","undefined","parents","first","addClass","$el","attr","__t","text","click","$list","console","log","alert","is","destroy","affectedChangesets","performActionWithUI","action","scrollX","scrollY","saveEditorSnapshot","call","focusTextarea","scrollTo","_this","onChanged","focusAtSameCid","stale","$stale","warn","e","MotionMergeAmendmentsTextarea","$holder","$changedIndicator","$mergeActionHolder","unchangedText","hasChanged","changedListeners","$textarea","edit","AntragsgruenEditor_1","AntragsgruenEditor","texteditor","getEditor","setText","getData","prepareText","$text","appendHint","removeData","markupMovedParagraph","newText","setData","normalizeHtml","fire","addChangedListener","cb","msg","paragraphNew","replace","initializeTooltips","$target","currentTarget","MotionMergeAmendments","activePopup","pageX","pageY","acceptAll","rejectAll","getUnchangedContent","entities","&nbsp;","&ndash;","&auml;","&ouml;","&uuml;","&Auml;","&Ouml;","&Uuml;","&szlig;","&bdquo;","&ldquo;","&bull;","&sect;","&eacute;","&rsquo;","&euro;","ent","RegExp","hasChanges","MotionMergeAmendmentsParagraph","hasUnsavedChanges","sectionId","parseInt","paragraphId","$changed","textarea","initButtons","element","$input","doToggle","val","reloadText","bootbox","confirm","result","initTooltip","currentStatus","currentVersion","preventDefault","$btn","indexOf","amendments","id","url","JSON","stringify","get","collisions","str","getDraftData","amendmentToggles","unchanged","onDraftChanged","$form","paragraphs","draft","parse","document","getElementById","getAttribute","amendmentStatuses","amendmentVersions","amendmentVotingData","$para","currMouseX","offsetX","saveDraft","off","onLeavePage","initDraftSaving","setDraftDate","date","$draftSavingPanel","hide","lang","formatted","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","onlyInput","filter","par","sections","$section","para","isPublic","prop","dataStr","setAttribute","ajax","type","public","_csrf","success","ret","Date","error","initAutosavingDraft","$toggle","setInterval","localStorage","state","getItem","change","active","setItem"],"mappings":"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","file":"MotionMergeAmendments.js","sourcesContent":["import { AntragsgruenEditor } from \"../shared/AntragsgruenEditor\";\nimport editor = CKEDITOR.editor;\n\nconst STATUS_ACCEPTED = 4;\nconst STATUS_MODIFIED_ACCEPTED = 6;\nconst STATUS_PROCESSED = 17;\nconst STATUS_ADOPTED = 8;\nconst STATUS_COMPLETED = 9;\n\nenum AMENDMENT_VERSION {\n    ORIGINAL = 'orig',\n    PROPOSED_PROCEDURE = 'prop',\n}\n\ninterface VotingData {\n    votesYes: number;\n    votesNo: number;\n    votesAbstention: number;\n    votesInvalid: number;\n    comment: string;\n}\n\nclass AmendmentStatuses {\n    private static statuses: { [amendmentId: number]: number };\n    private static versions: { [amendmentId: number]: AMENDMENT_VERSION };\n    private static votingData: { [amendmentId: number]: VotingData };\n    private static statusListeners: { [amendmentId: number]: MotionMergeAmendmentsParagraph[] } = {};\n\n    public static init(\n        statuses: { [amendmentId: number]: number },\n        versions: { [amendmentId: number]: AMENDMENT_VERSION },\n        votingData: { [amendmentId: number]: VotingData }\n    ) {\n        AmendmentStatuses.statuses = statuses;\n        AmendmentStatuses.versions = versions;\n        AmendmentStatuses.votingData = votingData;\n\n        Object.keys(statuses).forEach(amendmentId => {\n            AmendmentStatuses.statusListeners[amendmentId] = [];\n        });\n    }\n\n    public static getAmendmentStatus(amendmentId: number): number {\n        return AmendmentStatuses.statuses[amendmentId];\n    }\n\n    public static getAmendmentVersion(amendmentId: number): AMENDMENT_VERSION {\n        return AmendmentStatuses.versions[amendmentId];\n    }\n\n    public static getAmendmentVotingData(amendmentId: number): VotingData {\n        return AmendmentStatuses.votingData[amendmentId];\n    }\n\n    public static registerParagraph(amendmentId: number, paragraph: MotionMergeAmendmentsParagraph) {\n        AmendmentStatuses.statusListeners[amendmentId].push(paragraph);\n    }\n\n    public static setStatus(amendmentId: number, status: number) {\n        AmendmentStatuses.statuses[amendmentId] = status;\n        AmendmentStatuses.statusListeners[amendmentId].forEach(paragraph => {\n            paragraph.onAmendmentStatusChanged(amendmentId, status);\n        });\n    }\n\n    public static setVersion(amendmentId: number, version: AMENDMENT_VERSION) {\n        AmendmentStatuses.versions[amendmentId] = version;\n        AmendmentStatuses.statusListeners[amendmentId].forEach(paragraph => {\n            paragraph.onAmendmentVersionChanged();\n        });\n    }\n\n    public static setVotesYes(amendmentId: number, votes: number) {\n        AmendmentStatuses.votingData[amendmentId].votesYes = votes;\n    }\n\n    public static setVotesNo(amendmentId: number, votes: number) {\n        AmendmentStatuses.votingData[amendmentId].votesNo = votes;\n    }\n\n    public static setVotesAbstention(amendmentId: number, votes: number) {\n        AmendmentStatuses.votingData[amendmentId].votesAbstention = votes;\n    }\n\n    public static setVotesInvalid(amendmentId: number, votes: number) {\n        AmendmentStatuses.votingData[amendmentId].votesInvalid = votes;\n    }\n\n    public static setVotesComment(amendmentId: number, comment: string) {\n        AmendmentStatuses.votingData[amendmentId].comment = comment;\n    }\n\n    public static getAllStatuses(): { [amendmentId: number]: number } {\n        return AmendmentStatuses.statuses;\n    }\n\n    public static getAllVersions(): { [amendmentId: number]: AMENDMENT_VERSION } {\n        return AmendmentStatuses.versions;\n    }\n\n    public static getAllVotingData(): { [amendmentId: number]: VotingData } {\n        return AmendmentStatuses.votingData;\n    }\n}\n\nexport class MotionMergeChangeActions {\n    public static removeEmptyParagraphs() {\n        $('.paragraphHolder').each((i, el) => {\n            if (el.childNodes.length == 0) {\n                $(el).remove();\n            }\n        });\n    }\n\n    public static accept(node: Element, onFinished: () => void = null) {\n        let $node = $(node);\n        if ($node.hasClass(\"ice-ins\")) {\n            MotionMergeChangeActions.insertAccept(node, onFinished);\n        }\n        if ($node.hasClass(\"ice-del\")) {\n            MotionMergeChangeActions.deleteAccept(node, onFinished);\n        }\n    }\n\n    public static reject(node: Element, onFinished: () => void = null) {\n        let $node = $(node);\n        if ($node.hasClass(\"ice-ins\")) {\n            MotionMergeChangeActions.insertReject($node, onFinished);\n        }\n        if ($node.hasClass(\"ice-del\")) {\n            MotionMergeChangeActions.deleteReject($node, onFinished);\n        }\n    }\n\n    public static insertReject($node: JQuery, onFinished: () => void = null) {\n        let $removeEl: JQuery,\n            name = $node[0].nodeName.toLowerCase();\n        if (name == 'li') {\n            $removeEl = $node.parent();\n        } else {\n            $removeEl = $node;\n        }\n        if (name == 'ul' || name == 'ol' || name == 'li' || name == 'blockquote' || name == 'pre' || name == 'p') {\n            $removeEl.css(\"overflow\", \"hidden\").height($removeEl.height());\n            $removeEl.animate({\"height\": \"0\"}, 250, () => {\n                $removeEl.remove();\n                $(\".collidingParagraph:empty\").remove();\n                MotionMergeChangeActions.removeEmptyParagraphs();\n                if (onFinished) onFinished();\n            });\n        } else {\n            $removeEl.remove();\n            if (onFinished) onFinished();\n        }\n    }\n\n    public static insertAccept(node: Element, onFinished: () => void = null) {\n        let $this: JQuery = $(node);\n        $this.removeClass(\"ice-cts ice-ins appendHint moved\");\n        $this.removeAttr(\"data-moving-partner data-moving-partner-id data-moving-partner-paragraph data-moving-msg\");\n        if (node.nodeName.toLowerCase() == 'ul' || node.nodeName.toLowerCase() == 'ol') {\n            $this.children().removeClass(\"ice-cts\").removeClass(\"ice-ins\").removeClass(\"appendHint\");\n        }\n        if (node.nodeName.toLowerCase() == 'li') {\n            $this.parent().removeClass(\"ice-cts\").removeClass(\"ice-ins\").removeClass(\"appendHint\");\n        }\n        if (node.nodeName.toLowerCase() == 'ins') {\n            $this.replaceWith($this.html());\n        }\n        if (onFinished) onFinished();\n    }\n\n    public static deleteReject($node: JQuery, onFinished: () => void = null) {\n        $node.removeClass(\"ice-cts ice-del appendHint\");\n        $node.removeAttr(\"data-moving-partner data-moving-partner-id data-moving-partner-paragraph data-moving-msg\");\n        let nodeName = $node[0].nodeName.toLowerCase();\n        if (nodeName == 'ul' || nodeName == 'ol') {\n            $node.children().removeClass(\"ice-cts\").removeClass(\"ice-del\").removeClass(\"appendHint\");\n        }\n        if (nodeName == 'li') {\n            $node.parent().removeClass(\"ice-cts\").removeClass(\"ice-del\").removeClass(\"appendHint\");\n        }\n        if (nodeName == 'del') {\n            $node.replaceWith($node.html());\n        }\n        if (onFinished) onFinished();\n    }\n\n    public static deleteAccept(node: Element, onFinished: () => void = null) {\n        let name = node.nodeName.toLowerCase(),\n            $removeEl: JQuery;\n        if (name == 'li') {\n            $removeEl = $(node).parent();\n        } else {\n            $removeEl = $(node);\n        }\n\n        if (name == 'ul' || name == 'ol' || name == 'li' || name == 'blockquote' || name == 'pre' || name == 'p') {\n            $removeEl.css(\"overflow\", \"hidden\").height($removeEl.height());\n            $removeEl.animate({\"height\": \"0\"}, 250, () => {\n                $removeEl.remove();\n                $(\".collidingParagraph:empty\").remove();\n                MotionMergeChangeActions.removeEmptyParagraphs();\n                if (onFinished) onFinished();\n            });\n        } else {\n            $removeEl.remove();\n            if (onFinished) onFinished();\n        }\n    }\n}\n\n\nclass MotionMergeChangeTooltip {\n    constructor(private $element: JQuery, mouseX: number, mouseY: number, private parent: MotionMergeAmendmentsTextarea) {\n        let positionX: number = null,\n            positionY: number = null;\n        $element.popover({\n            'container': 'body',\n            'animation': false,\n            'trigger': 'manual',\n            'placement': function (popover) {\n                let $popover = $(<any>popover);\n                $popover.data(\"element\", $element);\n                window.setTimeout(() => {\n                    let width = $popover.width(),\n                        elTop = $element.offset().top,\n                        elHeight = $element.height();\n                    if (positionX === null && width > 0) {\n                        positionX = (mouseX - width / 2);\n                        positionY = mouseY + 10;\n                        if (positionY < (elTop + 19)) {\n                            positionY = elTop + 19;\n                        }\n                        if (positionY > elTop + elHeight) {\n                            positionY = elTop + elHeight;\n                        }\n                    }\n                    $popover.css(\"left\", positionX + \"px\");\n                    $popover.css(\"top\", positionY + \"px\");\n                }, 1);\n                return \"bottom\";\n            },\n            'html': true,\n            'content': this.getContent.bind(this)\n        });\n\n        $element.popover('show');\n        let $popover: JQuery = $element.find(\"> .popover\");\n        $popover.on(\"mousemove\", (ev) => {\n            ev.stopPropagation();\n        });\n        window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n    }\n\n    private getContent() {\n        let $myEl: JQuery = this.$element,\n            html,\n            cid = $myEl.data(\"cid\");\n        if (cid == undefined) {\n            cid = $myEl.parent().data(\"cid\");\n        }\n        $myEl.parents(\".texteditor\").first().find(\"[data-cid=\" + cid + \"]\").addClass(\"hover\");\n\n        html = '<div>';\n        html += '<button type=\"button\" class=\"accept btn btn-sm btn-default\"></button>';\n        html += '<button type=\"button\" class=\"reject btn btn-sm btn-default\"></button>';\n        html += '<a href=\"#\" class=\"btn btn-small btn-default opener\" target=\"_blank\"><span class=\"glyphicon glyphicon-new-window\"></span></a>';\n        html += '<div class=\"initiator\" style=\"font-size: 0.8em;\"></div>';\n        html += '</div>';\n        let $el: JQuery = $(html);\n        $el.find(\".opener\").attr(\"href\", $myEl.data(\"link\")).attr(\"title\", __t(\"merge\", \"title_open_in_blank\"));\n        $el.find(\".initiator\").text(__t(\"merge\", \"initiated_by\") + \": \" + $myEl.data(\"username\"));\n        if ($myEl.hasClass(\"ice-ins\")) {\n            $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n            $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n        } else if ($myEl.hasClass(\"ice-del\")) {\n            $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n            $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n        } else if ($myEl[0].nodeName.toLowerCase() == 'li') {\n            let $list = $myEl.parent();\n            if ($list.hasClass(\"ice-ins\")) {\n                $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n                $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n            } else if ($list.hasClass(\"ice-del\")) {\n                $el.find(\"button.accept\").text(__t(\"merge\", \"change_accept\")).click(this.accept.bind(this));\n                $el.find(\"button.reject\").text(__t(\"merge\", \"change_reject\")).click(this.reject.bind(this));\n            } else {\n                console.log(\"unknown\", $list);\n            }\n        } else {\n            console.log(\"unknown\", $myEl);\n            alert(\"unknown\");\n        }\n        return $el;\n    }\n\n    private removePopupIfInactive() {\n        if (this.$element.is(\":hover\")) {\n            return window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n        }\n        if ($(\"body\").find(\".popover:hover\").length > 0) {\n            return window.setTimeout(this.removePopupIfInactive.bind(this), 1000);\n        }\n        this.destroy();\n    }\n\n    private affectedChangesets() {\n        let cid = this.$element.data(\"cid\");\n        if (cid == undefined) {\n            cid = this.$element.parent().data(\"cid\");\n        }\n        return this.$element.parents(\".texteditor\").find(\"[data-cid=\" + cid + \"]\");\n    }\n\n    private performActionWithUI(action) {\n        let scrollX = window.scrollX,\n            scrollY = window.scrollY;\n\n        this.parent.saveEditorSnapshot();\n        this.destroy();\n        action.call(this);\n        this.parent.focusTextarea();\n\n        window.scrollTo(scrollX, scrollY);\n    }\n\n    private accept() {\n        this.performActionWithUI(() => {\n            this.affectedChangesets().each((i, el) => {\n                MotionMergeChangeActions.accept(el, () => {\n                    this.parent.onChanged();\n                });\n            });\n        });\n    }\n\n    private reject() {\n        this.performActionWithUI(() => {\n            this.affectedChangesets().each((i, el) => {\n                MotionMergeChangeActions.reject(el, () => {\n                    this.parent.onChanged();\n                });\n            });\n        });\n    }\n\n    public destroy() {\n        this.$element.popover(\"hide\").popover(\"destroy\");\n\n        let cid = this.$element.data(\"cid\");\n        if (cid == undefined) {\n            cid = this.$element.parent().data(\"cid\");\n        }\n\n        let focusAtSameCid = false;\n        this.$element.parents(\".texteditor\").first().find(\"[data-cid=\" + cid + \"]\").each((i, el) => {\n            if ($(el).is(\":hover\")) {\n                focusAtSameCid = true;\n            }\n        });\n        if (!focusAtSameCid) {\n            this.$element.parents(\".texteditor\").first().find(\"[data-cid=\" + cid + \"]\").removeClass(\"hover\");\n        }\n\n        try {\n            // Remove stale objects that were not removed correctly previously\n            $(\".popover\").each((i, stale) => {\n                const $stale = $(stale);\n                if (!$stale.data(\"element\").is(\":hover\")) {\n                    $stale.popover(\"hide\").popover(\"destroy\");\n                    $stale.remove();\n                    console.warn(\"Removed stale window: \", $stale);\n                }\n            });\n        } catch (e) {\n        }\n    }\n}\n\nclass MotionMergeAmendmentsTextarea {\n    private texteditor: editor;\n    private unchangedText: string = null;\n    private hasChanged: boolean = false;\n    private changedListeners: { (): void }[] = [];\n\n    private prepareText(html: string) {\n        let $text: JQuery = $('<div>' + html + '</div>');\n\n        // Move the amendment-Data from OL's and UL's to their list items\n        $text.find(\"ul.appendHint, ol.appendHint\").each((i, el) => {\n            let $this: JQuery = $(el),\n                appendHint = $this.data(\"append-hint\");\n            $this.find(\"> li\").addClass(\"appendHint\").attr(\"data-append-hint\", appendHint)\n                .attr(\"data-link\", $this.data(\"link\"))\n                .attr(\"data-username\", $this.data(\"username\"));\n            $this.removeClass(\"appendHint\").removeData(\"append-hint\");\n        });\n\n        // Remove double markup\n        $text.find(\".moved .moved\").removeClass('moved');\n        $text.find(\".moved\").each(this.markupMovedParagraph.bind(this));\n\n        // Add hints about starting / ending collisions\n        $text.find(\".hasCollisions\")\n            .attr(\"data-collision-start-msg\", __t('merge', 'colliding_start'))\n            .attr(\"data-collision-end-msg\", __t('merge', 'colliding_end'));\n\n        let newText = $text.html();\n        this.texteditor.setData(newText);\n        this.unchangedText = this.normalizeHtml(this.texteditor.getData());\n        this.texteditor.fire('saveSnapshot');\n        this.onChanged();\n    }\n\n    public addChangedListener(cb: () => void) {\n        this.changedListeners.push(cb);\n    }\n\n    private markupMovedParagraph(i, el) {\n        let $node = $(el),\n            paragraphNew = $node.data('moving-partner-paragraph'),\n            msg: string;\n\n        if ($node.hasClass('inserted')) {\n            msg = __t('std', 'moved_paragraph_from');\n        } else {\n            msg = __t('std', 'moved_paragraph_to');\n        }\n        msg = msg.replace(/##PARA##/, (paragraphNew + 1));\n\n        if ($node[0].nodeName === 'LI') {\n            $node = $node.parent();\n        }\n\n        $node.attr(\"data-moving-msg\", msg);\n    }\n\n    private initializeTooltips() {\n        this.$holder.on(\"mouseover\", \".appendHint\", (ev) => {\n            const $target = $(ev.currentTarget);\n            if ($target.parents('.paragraphWrapper').first().find('.amendmentStatus.open').length > 0) {\n                return;\n            }\n            if (MotionMergeAmendments.activePopup) {\n                MotionMergeAmendments.activePopup.destroy();\n            }\n            MotionMergeAmendments.activePopup = new MotionMergeChangeTooltip($target, ev.pageX, ev.pageY, this);\n        });\n    }\n\n\n    public acceptAll() {\n        this.saveEditorSnapshot();\n        this.$holder.find(\".ice-ins\").each((i, el) => {\n            MotionMergeChangeActions.insertAccept(el);\n        });\n        this.$holder.find(\".ice-del\").each((i, el) => {\n            MotionMergeChangeActions.deleteAccept(el);\n        });\n        this.onChanged();\n        window.setTimeout(() => {\n            // Wait for animation -> remove \"all dropdown\"\n            this.onChanged();\n            this.saveEditorSnapshot();\n        }, 1000);\n    }\n\n    public rejectAll() {\n        this.saveEditorSnapshot();\n        this.$holder.find(\".ice-ins\").each((i, el) => {\n            MotionMergeChangeActions.insertReject($(el));\n        });\n        this.$holder.find(\".ice-del\").each((i, el) => {\n            MotionMergeChangeActions.deleteReject($(el));\n        });\n        this.onChanged();\n        window.setTimeout(() => {\n            // Wait for animation -> remove \"all dropdown\"\n            this.onChanged();\n            this.saveEditorSnapshot();\n        }, 1000);\n    }\n\n    public saveEditorSnapshot() {\n        this.texteditor.fire('saveSnapshot');\n    }\n\n    public focusTextarea() {\n        //this.$holder.find(\".texteditor\").focus();\n        // This lead to strange cursor behavior, e.g. when removing a colliding paragraph\n    }\n\n    public getContent(): string {\n        return this.texteditor.getData();\n    }\n\n    public getUnchangedContent(): string {\n        return this.unchangedText;\n    }\n\n    public setText(html: string) {\n        this.prepareText(html);\n        this.initializeTooltips();\n    }\n\n    private normalizeHtml(html: string) {\n        const entities = {\n            '&nbsp;': ' ',\n            '&ndash;': '-',\n            '&auml;': 'ä',\n            '&ouml;': 'ö',\n            '&uuml;': 'ü',\n            '&Auml;': 'Ä',\n            '&Ouml;': 'Ö',\n            '&Uuml;': 'Ü',\n            '&szlig;': 'ß',\n            '&bdquo;': '„',\n            '&ldquo;': '“',\n            '&bull;': '•',\n            '&sect;': '§',\n            '&eacute;': 'é',\n            '&rsquo;': '’',\n            '&euro;': '€'\n        };\n        Object.keys(entities).forEach(ent => {\n            html = html.replace(new RegExp(ent, 'g'), entities[ent]);\n        });\n\n        return html.replace(/\\s+</g, '<').replace(/>\\s+/g, '>').replace(/<[^>]*>/g, '');\n    }\n\n    public onChanged() {\n        if (this.normalizeHtml(this.texteditor.getData()) === this.unchangedText) {\n            this.$changedIndicator.addClass(\"unchanged\");\n            this.hasChanged = false;\n        } else {\n            this.$changedIndicator.removeClass(\"unchanged\");\n            this.hasChanged = true;\n        }\n        if (this.$holder.find(\".ice-ins\").length > 0 || this.$holder.find(\".ice-del\").length > 0) {\n            this.$mergeActionHolder.removeClass(\"hidden\");\n        } else {\n            this.$mergeActionHolder.addClass(\"hidden\");\n        }\n        this.changedListeners.forEach(cb => cb());\n    }\n\n    public hasChanges(): boolean {\n        return this.hasChanged;\n    }\n\n    constructor(private $holder: JQuery, private $changedIndicator: JQuery, private $mergeActionHolder: JQuery) {\n        let $textarea = $holder.find(\".texteditor\");\n        let edit = new AntragsgruenEditor($textarea.attr(\"id\"));\n        this.texteditor = edit.getEditor();\n\n        this.setText(this.texteditor.getData());\n\n        if ($holder.data(\"unchanged\")) {\n            this.unchangedText = $holder.data(\"unchanged\");\n            this.onChanged();\n        }\n\n        this.texteditor.on('change', this.onChanged.bind(this));\n    }\n}\n\nclass MotionMergeAmendmentsParagraph {\n    public sectionId: number;\n    public paragraphId: number;\n    public textarea: MotionMergeAmendmentsTextarea;\n    public hasUnsavedChanges = false;\n\n    constructor(private $holder: JQuery) {\n        this.sectionId = parseInt($holder.data('sectionId'));\n        this.paragraphId = parseInt($holder.data('paragraphId'));\n\n        const $textarea = $holder.find(\".wysiwyg-textarea\");\n        const $changed = $holder.find(\".changedIndicator\");\n        const $mergeActionHolder = $holder.find(\".mergeActionHolder\");\n        this.textarea = new MotionMergeAmendmentsTextarea($textarea, $changed, $mergeActionHolder);\n\n        this.initButtons();\n        $holder.find(\".amendmentStatus\").each((i: number, element) => {\n            AmendmentStatuses.registerParagraph($(element).data(\"amendment-id\"), this);\n        });\n\n        this.textarea.addChangedListener(() => this.hasUnsavedChanges = true);\n    }\n\n    private initButtons() {\n        this.$holder.find('.toggleAmendment').click((ev) => {\n            const $input = $(ev.currentTarget).find(\".amendmentActive\");\n            const doToggle = () => {\n                if (parseInt($input.val()) === 1) {\n                    $input.val(\"0\");\n                    $input.parents(\".btn-group\").find(\".btn\").addClass(\"btn-default\").removeClass(\"btn-success\");\n                } else {\n                    $input.val(\"1\");\n                    $input.parents(\".btn-group\").find(\".btn\").removeClass(\"btn-default\").addClass(\"btn-success\");\n                }\n                this.reloadText();\n                this.hasUnsavedChanges = true;\n            };\n\n            if (this.textarea.hasChanges()) {\n                bootbox.confirm(__t('merge', 'reloadParagraph'), (result) => {\n                    if (result) {\n                        doToggle();\n                    }\n                });\n            } else {\n                doToggle();\n            }\n        });\n\n        const initTooltip = ($holder: JQuery) => {\n            const amendmentId = parseInt($holder.data(\"amendment-id\"));\n            const currentStatus = AmendmentStatuses.getAmendmentStatus(amendmentId);\n            const currentVersion = AmendmentStatuses.getAmendmentVersion(amendmentId);\n            const votingData = AmendmentStatuses.getAmendmentVotingData(amendmentId);\n\n            $holder.find(\".dropdown-menu .selected\").removeClass(\"selected\");\n            $holder.find(\".dropdown-menu .status\" + currentStatus).addClass(\"selected\");\n            $holder.find(\".dropdown-menu .version\" + currentVersion).addClass(\"selected\");\n            $holder.find(\".votesYes\").val(votingData.votesYes);\n            $holder.find(\".votesNo\").val(votingData.votesNo);\n            $holder.find(\".votesAbstention\").val(votingData.votesAbstention);\n            $holder.find(\".votesInvalid\").val(votingData.votesInvalid);\n            $holder.find(\".votesComment\").val(votingData.comment);\n        };\n\n        this.$holder.find('.btn-group.amendmentStatus').on('show.bs.dropdown', ev => {\n            initTooltip($(ev.currentTarget))\n        });\n\n        this.$holder.find(\".btn-group .setStatus\").click(ev => {\n            ev.preventDefault();\n            const $holder = $(ev.currentTarget).parents(\".btn-group\");\n            const amendmentId = parseInt($holder.data(\"amendment-id\"));\n            AmendmentStatuses.setStatus(amendmentId, parseInt($(ev.currentTarget).data(\"status\")));\n            initTooltip($holder);\n            this.hasUnsavedChanges = true;\n        });\n\n        this.$holder.find(\".btn-group .setVersion\").click(ev => {\n            ev.preventDefault();\n            const $holder = $(ev.currentTarget).parents(\".btn-group\");\n            const amendmentId = parseInt($holder.data(\"amendment-id\"));\n            AmendmentStatuses.setVersion(amendmentId, $(ev.currentTarget).data(\"version\"));\n            initTooltip($holder);\n            this.hasUnsavedChanges = true;\n        });\n\n        this.$holder.find(\".btn-group .votesYes\").on(\"keyup change\", ev => {\n            const $holder = $(ev.currentTarget).parents(\".btn-group\");\n            const amendmentId = parseInt($holder.data(\"amendment-id\"));\n            AmendmentStatuses.setVotesYes(amendmentId, $(ev.currentTarget).val());\n            this.hasUnsavedChanges = true;\n        });\n\n        this.$holder.find(\".btn-group .votesNo\").on(\"keyup change\", ev => {\n            const $holder = $(ev.currentTarget).parents(\".btn-group\");\n            const amendmentId = parseInt($holder.data(\"amendment-id\"));\n            AmendmentStatuses.setVotesNo(amendmentId, $(ev.currentTarget).val());\n            this.hasUnsavedChanges = true;\n        });\n\n        this.$holder.find(\".btn-group .votesAbstention\").on(\"keyup change\", ev => {\n            const $holder = $(ev.currentTarget).parents(\".btn-group\");\n            const amendmentId = parseInt($holder.data(\"amendment-id\"));\n            AmendmentStatuses.setVotesAbstention(amendmentId, $(ev.currentTarget).val());\n            this.hasUnsavedChanges = true;\n        });\n\n        this.$holder.find(\".btn-group .votesInvalid\").on(\"keyup change\", ev => {\n            const $holder = $(ev.currentTarget).parents(\".btn-group\");\n            const amendmentId = parseInt($holder.data(\"amendment-id\"));\n            AmendmentStatuses.setVotesInvalid(amendmentId, $(ev.currentTarget).val());\n            this.hasUnsavedChanges = true;\n        });\n\n        this.$holder.find(\".btn-group .votesComment\").on(\"keyup change\", ev => {\n            const $holder = $(ev.currentTarget).parents(\".btn-group\");\n            const amendmentId = parseInt($holder.data(\"amendment-id\"));\n            AmendmentStatuses.setVotesComment(amendmentId, $(ev.currentTarget).val());\n            this.hasUnsavedChanges = true;\n        });\n\n        this.$holder.find(\".mergeActionHolder .acceptAll\").click(ev => {\n            ev.preventDefault();\n            this.textarea.acceptAll();\n            this.hasUnsavedChanges = true;\n        });\n\n        this.$holder.find(\".mergeActionHolder .rejectAll\").click(ev => {\n            ev.preventDefault();\n            this.textarea.rejectAll();\n            this.hasUnsavedChanges = true;\n        });\n    }\n\n    public onAmendmentVersionChanged() {\n        if (this.textarea.hasChanges()) {\n            console.log(\"Skipping, as there are changes\");\n            return;\n        }\n        this.reloadText();\n    }\n\n    public onAmendmentStatusChanged(amendmentId: number, status: number) {\n        if (this.textarea.hasChanges()) {\n            console.log(\"Skipping, as there are changes\");\n            return;\n        }\n        const $holder = this.$holder.find(\".amendmentStatus[data-amendment-id=\" + amendmentId + \"]\");\n        const $btn = $holder.find(\".btn\");\n        const $input = $holder.find(\"input.amendmentActive\");\n        if ([\n            STATUS_ACCEPTED,\n            STATUS_MODIFIED_ACCEPTED,\n            STATUS_PROCESSED,\n            STATUS_ADOPTED,\n            STATUS_COMPLETED\n        ].indexOf(status) !== -1) {\n            $input.val(\"1\");\n            $btn.removeClass(\"btn-default\").addClass(\"btn-success\");\n        } else {\n            $input.val(\"0\");\n            $btn.addClass(\"btn-default\").removeClass(\"btn-success\");\n        }\n        this.reloadText();\n    }\n\n    private reloadText() {\n        const amendments = [];\n        this.$holder.find(\".amendmentActive[value='1']\").each((i, el) => {\n            const amendmentId = parseInt($(el).data('amendment-id'));\n            amendments.push({\n                id: amendmentId,\n                version: AmendmentStatuses.getAmendmentVersion(amendmentId),\n            });\n        });\n        const url = this.$holder.data(\"reload-url\").replace('DUMMY', JSON.stringify(amendments));\n        $.get(url, (data) => {\n            this.textarea.setText(data.text);\n\n            let collisions = '';\n            data.collisions.forEach(str => {\n                collisions += str;\n            });\n\n            this.$holder.find(\".collisionsHolder\").html(collisions);\n            if (data.collisions.length > 0) {\n                this.$holder.addClass(\"hasCollisions\");\n            } else {\n                this.$holder.removeClass(\"hasCollisions\");\n            }\n            this.hasUnsavedChanges = true;\n        });\n    }\n\n    public getDraftData() {\n        const amendmentToggles = [];\n        this.$holder.find(\".amendmentStatus\").each((id, el) => {\n            const $el = $(el);\n            if ($el.find(\".btn-success\").length > 0) {\n                amendmentToggles.push($el.data(\"amendment-id\"));\n            }\n        });\n        return {\n            amendmentToggles,\n            text: this.textarea.getContent(),\n            unchanged: this.textarea.getUnchangedContent(),\n        };\n    }\n\n    public onDraftChanged() {\n        this.hasUnsavedChanges = false;\n    }\n}\n\n/**\n * Singleton object\n */\nexport class MotionMergeAmendments {\n    public static activePopup: MotionMergeChangeTooltip = null;\n    public static currMouseX: number = null;\n    public static $form;\n\n    public $draftSavingPanel: JQuery;\n    private paragraphs: MotionMergeAmendmentsParagraph[] = [];\n    private hasUnsavedChanges = false;\n\n    constructor($form: JQuery) {\n        MotionMergeAmendments.$form = $form;\n\n        const draft = JSON.parse(document.getElementById('mergeDraft').getAttribute('value'));\n        AmendmentStatuses.init(draft.amendmentStatuses, draft.amendmentVersions, draft.amendmentVotingData);\n\n        $(\".paragraphWrapper\").each((i, el) => {\n            const $para = $(el);\n            $para.find(\".wysiwyg-textarea\").on(\"mousemove\", (ev) => {\n                MotionMergeAmendments.currMouseX = ev.offsetX;\n            });\n\n            this.paragraphs.push(new MotionMergeAmendmentsParagraph($para));\n        });\n\n        MotionMergeAmendments.$form.on(\"submit\", () => {\n            this.hasUnsavedChanges = true; // Enforce that the INPUT field is set\n            this.saveDraft(true);\n            $(window).off(\"beforeunload\", MotionMergeAmendments.onLeavePage);\n        });\n        $(window).on(\"beforeunload\", MotionMergeAmendments.onLeavePage);\n\n        this.initDraftSaving();\n    }\n\n    public static onLeavePage(): string {\n        return __t(\"std\", \"leave_changed_page\");\n    }\n\n    private setDraftDate(date: Date) {\n        this.$draftSavingPanel.find(\".lastSaved .none\").hide();\n\n        let options = {\n                year: 'numeric', month: 'numeric', day: 'numeric',\n                hour: 'numeric', minute: 'numeric',\n                hour12: false\n            },\n            lang: string = $(\"html\").attr(\"lang\"),\n            formatted = new Intl.DateTimeFormat(lang, options).format(date);\n\n        this.$draftSavingPanel.find(\".lastSaved .value\").text(formatted);\n    }\n\n    private saveDraft(onlyInput = false) {\n        if (this.paragraphs.filter(par => par.hasUnsavedChanges).length === 0 && !this.hasUnsavedChanges) {\n            console.log(\"Has no unsaved changes\");\n            return;\n        }\n\n        const data = {\n            \"amendmentStatuses\": AmendmentStatuses.getAllStatuses(),\n            \"amendmentVersions\": AmendmentStatuses.getAllVersions(),\n            \"amendmentVotingData\": AmendmentStatuses.getAllVotingData(),\n            \"paragraphs\": {},\n            \"sections\": {},\n        };\n        $(\".sectionType0\").each((i, el) => {\n            const $section = $(el),\n                sectionId = $section.data(\"section-id\");\n            data.sections[sectionId] = $section.find(\".form-control\").val();\n        });\n\n        this.paragraphs.forEach(para => {\n            data.paragraphs[para.sectionId + '_' + para.paragraphId] = para.getDraftData();\n        });\n        let isPublic: boolean = this.$draftSavingPanel.find('input[name=public]').prop('checked');\n\n        const dataStr = JSON.stringify(data);\n        document.getElementById('mergeDraft').setAttribute('value', dataStr);\n\n        if (!onlyInput) {\n            $.ajax({\n                type: \"POST\",\n                url: MotionMergeAmendments.$form.data('draftSaving'),\n                data: {\n                    'public': (isPublic ? 1 : 0),\n                    data: dataStr,\n                    '_csrf': MotionMergeAmendments.$form.find('> input[name=_csrf]').val()\n                },\n                success: (ret) => {\n                    if (ret['success']) {\n                        this.$draftSavingPanel.find('.savingError').addClass('hidden');\n                        this.setDraftDate(new Date(ret['date']));\n                        if (isPublic) {\n                            MotionMergeAmendments.$form.find('.publicLink').removeClass('hidden');\n                        } else {\n                            MotionMergeAmendments.$form.find('.publicLink').addClass('hidden');\n                        }\n                    } else {\n                        this.$draftSavingPanel.find('.savingError').removeClass('hidden');\n                        this.$draftSavingPanel.find('.savingError .errorNetwork').addClass('hidden');\n                        this.$draftSavingPanel.find('.savingError .errorHolder').text(ret['error']).removeClass('hidden');\n                    }\n\n                    this.paragraphs.forEach(par => par.onDraftChanged());\n                    this.hasUnsavedChanges = false;\n                },\n                error: () => {\n                    this.$draftSavingPanel.find('.savingError').removeClass('hidden');\n                    this.$draftSavingPanel.find('.savingError .errorNetwork').removeClass('hidden');\n                    this.$draftSavingPanel.find('.savingError .errorHolder').text('').addClass('hidden');\n                }\n            });\n        }\n    }\n\n    private initAutosavingDraft() {\n        let $toggle: JQuery = this.$draftSavingPanel.find('input[name=autosave]');\n\n        window.setInterval(() => {\n            if ($toggle.prop('checked')) {\n                this.saveDraft(false);\n            }\n        }, 5000);\n\n        if (localStorage) {\n            let state = localStorage.getItem('merging-draft-auto-save');\n            if (state !== null) {\n                $toggle.prop('checked', (state == '1'));\n            }\n        }\n        $toggle.change(() => {\n            let active: boolean = $toggle.prop('checked');\n            if (localStorage) {\n                localStorage.setItem('merging-draft-auto-save', (active ? '1' : '0'));\n            }\n        }).trigger('change');\n    }\n\n    private initDraftSaving() {\n        this.$draftSavingPanel = MotionMergeAmendments.$form.find('#draftSavingPanel');\n        this.$draftSavingPanel.find('.saveDraft').on('click', () => {\n            this.hasUnsavedChanges = true;\n            this.saveDraft(false);\n        });\n        this.$draftSavingPanel.find('input[name=public]').on('change', () => {\n            this.hasUnsavedChanges = true;\n            this.saveDraft(false)\n        });\n        this.initAutosavingDraft();\n\n        if (this.$draftSavingPanel.data(\"resumed-date\")) {\n            let date = new Date(this.$draftSavingPanel.data(\"resumed-date\"));\n            this.setDraftDate(date);\n        }\n\n        $(\".sectionType0\").change(() => this.hasUnsavedChanges = true);\n\n        $(\"#yii-debug-toolbar\").remove();\n    }\n}\n"]}