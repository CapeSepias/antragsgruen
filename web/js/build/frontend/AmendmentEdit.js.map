{"version":3,"sources":["frontend/AmendmentEdit.ts"],"names":["AmendmentEdit","$form","this","hasChanged","multiParagraphMode","data","lang","$","attr","find","change","editorialOpenerClicked","bind","initGlobalAlternative","datetimepicker","locale","format","initMultiParagraphMode","spmInit","$draftHint","draftMotionId","draftAmendmentId","DraftSavingEngine_1","DraftSavingEngine","on","window","off","onLeavePage","prototype","$holder","$textarea","prop","removeClass","undefined","CKEDITOR","instances","editor_1","AntragsgruenEditor_1","AntragsgruenEditor","parents","submit","parent","val","getEditor","getData","onContentChanged","addClass","_this","each","i","el","ckeditor","plugins","lite","findPlugin","acceptAll","spmSetModifyable","$modified","$spmParagraphs","filter","length","spmOnParaClick","ev","$para","currentTarget","hasClass","editor","focus","spmRevert","preventDefault","stopPropagation","target","destroyInstanceById","html","spmInitNonSingleParas","click","$this","sectionId","paraNo","__t","exports"],"mappings":"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","file":"AmendmentEdit.js","sourcesContent":["import {AntragsgruenEditor} from \"../shared/AntragsgruenEditor\";\nimport {DraftSavingEngine} from \"../shared/DraftSavingEngine\";\n\nexport class AmendmentEdit {\n    private lang: string;\n    private $spmParagraphs: JQuery;\n    private hasChanged: boolean = false;\n\n    constructor(private $form: JQuery) {\n        let multiParagraphMode = $form.data(\"multi-paragraph-mode\");\n        if (typeof(multiParagraphMode) == \"undefined\") {\n            throw \"data-multi-paragraph-mode needs to be set\";\n        }\n\n        this.lang = $(\"html\").attr('lang');\n\n        this.$form.find(\".editorialChange input\").change(this.editorialOpenerClicked.bind(this)).change();\n        this.initGlobalAlternative();\n\n        $(\".input-group.date\").datetimepicker({\n            locale: this.lang,\n            format: 'L'\n        });\n\n        if (multiParagraphMode) {\n            this.initMultiParagraphMode();\n        } else {\n            this.spmInit();\n        }\n\n        let $draftHint = $(\"#draftHint\"),\n            draftMotionId = $draftHint.data(\"motion-id\"),\n            draftAmendmentId = $draftHint.data(\"amendment-id\");\n\n        new DraftSavingEngine($form, $draftHint, \"motion_\" + draftMotionId + \"_\" + draftAmendmentId);\n\n        $form.on(\"submit\", () => {\n            $(window).off(\"beforeunload\", AmendmentEdit.onLeavePage);\n        });\n    }\n\n    private initGlobalAlternative() {\n\n    }\n\n    private editorialOpenerClicked() {\n        let $holder = this.$form.find(\"#sectionHolderEditorial\"),\n            $textarea = $holder.find(\".texteditor\"),\n            active = this.$form.find(\".editorialChange input\").prop(\"checked\");\n\n        if (active) {\n            $holder.removeClass(\"hidden\");\n            if (CKEDITOR.instances['amendmentEditorial_wysiwyg'] === undefined) {\n                let editor: AntragsgruenEditor = new AntragsgruenEditor(\"amendmentEditorial_wysiwyg\");\n                $textarea.parents(\"form\").submit(() => {\n                    $textarea.parent().find(\"textarea.raw\").val(editor.getEditor().getData());\n                });\n                $(\"#\" + $textarea.attr(\"id\")).on('keypress', this.onContentChanged.bind(this));\n            }\n        } else {\n            $holder.addClass(\"hidden\");\n        }\n    }\n\n    /* Multi paragraph mode */\n\n    private initMultiParagraphMode() {\n        $(\".wysiwyg-textarea:not(#sectionHolderEditorial)\").each((i, el) => {\n            let $holder = $(el),\n                $textarea = $holder.find(\".texteditor\");\n\n            let editor: AntragsgruenEditor = new AntragsgruenEditor($textarea.attr(\"id\")),\n                ckeditor: editor = editor.getEditor();\n\n            $textarea.parents(\"form\").submit(() => {\n                $textarea.parent().find(\"textarea.raw\").val(ckeditor.getData());\n                if (typeof(ckeditor.plugins.lite) != 'undefined') {\n                    ckeditor.plugins.lite.findPlugin(ckeditor).acceptAll();\n                    $textarea.parent().find(\"textarea.consolidated\").val(ckeditor.getData());\n                }\n            });\n\n            // The editor doesn't trigger change-events when tracking changes is enabled, therefore this work-around\n            $(\"#\" + $textarea.attr(\"id\")).on('keypress', this.onContentChanged.bind(this));\n        });\n    }\n\n    /* Single paragraph mode */\n\n    private spmSetModifyable() {\n        let $modified = this.$spmParagraphs.filter(\".modified\");\n        if ($modified.length == 0) {\n            this.$spmParagraphs.addClass('modifyable');\n        } else {\n            this.$spmParagraphs.removeClass('modifyable');\n            $('input[name=modifiedParagraphNo]').val($modified.data(\"paragraph-no\"));\n            $('input[name=modifiedSectionId]').val($modified.parents(\".texteditorBox\").data(\"section-id\"));\n        }\n    }\n\n    private spmOnParaClick(ev) {\n        let $para = $(ev.currentTarget);\n        if (!$para.hasClass('modifyable')) {\n            return;\n        }\n        $para.addClass('modified');\n        this.spmSetModifyable();\n\n        let $textarea = $para.find(\".texteditor\"),\n            editor;\n        if (typeof(CKEDITOR.instances[$textarea.attr(\"id\")]) !== \"undefined\") {\n            editor = CKEDITOR.instances[$textarea.attr(\"id\")];\n        } else {\n            editor = (new AntragsgruenEditor($textarea.attr(\"id\"))).getEditor();\n        }\n        $textarea.attr(\"contenteditable\", \"true\");\n        $textarea.parents(\"form\").submit(() => {\n            $textarea.parent().find(\"textarea.raw\").val(editor.getData());\n            if (typeof(editor.plugins.lite) != 'undefined') {\n                editor.plugins.lite.findPlugin(editor).acceptAll();\n                $textarea.parent().find(\"textarea.consolidated\").val(editor.getData());\n            }\n        });\n\n        // The editor doesn't trigger change-events when tracking changes is enabled, therefore this work-around\n        $(\"#\" + $textarea.attr(\"id\")).on('keypress', this.onContentChanged.bind(this));\n\n        $textarea.focus();\n    }\n\n    private spmRevert(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        let $para = $(ev.target).parents(\".wysiwyg-textarea\"),\n            $textarea = $para.find(\".texteditor\"),\n            id = $textarea.attr(\"id\");\n\n        if (typeof(CKEDITOR.instances[$textarea.attr(\"id\")]) !== \"undefined\") {\n            AntragsgruenEditor.destroyInstanceById($textarea.attr(\"id\"));\n        }\n\n        $textarea.html($para.data(\"original\"));\n        $para.removeClass(\"modified\");\n        this.spmSetModifyable();\n    }\n\n    private spmInitNonSingleParas(i, el) {\n        let $holder = $(el),\n            $textarea = $holder.find(\".texteditor\");\n        if ($holder.hasClass(\"hidden\")) {\n            return;\n        }\n        let editor: editor = (new AntragsgruenEditor($textarea.attr(\"id\"))).getEditor();\n        $textarea.parents(\"form\").submit(() => {\n            $textarea.parent().find(\"textarea.raw\").val(editor.getData());\n            if (typeof(editor.plugins.lite) != 'undefined') {\n                editor.plugins.lite.findPlugin(editor).acceptAll();\n                $textarea.parent().find(\"textarea.consolidated\").val(editor.getData());\n            }\n        });\n\n        // The editor doesn't trigger change-events when tracking changes is enabled, therefore this work-around\n        $(\"#\" + $textarea.attr(\"id\")).on('keypress', this.onContentChanged.bind(this));\n    }\n\n    private spmInit() {\n        this.$spmParagraphs = $(\".wysiwyg-textarea.single-paragraph\");\n        this.$spmParagraphs.click(this.spmOnParaClick.bind(this));\n        this.$spmParagraphs.find(\".modifiedActions .revert\").click(this.spmRevert.bind(this));\n        this.spmSetModifyable();\n\n        // Amendment Reason\n        $(\".wysiwyg-textarea\").filter(\":not(.single-paragraph)\").each(this.spmInitNonSingleParas.bind(this));\n\n        $(\".texteditorBox\").each((i, el) => {\n            let $this = $(el),\n                sectionId = $this.data(\"section-id\"),\n                paraNo = $this.data(\"changed-para-no\");\n            if (paraNo > -1) {\n                $(\"#section_holder_\" + sectionId + \"_\" + paraNo).click();\n            }\n        });\n    }\n\n    public static onLeavePage(): string {\n        return __t(\"std\", \"leave_changed_page\");\n    }\n\n    public onContentChanged() {\n        if (!this.hasChanged) {\n            this.hasChanged = true;\n            if (!$(\"body\").hasClass('testing')) {\n                $(window).on(\"beforeunload\", AmendmentEdit.onLeavePage);\n            }\n        }\n    }\n}\n"]}