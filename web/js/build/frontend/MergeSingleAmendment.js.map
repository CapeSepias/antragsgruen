{"version":3,"sources":["frontend/MergeSingleAmendment.ts"],"names":["MergeSingleAmendment","_this","this","$form","$","$collissionHolder","click","ev","preventDefault","loadCollissions","each","$paragraph","find","change","val","addClass","removeClass","AntragsgruenEditor_1","AntragsgruenEditor","attr","prototype","url","data","sections","children","$this","hasClass","sectionId","replace","CKEDITOR","instances","getData","post","newSections","_csrf","collissionsLoaded","bind","html","console","log","$texteditors","length","i","el","scrollintoview","top_offset","hide","prop","show"],"mappings":"wFAEA,IAAAA,GAAA,WAII,QAAAA,KAAA,GAAAC,GAAAC,IACIA,MAAKC,MAAQC,EAAE,uBACfF,KAAKG,kBAAoBD,EAAE,+BAE3BA,EAAE,8BAA8BE,MAAM,SAACC,GACnCA,EAAGC,iBACHP,EAAKQ,oBAETL,EAAE,kCAAkCM,KAAK,WACrC,GAAIC,GAAaP,EAAEF,KACnBS,GAAWC,KAAK,yBAAyBC,OAAO,WACkB,KAA1DF,EAAWC,KAAK,iCAAiCE,MACjDH,EAAWI,SAAS,YAAYC,YAAY,cAE5CL,EAAWK,YAAY,YAAYD,SAAS,kBAIxDX,EAAE,gCAAgCM,KAAK,WACnC,GAAIO,GAAAC,mBAAmBd,EAAEF,MAAMiB,KAAK,SAqChD,MAjCYnB,GAAAoB,UAAAX,gBAAR,WACI,GAAIY,GAAMjB,EAAE,8BAA8BkB,KAAK,OAC3CC,IAEJnB,GAAE,yBAAyBoB,WAAWd,KAAK,WACvC,GAAIe,GAAQrB,EAAEF,KACd,IAAIuB,EAAMC,SAAS,oBAAqB,CACpC,GAAIC,GAAYF,EAAMN,KAAK,MAAMS,QAAQ,kBAAmB,GAC5DL,GAASI,GAAaE,SAASC,UAAUL,EAAMb,KAAK,eAAeO,KAAK,OAAOY,aAGvF3B,EAAE4B,KAAKX,GACHY,YAAeV,EACfW,MAAShC,KAAKC,MAAMS,KAAK,uBAAuBE,OACjDZ,KAAKiC,kBAAkBC,KAAKlC,QAG3BF,EAAAoB,UAAAe,kBAAR,SAA0BE,GACtBC,QAAQC,IAAIF,GAEZnC,KAAKG,kBAAkBgC,KAAKA,EAC5B,IAAIG,GAAetC,KAAKG,kBAAkBO,KAAK,wCAEvC4B,GAAaC,OAAS,IACtBD,EAAa9B,KAAK,SAACgC,EAAGC,GAClB,GAAI1B,GAAAC,mBAAmBd,EAAEuC,GAAIxB,KAAK,SAEtCf,EAAE,+BAA+BwC,gBAAgBC,YAAY,MAGjEzC,EAAE,8BAA8B0C,OAChC1C,EAAE,qBAAqB2C,KAAK,YAAY,GAAOC,QAE3DhD,IAEA,IAAIA","file":"MergeSingleAmendment.js","sourcesContent":["import {AntragsgruenEditor} from \"../shared/AntragsgruenEditor\";\n\nclass MergeSingleAmendment {\n    $collissionHolder: JQuery;\n    $form: JQuery;\n\n    constructor() {\n        this.$form = $(\"#amendmentMergeForm\");\n        this.$collissionHolder = $(\".amendmentCollissionsHolder\");\n\n        $(\".checkAmendmentCollissions\").click((ev) => {\n            ev.preventDefault();\n            this.loadCollissions();\n        });\n        $(\".affectedParagraphs .paragraph\").each(function () {\n            let $paragraph = $(this);\n            $paragraph.find(\".modifySelector input\").change(function () {\n                if ($paragraph.find(\".modifySelector input:checked\").val() == \"1\") {\n                    $paragraph.addClass(\"modified\").removeClass(\"unmodified\");\n                } else {\n                    $paragraph.removeClass(\"modified\").addClass(\"unmodified\");\n                }\n            });\n        });\n        $(\".affectedBlock > .texteditor\").each(function () {\n            new AntragsgruenEditor($(this).attr(\"id\"));\n        });\n    }\n\n    private loadCollissions() {\n        let url = $(\".checkAmendmentCollissions\").data(\"url\"),\n            sections = [];\n\n        $(\"#motionTextEditHolder\").children().each(function () {\n            let $this = $(this);\n            if ($this.hasClass(\"wysiwyg-textarea\")) {\n                let sectionId = $this.attr(\"id\").replace(\"section_holder_\", \"\");\n                sections[sectionId] = CKEDITOR.instances[$this.find(\".texteditor\").attr(\"id\")].getData();\n            }\n        });\n        $.post(url, {\n            'newSections': sections,\n            '_csrf': this.$form.find('> input[name=_csrf]').val()\n        }, this.collissionsLoaded.bind(this));\n    }\n\n    private collissionsLoaded(html) {\n        console.log(html);\n\n        this.$collissionHolder.html(html);\n        let $texteditors = this.$collissionHolder.find(\".amendmentOverrideBlock > .texteditor\");\n\n            if ($texteditors.length > 0) {\n                $texteditors.each((i, el) => {\n                    new AntragsgruenEditor($(el).attr(\"id\"));\n                });\n                $(\".amendmentCollissionsHolder\").scrollintoview({top_offset: -50});\n            }\n\n            $(\".checkAmendmentCollissions\").hide();\n            $(\".saveholder .save\").prop(\"disabled\", false).show();\n    }\n}\n\nnew MergeSingleAmendment();\n"]}