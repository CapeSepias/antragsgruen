{"version":3,"sources":["frontend/MergeSingleAmendment.ts"],"names":["MergeSingleAmendment","_this","this","editors","$form","$","$collissionHolder","$checkCollissions","$affectedParagraphs","click","ev","preventDefault","loadCollissions","each","i","el","initAffectedParagraph","submit","onSubmit","bind","prototype","$paragraph","find","change","val","addClass","removeClass","trigger","key","data","AntragsgruenEditor_1","AntragsgruenEditor","attr","url","sections","text","$el","modified","sectionId","paragraphNo","console","log","editor_1","getEditor","dataOrig","getData","plugins","lite","findPlugin","acceptAll","setData","undefined","post","newSections","_csrf","collissionsLoaded","html","$texteditors","length","scrollintoview","top_offset","hide","prop","show","$input"],"mappings":"wFAGA,IAAAA,GAAA,WAOI,QAAAA,KAAA,GAAAC,GAAAC,IAFQA,MAAAC,WAGJD,KAAKE,MAAQC,EAAE,uBACfH,KAAKI,kBAAoBD,EAAE,+BAC3BH,KAAKK,kBAAoBF,EAAE,8BAC3BH,KAAKM,oBAAsBH,EAAE,oCAE7BH,KAAKK,kBAAkBE,MAAM,SAACC,GAC1BA,EAAGC,iBACHV,EAAKW,oBAETV,KAAKM,oBAAoBK,KAAK,SAACC,EAAGC,GAC9Bd,EAAKe,sBAAsBD,KAE/Bb,KAAKE,MAAMa,OAAOf,KAAKgB,SAASC,KAAKjB,OA+F7C,MA5FYF,GAAAoB,UAAAJ,sBAAR,SAA8BD,GAC1B,GAAIM,GAAahB,EAAEU,EAEnBM,GAAWC,KAAK,yBAAyBC,OAAO,WACkB,KAA1DF,EAAWC,KAAK,iCAAiCE,MACjDH,EAAWI,SAAS,YAAYC,YAAY,cAE5CL,EAAWK,YAAY,YAAYD,SAAS,gBAEjDE,QAAQ,SAEX,IAAIC,GAAMP,EAAWQ,KAAK,cAAgB,IAAMR,EAAWQ,KAAK,eAChE3B,MAAKC,QAAQyB,GAAO,GAAIE,GAAAC,mBAAmBV,EAAWC,KAAK,gCAAgCU,KAAK,QAG5FhC,EAAAoB,UAAAR,gBAAR,WAAA,GAAAX,GAAAC,KACQ+B,EAAM/B,KAAKK,kBAAkBsB,KAAK,OAClCK,IAEJhC,MAAKM,oBAAoBK,KAAK,SAACC,EAAGC,GAC9B,GAIIoB,GAJAC,EAAM/B,EAAEU,GACRsB,EAAWD,EAAId,KAAK,iCAAiCE,MACrDc,EAAYF,EAAIP,KAAK,cACrBU,EAAcH,EAAIP,KAAK,eAG3B,IAAIQ,EAAU,CACVG,QAAQC,IAAIH,EAAY,IAAMC,EAC9B,IAAIG,GAAiBzC,EAAKE,QAAQmC,EAAY,IAAMC,GAAaI,YAC7DC,EAAWF,EAAOG,SACa,oBAAxBH,GAAOI,QAAY,MAC1BJ,EAAOI,QAAQC,KAAKC,WAAWN,GAAQO,YACvCd,EAAOO,EAAOG,UACdH,EAAOQ,QAAQN,IAEfT,EAAOO,EAAOG,cAGlBV,GAAOC,EAAIP,KAAK,sBAGqBsB,UAArCjB,EAASE,EAAIP,KAAK,iBAClBK,EAASE,EAAIP,KAAK,mBAEtBK,EAASE,EAAIP,KAAK,eAAeO,EAAIP,KAAK,iBAAmBM,IAYjE9B,EAAE+C,KAAKnB,GACHoB,YAAenB,EACfoB,MAASpD,KAAKE,MAAMkB,KAAK,uBAAuBE,OACjDtB,KAAKqD,kBAAkBpC,KAAKjB,QAG3BF,EAAAoB,UAAAmC,kBAAR,SAA0BC,GACtBhB,QAAQC,IAAIe,GAEZtD,KAAKI,kBAAkBkD,KAAKA,EAC5B,IAAIC,GAAevD,KAAKI,kBAAkBgB,KAAK,wCAE3CmC,GAAaC,OAAS,IACtBD,EAAa5C,KAAK,SAACC,EAAGC,GAClB,GAAIe,GAAAC,mBAAmB1B,EAAEU,GAAIiB,KAAK,SAEtC9B,KAAKI,kBAAkBqD,gBAAgBC,YAAY,MAGvD1D,KAAKK,kBAAkBsD,OACvBxD,EAAE,qBAAqByD,KAAK,YAAY,GAAOC,QAG3C/D,EAAAoB,UAAAF,SAAR,WAAA,GAAAjB,GAAAC,IACIA,MAAKM,oBAAoBK,KAAK,SAACC,EAAGC,GAC9B,GAAIM,GAAahB,EAAEU,GACfiD,EAAS3C,EAAWC,KAAK,gBAE7B,IAA8D,KAA1DD,EAAWC,KAAK,iCAAiCE,MAAc,CAC/D,GAAII,GAAMP,EAAWQ,KAAK,cAAgB,IAAMR,EAAWQ,KAAK,eAChEmC,GAAOxC,IAAIvB,EAAKE,QAAQyB,GAAKe,YAAYE,eAEzCmB,GAAOxC,IAAIH,EAAWQ,KAAK,2BAI3C7B,IAEA,IAAIA","file":"MergeSingleAmendment.js","sourcesContent":["import {AntragsgruenEditor} from \"../shared/AntragsgruenEditor\";\nimport editor = CKEDITOR.editor;\n\nclass MergeSingleAmendment {\n    private $collissionHolder: JQuery;\n    private $form: JQuery;\n    private $checkCollissions: JQuery;\n    private $affectedParagraphs: JQuery;\n    private editors: AntragsgruenEditor[] = [];\n\n    constructor() {\n        this.$form = $(\"#amendmentMergeForm\");\n        this.$collissionHolder = $(\".amendmentCollissionsHolder\");\n        this.$checkCollissions = $(\".checkAmendmentCollissions\");\n        this.$affectedParagraphs = $(\".affectedParagraphs > .paragraph\");\n\n        this.$checkCollissions.click((ev) => {\n            ev.preventDefault();\n            this.loadCollissions();\n        });\n        this.$affectedParagraphs.each((i, el) => {\n            this.initAffectedParagraph(el);\n        });\n        this.$form.submit(this.onSubmit.bind(this));\n    }\n\n    private initAffectedParagraph(el) {\n        let $paragraph = $(el);\n\n        $paragraph.find(\".modifySelector input\").change(function () {\n            if ($paragraph.find(\".modifySelector input:checked\").val() == \"1\") {\n                $paragraph.addClass(\"modified\").removeClass(\"unmodified\");\n            } else {\n                $paragraph.removeClass(\"modified\").addClass(\"unmodified\");\n            }\n        }).trigger(\"change\");\n\n        let key = $paragraph.data(\"section-id\") + \"_\" + $paragraph.data(\"paragraph-no\");\n        this.editors[key] = new AntragsgruenEditor($paragraph.find(\".affectedBlock > .texteditor\").attr(\"id\"));\n    }\n\n    private loadCollissions() {\n        let url = this.$checkCollissions.data(\"url\"),\n            sections = {};\n\n        this.$affectedParagraphs.each((i, el) => {\n            let $el = $(el),\n                modified = $el.find(\".modifySelector input:checked\").val(),\n                sectionId = $el.data(\"section-id\"),\n                paragraphNo = $el.data(\"paragraph-no\"),\n                text;\n\n            if (modified) {\n                console.log(sectionId + \"_\" + paragraphNo);\n                let editor: editor = this.editors[sectionId + \"_\" + paragraphNo].getEditor(),\n                    dataOrig = editor.getData();\n                if (typeof(editor.plugins.lite) != 'undefined') {\n                    editor.plugins.lite.findPlugin(editor).acceptAll();\n                    text = editor.getData();\n                    editor.setData(dataOrig);\n                } else {\n                    text = editor.getData();\n                }\n            } else {\n                text = $el.data(\"unchanged-amendment\");\n            }\n\n            if (sections[$el.data(\"section-id\")] === undefined) {\n                sections[$el.data(\"section-id\")] = {};\n            }\n            sections[$el.data(\"section-id\")][$el.data(\"paragraph-no\")] = text;\n        });\n\n        /*\n         $(\"#motionTextEditHolder\").children().each(function () {\n         let $this = $(this);\n         if ($this.hasClass(\"wysiwyg-textarea\")) {\n         let sectionId = $this.attr(\"id\").replace(\"section_holder_\", \"\");\n         sections[sectionId] = CKEDITOR.instances[$this.find(\".texteditor\").attr(\"id\")].getData();\n         }\n         });\n         */\n        $.post(url, {\n            'newSections': sections,\n            '_csrf': this.$form.find('> input[name=_csrf]').val()\n        }, this.collissionsLoaded.bind(this));\n    }\n\n    private collissionsLoaded(html) {\n        console.log(html);\n\n        this.$collissionHolder.html(html);\n        let $texteditors = this.$collissionHolder.find(\".amendmentOverrideBlock > .texteditor\");\n\n        if ($texteditors.length > 0) {\n            $texteditors.each((i, el) => {\n                new AntragsgruenEditor($(el).attr(\"id\"));\n            });\n            this.$collissionHolder.scrollintoview({top_offset: -50});\n        }\n\n        this.$checkCollissions.hide();\n        $(\".saveholder .save\").prop(\"disabled\", false).show();\n    }\n\n    private onSubmit() {\n        this.$affectedParagraphs.each((i, el) => {\n            let $paragraph = $(el),\n                $input = $paragraph.find(\".modifiedText\");\n\n            if ($paragraph.find(\".modifySelector input:checked\").val() == \"1\") {\n                let key = $paragraph.data(\"section-id\") + \"_\" + $paragraph.data(\"paragraph-no\");\n                $input.val(this.editors[key].getEditor().getData());\n            } else {\n                $input.val($paragraph.data(\"unchanged-amendment\"));\n            }\n        });\n    }\n}\n\nnew MergeSingleAmendment();\n"]}