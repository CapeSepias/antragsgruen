{"version":3,"sources":["frontend/ContentPageEdit.ts"],"names":["editor","CKEDITOR","ContentPageEdit","$page","this","$form","find","$textSaver","$textHolder","$editCaller","click","editCalled","bind","addClass","save","prototype","ev","_this","preventDefault","attr","inline","scayt_sLang","removePlugins","extraPlugins","uploadUrl","data","on","evt","val","focus","removeClass","$","post","getData","_csrf","ret","window","setTimeout","destroy","alert","each"],"mappings":"AAAA,IAAOA,OAASC,SAASD,OAEzBE,gBAAA,WAOI,SAAAA,EAAoBC,GAAAC,KAAAD,MAAAA,EAChBC,KAAKC,MAAQF,EAAMG,KAAK,UACxBF,KAAKG,WAAaH,KAAKC,MAAMC,KAAK,gBAClCF,KAAKI,YAAcJ,KAAKC,MAAMC,KAAK,iBACnCF,KAAKK,YAAcN,EAAMG,KAAK,iBAE9BF,KAAKK,YAAYC,MAAMN,KAAKO,WAAWC,KAAKR,OAC5CA,KAAKG,WAAWM,SAAS,UACzBT,KAAKG,WAAWD,KAAK,UAAUI,MAAMN,KAAKU,KAAKF,KAAKR,OA2C5D,OAxCYF,EAAAa,UAAAJ,WAAR,SAAmBK,GAAnB,IAAAC,EAAAb,KACIY,EAAGE,iBACHd,KAAKK,YAAYI,SAAS,UAC1BT,KAAKI,YAAYW,KAAK,kBAAmB,QAEzCf,KAAKJ,OAASC,SAASmB,OAAOhB,KAAKI,YAAYW,KAAK,OAChDE,YAAa,QACbC,cAAe,OACfC,aAAc,cACdC,UAAWpB,KAAKC,MAAMoB,KAAK,gBAE/BrB,KAAKJ,OAAO0B,GAAG,oBAAqB,SAACC,GACjCA,EAAIF,KAAkB,YAAO,IAAI,MACjCE,EAAIF,KAAkB,YAAS,MAAIR,EAAKZ,MAAMC,KAAK,uBAAuBsB,QAG9ExB,KAAKI,YAAYqB,QACjBzB,KAAKG,WAAWuB,YAAY,WAGxB5B,EAAAa,UAAAD,KAAR,SAAaE,GAAb,IAAAC,EAAAb,KACIY,EAAGE,iBAEHa,EAAEC,KAAK5B,KAAKC,MAAMc,KAAK,WACnBM,KAAQrB,KAAKJ,OAAOiC,UACpBC,MAAS9B,KAAKC,MAAMC,KAAK,uBAAuBsB,OACjD,SAACO,GACW,KAAPA,GACAC,OAAOC,WAAW,WACdpB,EAAKjB,OAAOsC,WACb,KACHrB,EAAKV,WAAWM,SAAS,UACzBI,EAAKT,YAAYW,KAAK,kBAAmB,SACzCF,EAAKR,YAAYqB,YAAY,WAE7BS,MAAM,8BAKtBrC,EA1DA,GA4DA6B,EAAE,gBAAgBS,KAAK,WACnB,IAAItC,gBAAgB6B,EAAE3B","file":"ContentPageEdit.js","sourcesContent":["import editor = CKEDITOR.editor;\n\nclass ContentPageEdit {\n    private $editCaller: JQuery;\n    private $textHolder: JQuery;\n    private $textSaver: JQuery;\n    private $form: JQuery;\n    private editor: editor;\n\n    constructor(private $page: JQuery) {\n        this.$form = $page.find('> form');\n        this.$textSaver = this.$form.find('> .textSaver');\n        this.$textHolder = this.$form.find('> .textHolder');\n        this.$editCaller = $page.find('> .editCaller');\n\n        this.$editCaller.click(this.editCalled.bind(this));\n        this.$textSaver.addClass(\"hidden\");\n        this.$textSaver.find('button').click(this.save.bind(this));\n    }\n\n    private editCalled(ev) {\n        ev.preventDefault();\n        this.$editCaller.addClass(\"hidden\");\n        this.$textHolder.attr('contenteditable', \"true\");\n\n        this.editor = CKEDITOR.inline(this.$textHolder.attr('id'), {\n            scayt_sLang: 'de_DE',\n            removePlugins: 'lite',\n            extraPlugins: 'uploadimage',\n            uploadUrl: this.$form.data('upload-url')\n        });\n        this.editor.on('fileUploadRequest', (evt) => {\n            evt.data['requestData']['foo'] = 'bar';\n            evt.data['requestData']['_csrf'] = this.$form.find('> input[name=_csrf]').val();\n        });\n\n        this.$textHolder.focus();\n        this.$textSaver.removeClass('hidden');\n    }\n\n    private save(ev) {\n        ev.preventDefault();\n\n        $.post(this.$form.attr('action'), {\n            'data': this.editor.getData(),\n            '_csrf': this.$form.find('> input[name=_csrf]').val()\n        }, (ret) => {\n            if (ret == '1') {\n                window.setTimeout(() => {\n                    this.editor.destroy();\n                }, 100);\n                this.$textSaver.addClass('hidden');\n                this.$textHolder.attr('contenteditable', 'false');\n                this.$editCaller.removeClass('hidden');\n            } else {\n                alert('Something went wrong...');\n            }\n        })\n\n    }\n}\n\n$('.contentPage').each(function () {\n    new ContentPageEdit($(this));\n});\n"]}