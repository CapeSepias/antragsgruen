{"version":3,"sources":["frontend/VotingBlock.ts"],"names":["VotingBlock","$element","this","$vueEl","find","allVotingData","data","votings","csrf","$","attr","console","log","widget","Vue","el","template","exports"],"mappings":"8HAIA,IAAAA,EAGI,SAAoBC,GAAAC,KAAAD,SAAAA,EAChB,IAAME,EAASD,KAAKD,SAASG,KAAK,kBAC5BC,EAAgBJ,EAASK,KAAK,UAC9BA,EAAO,CACTC,QAASF,EACTG,KAAMC,EAAE,QAAQL,KAAK,yBAAyBM,KAAK,YAEvDC,QAAQC,IAAI,gBAAiBP,EAAeF,GAE5CD,KAAKW,OAAS,IAAIC,IAAI,CAClBC,GAAIZ,EAAO,GACXa,SAAU,wIACVV,KAAIA,KAfHW,EAAAjB,YAAAA","file":"VotingBlock.js","sourcesContent":["import { VueConstructor } from 'vue';\n\ndeclare var Vue: VueConstructor;\n\nexport class VotingBlock {\n    private widget;\n\n    constructor(private $element: JQuery) {\n        const $vueEl = this.$element.find(\".currentVoting\");\n        const allVotingData = $element.data('voting');\n        const data = {\n            votings: allVotingData,\n            csrf: $(\"head\").find(\"meta[name=csrf-token]\").attr(\"content\") as string,\n        };\n        console.log(\"Voting data: \", allVotingData, $vueEl);\n\n        this.widget = new Vue({\n            el: $vueEl[0],\n            template: `<div class=\"currentVotings\"><voting-block-widget v-for=\"voting in votings\" :voting=\"voting\" :csrf=\"csrf\"></voting-block-widget></div>`,\n            data\n        });\n    }\n}\n"]}