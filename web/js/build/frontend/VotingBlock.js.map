{"version":3,"sources":["frontend/VotingBlock.js","frontend/VotingBlock.ts"],"names":["define","require","exports","Object","defineProperty","value","VotingBlock","[object Object]","$element","this","$vueEl","find","allVotingData","data","pollUrl","voteUrl","console","log","JSON","parse","stringify","widget","Vue","el","template","votings","pollingId","methods","vote","votingBlockId","itemType","itemId","postData","_csrf","$","attr","votes","url","replace","post","catch","err","alert","responseText","reloadData","get","error","startPolling","window","setInterval","clearInterval"],"mappings":"AAAAA,OAAO,CAAC,UAAW,YAAY,SAAUC,EAASC,GAC9C,aACAC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtDH,EAAQI,iBAAc,ECC1BJ,EAAAI,YAAA,MAGIC,YAAoBC,GAAAC,KAAAD,SAAAA,EAChB,MAAME,EAASD,KAAKD,SAASG,KAAK,kBAC5BC,EAAgBJ,EAASK,KAAK,UAC9BC,EAAUN,EAASK,KAAK,YACxBE,EAAUP,EAASK,KAAK,YAE9BG,QAAQC,IAAIC,KAAKC,MAAMD,KAAKE,UAAUR,KAEtCH,KAAKY,OAAS,IAAIC,IAAI,CAClBC,GAAIb,EAAO,GACXc,SAAU,8LAIVX,KAAI,KACO,CACHY,QAASb,EACTc,UAAW,OAGnBC,QAAS,CACLC,KAAM,SAAUC,EAAeC,EAAUC,EAAQH,GAC7C,MAAMI,EAAW,CACbC,MAAOC,EAAE,QAAQvB,KAAK,yBAAyBwB,KAAK,WACpDC,MAAO,CAAC,CACJN,SAAAA,EACAC,OAAAA,EACAH,KAAAA,KAGFP,EAASZ,KACT4B,EAAMtB,EACPuB,QAAQ,gBAAiBT,GACzBS,QAAQ,WAAYR,GACpBQ,QAAQ,SAAUP,GACvBG,EAAEK,KAAKF,EAAKL,GAAU,SAAUnB,GAC5BQ,EAAOI,QAAUZ,KAClB2B,OAAM,SAAUC,GACfC,MAAMD,EAAIE,kBAGlBC,WAAY,WACR,MAAMvB,EAASZ,KACfyB,EAAEW,IAAI/B,GAAS,SAAUD,GACrBQ,EAAOI,QAAUZ,KAClB2B,OAAM,SAAUC,GACfzB,QAAQ8B,MAAM,0CAA2CL,OAGjEM,aAAc,WACV,MAAM1B,EAASZ,KACfA,KAAKiB,UAAYsB,OAAOC,aAAY,WAChC5B,EAAOuB,eACR,OAGXrC,gBACIyC,OAAOE,cAAczC,KAAKiB,YAE9BnB,UACIE,KAAKsC","file":"VotingBlock.js","sourcesContent":[null,"import { VueConstructor } from 'vue';\n\ndeclare var Vue: VueConstructor;\n\nexport class VotingBlock {\n    private widget;\n\n    constructor(private $element: JQuery) {\n        const $vueEl = this.$element.find(\".currentVoting\");\n        const allVotingData = $element.data('voting');\n        const pollUrl = $element.data('url-poll');\n        const voteUrl = $element.data('url-vote');\n\n        console.log(JSON.parse(JSON.stringify(allVotingData)));\n\n        this.widget = new Vue({\n            el: $vueEl[0],\n            template: `\n                <div class=\"currentVotings\">\n                <voting-block-widget v-for=\"voting in votings\" :voting=\"voting\" @vote=\"vote\"></voting-block-widget>\n                </div>`,\n            data() {\n                return {\n                    votings: allVotingData,\n                    pollingId: null\n                };\n            },\n            methods: {\n                vote: function (votingBlockId, itemType, itemId, vote) {\n                    const postData = {\n                        _csrf: $(\"head\").find(\"meta[name=csrf-token]\").attr(\"content\") as string,\n                        votes: [{\n                            itemType,\n                            itemId,\n                            vote\n                        }]\n                    };\n                    const widget = this;\n                    const url = voteUrl\n                        .replace(/VOTINGBLOCKID/, votingBlockId)\n                        .replace(/ITEMTYPE/, itemType)\n                        .replace(/ITEMID/, itemId);\n                    $.post(url, postData, function (data) {\n                        widget.votings = data;\n                    }).catch(function (err) {\n                        alert(err.responseText);\n                    });\n                },\n                reloadData: function () {\n                    const widget = this;\n                    $.get(pollUrl, function (data) {\n                        widget.votings = data;\n                    }).catch(function (err) {\n                        console.error(\"Could not load voting data from backend\", err);\n                    });\n                },\n                startPolling: function () {\n                    const widget = this;\n                    this.pollingId = window.setInterval(function () {\n                        widget.reloadData();\n                    }, 3000);\n                }\n            },\n            beforeDestroy() {\n                window.clearInterval(this.pollingId)\n            },\n            created() {\n                this.startPolling()\n            }\n        });\n    }\n}\n"]}