{"version":3,"sources":["live/Client.ts"],"names":["Client","key","console","log","this","wamp","thruway","authmethods","onChallenge","challenge","method","Observable","create","observer","subscribe","msg","authMethod","next","topic","v","getInstance","singletonObject","prototype","getMotion","id","call","map","r","JSON","parse","exports"],"mappings":"yGAGA,IAAAA,EAAA,WAYI,SAAAA,EAAYC,GACRC,QAAQC,IAAIF,GACZG,KAAKC,KAAO,IAAIC,QAAQN,OAAO,sBAAuB,gBAClDO,aAAc,SAElBH,KAAKC,KAAKG,YAAY,SAASC,EAAWC,GAWtC,OAVAR,QAAQC,IAAI,IAAKQ,YACJA,WAAWC,OAAO,SAACC,GAC5BX,QAAQC,IAAI,KACZM,EAAUK,UAAU,SAACC,GACK,OAAlBA,EAAIC,aACJd,QAAQC,IAAIY,EAAK,aAAcd,GAC/BY,EAASI,KAAKhB,QAIZa,cAElBV,KAAKC,KAAKa,MAAM,iBAAiBJ,UAAU,SAACK,GAAM,OAAAjB,QAAQC,IAAIgB,KAOtE,OAlCkBnB,EAAAoB,YAAd,SAA0BnB,GAItB,OAH8B,MAA1BD,EAAOqB,kBACPrB,EAAOqB,gBAAkB,IAAIrB,EAAOC,IAEjCD,EAAOqB,iBA0BXrB,EAAAsB,UAAAC,UAAP,SAAiBC,GACb,OAAOpB,KAAKC,KAAKoB,KAAK,8BAA+BD,IAChDE,IAAI,SAACC,GAAW,OAAAC,KAAKC,MAAMF,EAAQ,KAAE,OAlC/B3B,EAAAqB,gBAA0B,KAoC7CrB,EArCA,GAAa8B,EAAA9B,OAAAA","file":"Client.js","sourcesContent":["declare let thruway: any;\ndeclare let Observable: any;\n\nexport class Client {\n    private static singletonObject: Client = null;\n\n    public static getInstance(key: string) {\n        if (Client.singletonObject == null) {\n            Client.singletonObject = new Client(key);\n        }\n        return Client.singletonObject;\n    }\n\n    protected wamp: any;\n\n    constructor(key: string) {\n        console.log(key);\n        this.wamp = new thruway.Client('ws://localhost:9090', 'antragsgruen', {\n            authmethods: ['jwt']\n        });\n        this.wamp.onChallenge(function(challenge, method) {\n            console.log(\"1\", Observable);\n            let observ = Observable.create((observer) => {\n                console.log(\"!\");\n                challenge.subscribe((msg) => {\n                    if (msg.authMethod == 'jwt') {\n                        console.log(msg, \"Returning \", key);\n                        observer.next(key);\n                    }\n                });\n            });\n            return observ.subscribe();\n        });\n        this.wamp.topic('example.topic').subscribe((v) => console.log(v));\n    }\n\n    public getMotion(id) {\n        return this.wamp.call('antragsgruen.rpc.getMotion', [id])\n            .map((r: any) => JSON.parse(r['args'][0]));\n    }\n}\n"]}