{"version":3,"sources":["backend/AmendmentChangeProposal.ts"],"names":["AmendmentChangeProposal","$widget","this","initElements","initStatusSetter","initCommentForm","initVotingBlock","initExplanation","submit","ev","preventDefault","prototype","$statusDetails","find","$visibilityInput","$votingStatusInput","$votingBlockId","context","data","saveUrl","attr","csrf","val","reinitAfterReload","statusChanged","commentsScrollBottom","addClass","selectlist","performCallWithReload","_this","$","post","ret","removeClass","window","setTimeout","$content","children","remove","append","alert","fail","notifyProposer","saveStatus","newVal","setStatus","visible","prop","votingBlockId","filter","on","currentTarget","init","trigger","bind","change","target","$commentList","scrollTop","scrollHeight","$commentWidget","saving","text","writeComment","_csrf","success","$comment","comment","dateFormatted","username","JSON","stringify","exports"],"mappings":"yGAAA,IAKAA,EAAA,WASI,SAAAA,EAAoBC,GAAAC,KAAAD,QAAAA,EAChBC,KAAKC,eACLD,KAAKE,mBACLF,KAAKG,kBACLH,KAAKI,kBACLJ,KAAKK,kBACLN,EAAQO,OAAO,SAAAC,GAAM,OAAAA,EAAGC,mBAuLhC,OApLYV,EAAAW,UAAAR,aAAR,WACID,KAAKU,eAAiBV,KAAKD,QAAQY,KAAK,kBACxCX,KAAKY,iBAAmBZ,KAAKD,QAAQY,KAAK,+BAC1CX,KAAKa,mBAAqBb,KAAKD,QAAQY,KAAK,4BAC5CX,KAAKc,eAAiBd,KAAKD,QAAQY,KAAK,6BACxCX,KAAKe,QAAUf,KAAKD,QAAQiB,KAAK,WACjChB,KAAKiB,QAAUjB,KAAKD,QAAQmB,KAAK,UACjClB,KAAKmB,KAAOnB,KAAKD,QAAQY,KAAK,qBAAqBS,OAG/CtB,EAAAW,UAAAY,kBAAR,WACIrB,KAAKC,eACLD,KAAKsB,gBACLtB,KAAKuB,uBACLvB,KAAKK,kBACLL,KAAKD,QAAQY,KAAK,aAAaa,SAAS,UACxCxB,KAAKD,QAAQY,KAAK,eAAec,cAG7B3B,EAAAW,UAAAiB,sBAAR,SAA8BV,GAA9B,IAAAW,EAAA3B,KACIgB,EAAY,MAAIhB,KAAKmB,KAErBS,EAAEC,KAAK7B,KAAKiB,QAASD,EAAM,SAACc,GAGxB,GAFAH,EAAK5B,QAAQyB,SAAS,aAAaO,YAAY,aAC/CC,OAAOC,WAAW,WAAM,OAAAN,EAAK5B,QAAQgC,YAAY,cAAc,KAC3DD,EAAa,QAAG,CAChB,IAAII,EAAWN,EAAEE,EAAU,MAC3BH,EAAK5B,QAAQoC,WAAWC,SACxBT,EAAK5B,QAAQsC,OAAOH,EAASC,YAC7BR,EAAKN,yBACES,EAAW,MAClBQ,MAAMR,EAAW,OAEjBQ,MAAM,sBAEXC,KAAK,WACJD,MAAM,qBAINxC,EAAAW,UAAA+B,eAAR,WACIxC,KAAK0B,uBACDc,eAAkB,OAIlB1C,EAAAW,UAAAgC,WAAR,WACI,IAAIC,EAAS1C,KAAKD,QAAQY,KAAK,yCAAyCS,MACpEJ,GACA2B,UAAWD,EACXE,QAAU5C,KAAKY,iBAAiBiC,KAAK,WAAa,EAAI,EACtDC,cAAe9C,KAAKc,eAAeM,OA1EvB,IA6EZsB,IACA1B,EAAsB,gBAAIhB,KAAKD,QAAQY,KAAK,0BAA0BS,OA5EtD,IA8EhBsB,IACA1B,EAAsB,gBAAIhB,KAAKD,QAAQY,KAAK,oCAAoCS,OA9E/D,IAgFjBsB,IACA1B,EAAsB,gBAAIhB,KAAKD,QAAQY,KAAK,+BAA+BS,OAnFnE,IAqFRsB,IACA1B,EAAmB,aAAIhB,KAAKa,mBAAmBkC,OAAO,YAAY3B,OAE5C,OAAtBJ,EAAK8B,gBACL9B,EAAuB,iBAAIhB,KAAKD,QAAQY,KAAK,6BAA6BS,OAG1EpB,KAAKD,QAAQY,KAAK,oCAAoCkC,KAAK,aAC3D7B,EAA0B,oBAAIhB,KAAKD,QAAQY,KAAK,sCAAsCS,OAG1FpB,KAAK0B,sBAAsBV,IAGvBlB,EAAAW,UAAAa,cAAR,WACI,IAAIoB,EAAS1C,KAAKD,QAAQY,KAAK,yCAAyCS,MACxEpB,KAAKU,eAAec,SAAS,UAC7BxB,KAAKU,eAAeqC,OAAO,WAAaL,GAAQX,YAAY,UAC9C,GAAVW,EACA1C,KAAKD,QAAQyB,SAAS,YAEtBxB,KAAKD,QAAQgC,YAAY,aAIzBjC,EAAAW,UAAAP,iBAAR,WAAA,IAAAyB,EAAA3B,KACIA,KAAKD,QAAQiD,GAAG,SAAU,gCAAiC,SAACzC,EAAIS,GACvDY,EAAErB,EAAG0C,eAAeJ,KAAK,aAG9BlB,EAAKL,gBACDN,IAAsB,IAAdA,EAAKkC,MAGjBvB,EAAK5B,QAAQyB,SAAS,gBAE1BxB,KAAKD,QAAQY,KAAK,iCAAiCwC,QAAQ,UAAWD,MAAQ,IAE9ElD,KAAKD,QAAQiD,GAAG,eAAgB,kBAAmB,WAC/CrB,EAAK5B,QAAQyB,SAAS,eAG1BxB,KAAKD,QAAQiD,GAAG,wBAAyB,wBAAyB,WAC9DrB,EAAK5B,QAAQyB,SAAS,eAG1BxB,KAAKD,QAAQiD,GAAG,QAAS,iBAAkBhD,KAAKyC,WAAWW,KAAKpD,OAChEA,KAAKD,QAAQiD,GAAG,QAAS,kBAAmBhD,KAAKwC,eAAeY,KAAKpD,QAGjEF,EAAAW,UAAAL,gBAAR,WAAA,IAAAuB,EAAA3B,KACIA,KAAKD,QAAQiD,GAAG,wBAAyB,iBAAkB,WACvDrB,EAAK5B,QAAQyB,SAAS,aACW,OAA7BG,EAAKb,eAAeM,MACpBO,EAAK5B,QAAQY,KAAK,aAAaoB,YAAY,UAE3CJ,EAAK5B,QAAQY,KAAK,aAAaa,SAAS,YAGhDxB,KAAKD,QAAQY,KAAK,aAAaa,SAAS,WAGpC1B,EAAAW,UAAAJ,gBAAR,WAAA,IAAAsB,EAAA3B,KACIA,KAAKD,QAAQY,KAAK,oCAAoC0C,OAAO,SAAC9C,GACvDqB,EAAErB,EAAG+C,QAAQT,KAAK,WAClBlB,EAAK5B,QAAQY,KAAK,6BAA6BoB,YAAY,UAE3DJ,EAAK5B,QAAQY,KAAK,6BAA6Ba,SAAS,YAG3DxB,KAAKD,QAAQY,KAAK,oCAAoCkC,KAAK,WAC3D7C,KAAKD,QAAQY,KAAK,6BAA6BoB,YAAY,UAE3D/B,KAAKD,QAAQY,KAAK,6BAA6Ba,SAAS,WAIxD1B,EAAAW,UAAAc,qBAAR,WACI,IAAIgC,EAAevD,KAAKD,QAAQY,KAAK,qCACrC4C,EAAa,GAAGC,UAAYD,EAAa,GAAGE,cAGxC3D,EAAAW,UAAAN,gBAAR,WAAA,IAAAwB,EAAA3B,KACIA,KAAKD,QAAQiD,GAAG,QAAS,8BAA+B,WACpD,IAAIU,EAAiB/B,EAAK5B,QAAQY,KAAK,wBACnCgD,GAAS,EACTJ,EAAeG,EAAe/C,KAAK,gBACnCiD,EAAOF,EAAe/C,KAAK,YAAYS,MAE/B,IAARwC,GAAcD,IAIlBA,GAAS,EACT/B,EAAEC,KAAKF,EAAKV,SACR4C,aAAcD,EACdE,MAAOnC,EAAKR,MACb,SAACZ,GACA,GAAIA,EAAGwD,QAAS,CACZ,IAAIC,EAAWpC,EAAE,kHACjBoC,EAASrD,KAAK,SAASiD,KAAKrD,EAAG0D,QAAQC,eACvCF,EAASrD,KAAK,SAASiD,KAAKrD,EAAG0D,QAAQE,UACvCH,EAASrD,KAAK,YAAYiD,KAAKrD,EAAG0D,QAAQL,MAC1CL,EAAalB,OAAO2B,GACpBN,EAAe/C,KAAK,YAAYS,IAAI,IACpCmC,EAAa,GAAGC,UAAYD,EAAa,GAAGE,kBAE5CnB,MAAM,mBAAqB8B,KAAKC,UAAU9D,IAE9CoD,GAAS,IACVpB,KAAK,WACJD,MAAM,kBACNqB,GAAS,OAGjB3D,KAAKuB,wBAEbzB,EAtMA,GAAawE,EAAAxE,wBAAAA","file":"AmendmentChangeProposal.js","sourcesContent":["const STATUS_REFERRED = 10;\nconst STATUS_VOTE = 11;\nconst STATUS_OBSOLETED_BY = 22;\nconst STATUS_CUSTOM_STRING = 23;\n\nexport class AmendmentChangeProposal {\n    private $statusDetails: JQuery;\n    private $visibilityInput: JQuery;\n    private $votingStatusInput: JQuery;\n    private $votingBlockId: JQuery;\n    private saveUrl: string;\n    private context: string;\n    private csrf: string;\n\n    constructor(private $widget: JQuery) {\n        this.initElements();\n        this.initStatusSetter();\n        this.initCommentForm();\n        this.initVotingBlock();\n        this.initExplanation();\n        $widget.submit(ev => ev.preventDefault());\n    }\n\n    private initElements() {\n        this.$statusDetails = this.$widget.find('.statusDetails');\n        this.$visibilityInput = this.$widget.find('input[name=proposalVisible]');\n        this.$votingStatusInput = this.$widget.find('input[name=votingStatus]');\n        this.$votingBlockId = this.$widget.find('input[name=votingBlockId]');\n        this.context = this.$widget.data('context');\n        this.saveUrl = this.$widget.attr('action');\n        this.csrf = this.$widget.find('input[name=_csrf]').val();\n    }\n\n    private reinitAfterReload() {\n        this.initElements();\n        this.statusChanged();\n        this.commentsScrollBottom();\n        this.initExplanation();\n        this.$widget.find('.newBlock').addClass('hidden');\n        this.$widget.find('.selectlist').selectlist();\n    }\n\n    private performCallWithReload(data: object) {\n        data['_csrf'] = this.csrf;\n\n        $.post(this.saveUrl, data, (ret) => {\n            this.$widget.addClass('showSaved').removeClass('isChanged');\n            window.setTimeout(() => this.$widget.removeClass('showSaved'), 2000);\n            if (ret['success']) {\n                let $content = $(ret['html']);\n                this.$widget.children().remove();\n                this.$widget.append($content.children());\n                this.reinitAfterReload();\n            } else if (ret['error']) {\n                alert(ret['error']);\n            } else {\n                alert('An error ocurred');\n            }\n        }).fail(() => {\n            alert('Could not save');\n        });\n    }\n\n    private notifyProposer() {\n        this.performCallWithReload({\n            'notifyProposer': '1'\n        });\n    }\n\n    private saveStatus() {\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        let data = {\n            setStatus: newVal,\n            visible: (this.$visibilityInput.prop('checked') ? 1 : 0),\n            votingBlockId: this.$votingBlockId.val(),\n        };\n\n        if (newVal == STATUS_REFERRED) {\n            data['proposalComment'] = this.$widget.find('input[name=referredTo]').val();\n        }\n        if (newVal == STATUS_OBSOLETED_BY) {\n            data['proposalComment'] = this.$widget.find('input[name=obsoletedByAmendment]').val();\n        }\n        if (newVal == STATUS_CUSTOM_STRING) {\n            data['proposalComment'] = this.$widget.find('input[name=statusCustomStr]').val();\n        }\n        if (newVal == STATUS_VOTE) {\n            data['votingStatus'] = this.$votingStatusInput.filter(':checked').val();\n        }\n        if (data.votingBlockId == 'NEW') {\n            data['votingBlockTitle'] = this.$widget.find('input[name=newBlockTitle]').val();\n        }\n\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            data['proposalExplanation'] = this.$widget.find('textarea[name=proposalExplanation]').val();\n        }\n\n        this.performCallWithReload(data);\n    }\n\n    private statusChanged() {\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        this.$statusDetails.addClass('hidden');\n        this.$statusDetails.filter('.status_' + newVal).removeClass('hidden');\n        if (newVal == 0) {\n            this.$widget.addClass('noStatus');\n        } else {\n            this.$widget.removeClass('noStatus');\n        }\n    }\n\n    private initStatusSetter() {\n        this.$widget.on('change', '.statusForm input[type=radio]', (ev, data) => {\n            if (!$(ev.currentTarget).prop('checked')) {\n                return;\n            }\n            this.statusChanged();\n            if (data && data.init === true) {\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n        this.$widget.find('.statusForm input[type=radio]').trigger('change', {'init': true});\n\n        this.$widget.on('change keyup', 'input, textarea', () => {\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('changed.fu.selectlist', '#obsoletedByAmendment', () => {\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('click', '.saving button', this.saveStatus.bind(this));\n        this.$widget.on('click', '.notifyProposer', this.notifyProposer.bind(this));\n    }\n\n    private initVotingBlock() {\n        this.$widget.on('changed.fu.selectlist', '#votingBlockId', () => {\n            this.$widget.addClass('isChanged');\n            if (this.$votingBlockId.val() == 'NEW') {\n                this.$widget.find(\".newBlock\").removeClass('hidden');\n            } else {\n                this.$widget.find(\".newBlock\").addClass('hidden');\n            }\n        });\n        this.$widget.find('.newBlock').addClass('hidden');\n    }\n\n    private initExplanation() {\n        this.$widget.find('input[name=setPublicExplanation]').change((ev) => {\n           if ($(ev.target).prop('checked')) {\n               this.$widget.find('section.publicExplanation').removeClass('hidden');\n           } else {\n               this.$widget.find('section.publicExplanation').addClass('hidden');\n           }\n        });\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            this.$widget.find('section.publicExplanation').removeClass('hidden');\n        } else {\n            this.$widget.find('section.publicExplanation').addClass('hidden');\n        }\n    }\n\n    private commentsScrollBottom() {\n        let $commentList = this.$widget.find('.proposalCommentForm .commentList');\n        $commentList[0].scrollTop = $commentList[0].scrollHeight;\n    }\n\n    private initCommentForm() {\n        this.$widget.on('click', '.proposalCommentForm button', () => {\n            let $commentWidget = this.$widget.find('.proposalCommentForm'),\n                saving = false,\n                $commentList = $commentWidget.find('.commentList'),\n                text = $commentWidget.find('textarea').val();\n\n            if (text == '' || saving) {\n                return;\n            }\n\n            saving = true;\n            $.post(this.saveUrl, {\n                writeComment: text,\n                _csrf: this.csrf\n            }, (ev) => {\n                if (ev.success) {\n                    let $comment = $('<li><div class=\"header\"><div class=\"date\"></div><div class=\"name\"></div></div><div class=\"comment\"></div></li>');\n                    $comment.find('.date').text(ev.comment.dateFormatted);\n                    $comment.find('.name').text(ev.comment.username);\n                    $comment.find('.comment').text(ev.comment.text);\n                    $commentList.append($comment);\n                    $commentWidget.find('textarea').val('');\n                    $commentList[0].scrollTop = $commentList[0].scrollHeight;\n                } else {\n                    alert('Could not save: ' + JSON.stringify(ev));\n                }\n                saving = false;\n            }).fail(() => {\n                alert('Could not save');\n                saving = false;\n            });\n        });\n        this.commentsScrollBottom();\n    }\n}\n"]}