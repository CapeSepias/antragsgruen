{"version":3,"sources":["backend/AmendmentChangeProposal.ts"],"names":["AmendmentChangeProposal","$widget","this","$statusDetails","find","$visibilityInput","$votingStatusInput","$votingBlockId","initStatusSetter","initCommentForm","initVotingBlock","saveUrl","attr","csrf","val","submit","ev","preventDefault","prototype","saveStatus","_this","newVal","data","setStatus","visible","prop","votingBlockId","_csrf","filter","$","post","ret","addClass","removeClass","window","setTimeout","location","reload","fail","alert","change","currentTarget","trigger","on","click","bind","$commentWidget","saving","$commentList","text","writeComment","success","$comment","comment","dateFormatted","username","append","scrollTop","scrollHeight","JSON","stringify","exports"],"mappings":"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","file":"AmendmentChangeProposal.js","sourcesContent":["const STATUS_REFERRED = 10;\nconst STATUS_VOTE = 11;\nconst STATUS_OBSOLETED_BY = 22;\n\nexport class AmendmentChangeProposal {\n    private $statusDetails: JQuery;\n    private $visibilityInput: JQuery;\n    private $votingStatusInput: JQuery;\n    private $votingBlockId: JQuery;\n    private saveUrl: string;\n    private csrf: string;\n\n    constructor(private $widget: JQuery) {\n        this.$statusDetails = $widget.find('.statusDetails');\n        this.$visibilityInput = $widget.find('input[name=proposalVisible]');\n        this.$votingStatusInput = $widget.find('input[name=votingStatus]');\n        this.$votingBlockId = $widget.find('input[name=votingBlockId]');\n        this.initStatusSetter();\n        this.initCommentForm();\n        this.initVotingBlock();\n        this.saveUrl = $widget.attr('action');\n        this.csrf = $widget.find('input[name=_csrf]').val();\n        $widget.submit(ev => ev.preventDefault());\n    }\n\n    private saveStatus() {\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        let data = {\n            setStatus: newVal,\n            visible: (this.$visibilityInput.prop('checked') ? 1 : 0),\n            votingBlockId: this.$votingBlockId.val(),\n            _csrf: this.csrf\n        };\n\n        if (newVal == STATUS_REFERRED) {\n            data['proposalComment'] = this.$widget.find('input[name=referredTo]').val();\n        }\n        if (newVal == STATUS_OBSOLETED_BY) {\n            data['proposalComment'] = this.$widget.find('input[name=obsoletedByAmendment]').val();\n        }\n        if (newVal == STATUS_VOTE) {\n            data['votingStatus'] = this.$votingStatusInput.filter(':checked').val();\n        }\n        if (data.votingBlockId == 'NEW') {\n            data['votingBlockTitle'] = this.$widget.find('input[name=newBlockTitle]').val();\n        }\n\n        $.post(this.saveUrl, data, (ret) => {\n            this.$widget.find('.saving').addClass('hidden');\n            this.$widget.find('.saved').removeClass('hidden');\n            window.setTimeout(() => this.$widget.find('.saved').addClass('hidden'), 2000);\n            if (ret['needsReload']) {\n                window.location.reload();\n            }\n        }).fail(() => {\n            alert(\"Could not save\");\n        });\n    }\n\n    private initStatusSetter() {\n        this.$widget.find(\".statusForm input[type=radio]\").change((ev) => {\n            if (!$(ev.currentTarget).prop('checked')) {\n                return;\n            }\n            let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n            this.$statusDetails.addClass('hidden');\n            this.$statusDetails.filter('.status_' + newVal).removeClass('hidden');\n            this.$widget.find('.saving').removeClass('hidden');\n        }).trigger('change');\n\n        this.$widget.find(\"input\").change(() => {\n            this.$widget.find('.saving').removeClass('hidden');\n        });\n\n        this.$widget.find('#obsoletedByAmendment').on('changed.fu.selectlist', () => {\n            this.$widget.find('.saving').removeClass('hidden');\n        });\n\n        this.$widget.find('.saving').addClass('hidden');\n        this.$widget.find('.saving button').click(this.saveStatus.bind(this));\n    }\n\n    private initVotingBlock() {\n        this.$widget.find('#votingBlockId').on('changed.fu.selectlist', () => {\n            this.$widget.find('.saving').removeClass('hidden');\n            if (this.$votingBlockId.val() == 'NEW') {\n                this.$widget.find(\".newBlock\").removeClass('hidden');\n            } else {\n                this.$widget.find(\".newBlock\").addClass('hidden');\n            }\n        });\n        this.$widget.find(\".newBlock\").addClass('hidden');\n    }\n\n    private initCommentForm() {\n        let $commentWidget = this.$widget.find('.proposalCommentForm'),\n            saving = false,\n            $commentList = $commentWidget.find('.commentList');\n\n        $commentWidget.find('button').click(() => {\n            let text = $commentWidget.find('textarea').val();\n            if (text == '' || saving) {\n                return;\n            }\n\n            saving = true;\n            $.post(this.saveUrl, {\n                writeComment: text,\n                _csrf: this.csrf\n            }, (ev) => {\n                if (ev.success) {\n                    let $comment = $('<li><div class=\"header\"><div class=\"date\"></div><div class=\"name\"></div></div><div class=\"comment\"></div></li>');\n                    $comment.find('.date').text(ev.comment.dateFormatted);\n                    $comment.find('.name').text(ev.comment.username);\n                    $comment.find('.comment').text(ev.comment.text);\n                    $commentList.append($comment);\n                    $commentWidget.find('textarea').val('');\n                    $commentList[0].scrollTop = $commentList[0].scrollHeight;\n                } else {\n                    alert('Could not save: ' + JSON.stringify(ev));\n                }\n                saving = false;\n            }).fail(() => {\n                alert(\"Could not save\");\n                saving = false;\n            });\n        });\n        $commentList[0].scrollTop = $commentList[0].scrollHeight;\n    }\n}\n"]}