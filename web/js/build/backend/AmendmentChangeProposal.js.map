{"version":3,"sources":["backend/AmendmentChangeProposal.ts"],"names":["AmendmentChangeProposal","$widget","this","initElements","initStatusSetter","initCommentForm","initVotingBlock","submit","ev","preventDefault","prototype","$statusDetails","find","$visibilityInput","$votingStatusInput","$votingBlockId","context","data","saveUrl","attr","csrf","val","reinitAfterReload","statusChanged","commentsScrollBottom","addClass","selectlist","saveStatus","_this","newVal","setStatus","visible","prop","votingBlockId","_csrf","filter","$","post","ret","removeClass","window","setTimeout","$content","children","remove","append","alert","fail","on","currentTarget","init","trigger","bind","$commentList","scrollTop","scrollHeight","$commentWidget","saving","text","writeComment","success","$comment","comment","dateFormatted","username","JSON","stringify","exports"],"mappings":"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","file":"AmendmentChangeProposal.js","sourcesContent":["const STATUS_REFERRED = 10;\nconst STATUS_VOTE = 11;\nconst STATUS_OBSOLETED_BY = 22;\n\nexport class AmendmentChangeProposal {\n    private $statusDetails: JQuery;\n    private $visibilityInput: JQuery;\n    private $votingStatusInput: JQuery;\n    private $votingBlockId: JQuery;\n    private saveUrl: string;\n    private context: string;\n    private csrf: string;\n\n    constructor(private $widget: JQuery) {\n        this.initElements();\n        this.initStatusSetter();\n        this.initCommentForm();\n        this.initVotingBlock();\n        $widget.submit(ev => ev.preventDefault());\n    }\n\n    private initElements() {\n        this.$statusDetails = this.$widget.find('.statusDetails');\n        this.$visibilityInput = this.$widget.find('input[name=proposalVisible]');\n        this.$votingStatusInput = this.$widget.find('input[name=votingStatus]');\n        this.$votingBlockId = this.$widget.find('input[name=votingBlockId]');\n        this.context = this.$widget.data('context');\n        this.saveUrl = this.$widget.attr('action');\n        this.csrf = this.$widget.find('input[name=_csrf]').val();\n    }\n\n    private reinitAfterReload() {\n        this.initElements();\n        this.statusChanged();\n        this.commentsScrollBottom();\n        this.$widget.find('.newBlock').addClass('hidden');\n        this.$widget.find('.selectlist').selectlist();\n    }\n\n    private saveStatus() {\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        let data = {\n            setStatus: newVal,\n            visible: (this.$visibilityInput.prop('checked') ? 1 : 0),\n            votingBlockId: this.$votingBlockId.val(),\n            _csrf: this.csrf\n        };\n\n        if (newVal == STATUS_REFERRED) {\n            data['proposalComment'] = this.$widget.find('input[name=referredTo]').val();\n        }\n        if (newVal == STATUS_OBSOLETED_BY) {\n            data['proposalComment'] = this.$widget.find('input[name=obsoletedByAmendment]').val();\n        }\n        if (newVal == STATUS_VOTE) {\n            data['votingStatus'] = this.$votingStatusInput.filter(':checked').val();\n        }\n        if (data.votingBlockId == 'NEW') {\n            data['votingBlockTitle'] = this.$widget.find('input[name=newBlockTitle]').val();\n        }\n        if (this.$widget.find('input[name=notifyProposer]').prop('checked')) {\n            data['notifyProposer'] = true;\n        }\n\n        $.post(this.saveUrl, data, (ret) => {\n            this.$widget.addClass('showSaved').removeClass('showSaving');\n            window.setTimeout(() => this.$widget.removeClass('showSaved'), 2000);\n            if (ret['success']) {\n                let $content = $(ret['html']);\n                this.$widget.children().remove();\n                this.$widget.append($content.children());\n                this.reinitAfterReload();\n            } else if (ret['error']) {\n                alert(ret['error']);\n            } else {\n                alert('An error ocurred');\n            }\n        }).fail(() => {\n            alert(\"Could not save\");\n        });\n    }\n\n    private statusChanged() {\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        this.$statusDetails.addClass('hidden');\n        this.$statusDetails.filter('.status_' + newVal).removeClass('hidden');\n        if (newVal == 0) {\n            this.$widget.addClass('noStatus');\n        } else {\n            this.$widget.removeClass('noStatus');\n        }\n    }\n\n    private initStatusSetter() {\n        this.$widget.on('change', '.statusForm input[type=radio]', (ev, data) => {\n            if (!$(ev.currentTarget).prop('checked')) {\n                return;\n            }\n            this.statusChanged();\n            if (data && data.init === true) {\n                return;\n            }\n            this.$widget.addClass('showSaving');\n        });\n        this.$widget.find('.statusForm input[type=radio]').trigger('change', {'init': true});\n\n        this.$widget.on('change', 'input', () => {\n            this.$widget.addClass('showSaving');\n        });\n\n        this.$widget.on('changed.fu.selectlist', '#obsoletedByAmendment', () => {\n            this.$widget.addClass('showSaving');\n        });\n\n        this.$widget.on('click', '.saving button', this.saveStatus.bind(this));\n    }\n\n    private initVotingBlock() {\n        this.$widget.on('changed.fu.selectlist', '#votingBlockId', () => {\n            this.$widget.addClass('showSaving');\n            if (this.$votingBlockId.val() == 'NEW') {\n                this.$widget.find(\".newBlock\").removeClass('hidden');\n            } else {\n                this.$widget.find(\".newBlock\").addClass('hidden');\n            }\n        });\n        this.$widget.find(\".newBlock\").addClass('hidden');\n    }\n\n    private commentsScrollBottom() {\n        let $commentList = this.$widget.find('.proposalCommentForm .commentList');\n        $commentList[0].scrollTop = $commentList[0].scrollHeight;\n    }\n\n    private initCommentForm() {\n        this.$widget.on('click', '.proposalCommentForm button', () => {\n            let $commentWidget = this.$widget.find('.proposalCommentForm'),\n                saving = false,\n                $commentList = $commentWidget.find('.commentList'),\n                text = $commentWidget.find('textarea').val();\n\n            if (text == '' || saving) {\n                return;\n            }\n\n            saving = true;\n            $.post(this.saveUrl, {\n                writeComment: text,\n                _csrf: this.csrf\n            }, (ev) => {\n                if (ev.success) {\n                    let $comment = $('<li><div class=\"header\"><div class=\"date\"></div><div class=\"name\"></div></div><div class=\"comment\"></div></li>');\n                    $comment.find('.date').text(ev.comment.dateFormatted);\n                    $comment.find('.name').text(ev.comment.username);\n                    $comment.find('.comment').text(ev.comment.text);\n                    $commentList.append($comment);\n                    $commentWidget.find('textarea').val('');\n                    $commentList[0].scrollTop = $commentList[0].scrollHeight;\n                } else {\n                    alert('Could not save: ' + JSON.stringify(ev));\n                }\n                saving = false;\n            }).fail(() => {\n                alert('Could not save');\n                saving = false;\n            });\n        });\n        this.commentsScrollBottom();\n    }\n}\n"]}