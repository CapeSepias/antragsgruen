{"version":3,"sources":["backend/AmendmentChangeProposal.ts"],"names":["AmendmentChangeProposal","$widget","this","initElements","initOpener","initStatusSetter","initCommentForm","initVotingBlock","initExplanation","submit","ev","preventDefault","prototype","$statusDetails","find","$visibilityInput","$votingStatusInput","$votingBlockId","$openerBtn","$","context","data","saveUrl","attr","csrf","val","_this","click","removeClass","addClass","localStorage","setItem","on","getItem","reinitAfterReload","statusChanged","commentsScrollBottom","selectlist","performCallWithReload","post","ret","$content","children","remove","append","window","setTimeout","alert","fail","notifyProposer","saveStatus","newVal","setStatus","visible","prop","votingBlockId","filter","currentTarget","init","trigger","parents","length","bind","change","target","$commentList","scrollTop","scrollHeight","$commentWidget","saving","text","writeComment","_csrf","success","$comment","comment","dateFormatted","username","JSON","stringify","exports"],"mappings":"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","file":"AmendmentChangeProposal.js","sourcesContent":["const STATUS_REFERRED = 10;\nconst STATUS_VOTE = 11;\nconst STATUS_OBSOLETED_BY = 22;\nconst STATUS_CUSTOM_STRING = 23;\n\nexport class AmendmentChangeProposal {\n    private $openerBtn: JQuery;\n    private $statusDetails: JQuery;\n    private $visibilityInput: JQuery;\n    private $votingStatusInput: JQuery;\n    private $votingBlockId: JQuery;\n    private saveUrl: string;\n    private context: string;\n    private csrf: string;\n\n    constructor(private $widget: JQuery) {\n        this.initElements();\n        this.initOpener();\n        this.initStatusSetter();\n        this.initCommentForm();\n        this.initVotingBlock();\n        this.initExplanation();\n        $widget.submit(ev => ev.preventDefault());\n    }\n\n    private initElements() {\n        this.$statusDetails = this.$widget.find('.statusDetails');\n        this.$visibilityInput = this.$widget.find('input[name=proposalVisible]');\n        this.$votingStatusInput = this.$widget.find('input[name=votingStatus]');\n        this.$votingBlockId = this.$widget.find('input[name=votingBlockId]');\n        this.$openerBtn = $('.proposedChangesOpener button');\n        this.context = this.$widget.data('context');\n        this.saveUrl = this.$widget.attr('action');\n        this.csrf = this.$widget.find('input[name=_csrf]').val();\n    }\n\n    private initOpener() {\n        this.$openerBtn.click(() => {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '1');\n        });\n        this.$widget.on('click', '.closeBtn', () => {\n            this.$widget.addClass('hidden');\n            this.$openerBtn.removeClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '0');\n        });\n\n        if (localStorage.getItem('proposed_procedure_enabled') === '1') {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n        } else {\n            this.$widget.addClass('hidden');\n        }\n    }\n\n    private reinitAfterReload() {\n        this.initElements();\n        this.statusChanged();\n        this.commentsScrollBottom();\n        this.initExplanation();\n        this.$widget.find('.newBlock').addClass('hidden');\n        this.$widget.find('.selectlist').selectlist();\n    }\n\n    private performCallWithReload(data: object) {\n        data['_csrf'] = this.csrf;\n\n        $.post(this.saveUrl, data, (ret) => {\n            if (ret['success']) {\n                let $content = $(ret['html']);\n                this.$widget.children().remove();\n                this.$widget.append($content.children());\n                this.reinitAfterReload();\n                this.$widget.addClass('showSaved').removeClass('isChanged');\n                window.setTimeout(() => this.$widget.removeClass('showSaved'), 2000);\n            } else if (ret['error']) {\n                alert(ret['error']);\n            } else {\n                alert('An error ocurred');\n            }\n        }).fail(() => {\n            alert('Could not save');\n        });\n    }\n\n    private notifyProposer() {\n        this.performCallWithReload({\n            'notifyProposer': '1'\n        });\n    }\n\n    private saveStatus() {\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        let data = {\n            setStatus: newVal,\n            visible: (this.$visibilityInput.prop('checked') ? 1 : 0),\n            votingBlockId: this.$votingBlockId.val(),\n        };\n\n        if (newVal == STATUS_REFERRED) {\n            data['proposalComment'] = this.$widget.find('input[name=referredTo]').val();\n        }\n        if (newVal == STATUS_OBSOLETED_BY) {\n            data['proposalComment'] = this.$widget.find('input[name=obsoletedByAmendment]').val();\n        }\n        if (newVal == STATUS_CUSTOM_STRING) {\n            data['proposalComment'] = this.$widget.find('input[name=statusCustomStr]').val();\n        }\n        if (newVal == STATUS_VOTE) {\n            data['votingStatus'] = this.$votingStatusInput.filter(':checked').val();\n        }\n        if (data.votingBlockId == 'NEW') {\n            data['votingBlockTitle'] = this.$widget.find('input[name=newBlockTitle]').val();\n        }\n\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            data['proposalExplanation'] = this.$widget.find('textarea[name=proposalExplanation]').val();\n        }\n\n        this.performCallWithReload(data);\n    }\n\n    private statusChanged() {\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        this.$statusDetails.addClass('hidden');\n        this.$statusDetails.filter('.status_' + newVal).removeClass('hidden');\n        if (newVal == 0) {\n            this.$widget.addClass('noStatus');\n        } else {\n            this.$widget.removeClass('noStatus');\n        }\n    }\n\n    private initStatusSetter() {\n        this.$widget.on('change', '.statusForm input[type=radio]', (ev, data) => {\n            if (!$(ev.currentTarget).prop('checked')) {\n                return;\n            }\n            this.statusChanged();\n            if (data && data.init === true) {\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n        this.$widget.find('.statusForm input[type=radio]').trigger('change', {'init': true});\n\n        this.$widget.on('change keyup', 'input, textarea', (ev) => {\n            if ($(ev.currentTarget).parents('.proposalCommentForm').length > 0) { // The comment textfield\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('changed.fu.selectlist', '#obsoletedByAmendment', () => {\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('click', '.saving button', this.saveStatus.bind(this));\n        this.$widget.on('click', '.notifyProposer', this.notifyProposer.bind(this));\n    }\n\n    private initVotingBlock() {\n        this.$widget.on('changed.fu.selectlist', '#votingBlockId', () => {\n            this.$widget.addClass('isChanged');\n            if (this.$votingBlockId.val() == 'NEW') {\n                this.$widget.find(\".newBlock\").removeClass('hidden');\n            } else {\n                this.$widget.find(\".newBlock\").addClass('hidden');\n            }\n        });\n        this.$widget.find('.newBlock').addClass('hidden');\n    }\n\n    private initExplanation() {\n        this.$widget.find('input[name=setPublicExplanation]').change((ev) => {\n            if ($(ev.target).prop('checked')) {\n                this.$widget.find('section.publicExplanation').removeClass('hidden');\n            } else {\n                this.$widget.find('section.publicExplanation').addClass('hidden');\n            }\n        });\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            this.$widget.find('section.publicExplanation').removeClass('hidden');\n        } else {\n            this.$widget.find('section.publicExplanation').addClass('hidden');\n        }\n    }\n\n    private commentsScrollBottom() {\n        let $commentList = this.$widget.find('.proposalCommentForm .commentList');\n        $commentList[0].scrollTop = $commentList[0].scrollHeight;\n    }\n\n    private initCommentForm() {\n        this.$widget.on('click', '.proposalCommentForm button', () => {\n            let $commentWidget = this.$widget.find('.proposalCommentForm'),\n                saving = false,\n                $commentList = $commentWidget.find('.commentList'),\n                text = $commentWidget.find('textarea').val();\n\n            if (text == '' || saving) {\n                return;\n            }\n\n            saving = true;\n            $.post(this.saveUrl, {\n                writeComment: text,\n                _csrf: this.csrf\n            }, (ev) => {\n                if (ev.success) {\n                    let $comment = $('<li><div class=\"header\"><div class=\"date\"></div><div class=\"name\"></div></div><div class=\"comment\"></div></li>');\n                    $comment.find('.date').text(ev.comment.dateFormatted);\n                    $comment.find('.name').text(ev.comment.username);\n                    $comment.find('.comment').text(ev.comment.text);\n                    $commentList.append($comment);\n                    $commentWidget.find('textarea').val('');\n                    $commentList[0].scrollTop = $commentList[0].scrollHeight;\n                } else {\n                    alert('Could not save: ' + JSON.stringify(ev));\n                }\n                saving = false;\n            }).fail(() => {\n                alert('Could not save');\n                saving = false;\n            });\n        });\n        this.commentsScrollBottom();\n    }\n}\n"]}