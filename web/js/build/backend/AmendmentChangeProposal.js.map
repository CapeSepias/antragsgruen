{"version":3,"sources":["backend/AmendmentChangeProposal.ts"],"names":["AmendmentChangeProposal","$widget","this","$statusDetails","find","initStatusSetter","initCommentForm","saveUrl","attr","csrf","val","submit","ev","preventDefault","prototype","saveStatus","_this","newVal","data","setStatus","_csrf","$","post","console","log","addClass","removeClass","window","setTimeout","fail","alert","change","currentTarget","prop","filter","trigger","click","bind","$commentWidget","saving","$commentList","text","writeComment","success","$comment","comment","dateFormatted","username","append","scrollTop","scrollHeight","JSON","stringify","exports"],"mappings":"yGAAA,IAEAA,EAAA,WAKI,SAAAA,EAAoBC,GAAAC,KAAAD,QAAAA,EAChBC,KAAKC,eAAiBF,EAAQG,KAAK,yCACnCF,KAAKG,mBACLH,KAAKI,kBACLJ,KAAKK,QAAUN,EAAQO,KAAK,UAC5BN,KAAKO,KAAOR,EAAQG,KAAK,qBAAqBM,MAC9CT,EAAQU,OAAO,SAAAC,GAAM,OAAAA,EAAGC,mBAwEhC,OArEYb,EAAAc,UAAAC,WAAR,WAAA,IAAAC,EAAAd,KACQe,EAASf,KAAKD,QAAQG,KAAK,yCAAyCM,MACpEQ,GACAC,UAAWF,EACXG,MAAOlB,KAAKO,MApBA,IAsBZQ,IACAC,EAAsB,gBAAIhB,KAAKD,QAAQG,KAAK,0BAA0BM,OAE1EW,EAAEC,KAAKpB,KAAKK,QAASW,EAAM,SAACN,GACxBW,QAAQC,IAAIZ,GACZI,EAAKf,QAAQG,KAAK,WAAWqB,SAAS,UACtCT,EAAKf,QAAQG,KAAK,UAAUsB,YAAY,UACxCC,OAAOC,WAAW,WAAM,OAAAZ,EAAKf,QAAQG,KAAK,UAAUqB,SAAS,WAAW,OACzEI,KAAK,WACJC,MAAM,qBAIN9B,EAAAc,UAAAT,iBAAR,WAAA,IAAAW,EAAAd,KACIA,KAAKD,QAAQG,KAAK,iCAAiC2B,OAAO,SAACnB,GACvD,GAAKS,EAAET,EAAGoB,eAAeC,KAAK,WAA9B,CAGA,IAAIhB,EAASD,EAAKf,QAAQG,KAAK,yCAAyCM,MACxEM,EAAKb,eAAesB,SAAS,UAC7BT,EAAKb,eAAe+B,OAAO,WAAajB,GAAQS,YAAY,UAC5DV,EAAKf,QAAQG,KAAK,WAAWsB,YAAY,aAC1CS,QAAQ,UAEXjC,KAAKD,QAAQG,KAAK,WAAWqB,SAAS,UACtCvB,KAAKD,QAAQG,KAAK,kBAAkBgC,MAAMlC,KAAKa,WAAWsB,KAAKnC,QAG3DF,EAAAc,UAAAR,gBAAR,WAAA,IAAAU,EAAAd,KACQoC,EAAiBpC,KAAKD,QAAQG,KAAK,wBACnCmC,GAAS,EACTC,EAAeF,EAAelC,KAAK,gBAEvCkC,EAAelC,KAAK,UAAUgC,MAAM,WAChC,IAAIK,EAAOH,EAAelC,KAAK,YAAYM,MAC/B,IAAR+B,GAAcF,IAIlBA,GAAS,EACTlB,EAAEC,KAAKN,EAAKT,SACRmC,aAAcD,EACdrB,MAAOJ,EAAKP,MACb,SAACG,GACA,GAAIA,EAAG+B,QAAS,CACZ,IAAIC,EAAWvB,EAAE,kHACjBuB,EAASxC,KAAK,SAASqC,KAAK7B,EAAGiC,QAAQC,eACvCF,EAASxC,KAAK,SAASqC,KAAK7B,EAAGiC,QAAQE,UACvCH,EAASxC,KAAK,YAAYqC,KAAK7B,EAAGiC,QAAQJ,MAC1CD,EAAaQ,OAAOJ,GACpBN,EAAelC,KAAK,YAAYM,IAAI,IACpC8B,EAAa,GAAGS,UAAYT,EAAa,GAAGU,kBAE5CpB,MAAM,mBAAqBqB,KAAKC,UAAUxC,IAE9C2B,GAAS,IACVV,KAAK,WACJC,MAAM,kBACNS,GAAS,OAGjBC,EAAa,GAAGS,UAAYT,EAAa,GAAGU,cAEpDlD,KAnFaqD,EAAArD,wBAAAA","file":"AmendmentChangeProposal.js","sourcesContent":["const STATUS_REFERRED = 10;\n\nexport class AmendmentChangeProposal {\n    private $statusDetails: JQuery;\n    private saveUrl: string;\n    private csrf: string;\n\n    constructor(private $widget: JQuery) {\n        this.$statusDetails = $widget.find('.proposalStatusDetails .statusDetails');\n        this.initStatusSetter();\n        this.initCommentForm();\n        this.saveUrl = $widget.attr('action');\n        this.csrf = $widget.find('input[name=_csrf]').val();\n        $widget.submit(ev => ev.preventDefault());\n    }\n\n    private saveStatus() {\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        let data = {\n            setStatus: newVal,\n            _csrf: this.csrf\n        };\n        if (newVal == STATUS_REFERRED) {\n            data['proposalComment'] = this.$widget.find('input[name=referredTo]').val();\n        }\n        $.post(this.saveUrl, data, (ev) => {\n            console.log(ev);\n            this.$widget.find('.saving').addClass('hidden');\n            this.$widget.find('.saved').removeClass('hidden');\n            window.setTimeout(() => this.$widget.find('.saved').addClass('hidden'), 2000);\n        }).fail(() => {\n            alert(\"Could not save\");\n        });\n    }\n\n    private initStatusSetter() {\n        this.$widget.find(\".statusForm input[type=radio]\").change((ev) => {\n            if (!$(ev.currentTarget).prop('checked')) {\n                return;\n            }\n            let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n            this.$statusDetails.addClass('hidden');\n            this.$statusDetails.filter('.status_' + newVal).removeClass('hidden');\n            this.$widget.find('.saving').removeClass('hidden');\n        }).trigger('change');\n\n        this.$widget.find('.saving').addClass('hidden');\n        this.$widget.find('.saving button').click(this.saveStatus.bind(this));\n    }\n\n    private initCommentForm() {\n        let $commentWidget = this.$widget.find('.proposalCommentForm'),\n            saving = false,\n            $commentList = $commentWidget.find('.commentList');\n\n        $commentWidget.find('button').click(() => {\n            let text = $commentWidget.find('textarea').val();\n            if (text == '' || saving) {\n                return;\n            }\n\n            saving = true;\n            $.post(this.saveUrl, {\n                writeComment: text,\n                _csrf: this.csrf\n            }, (ev) => {\n                if (ev.success) {\n                    let $comment = $('<li><div class=\"header\"><div class=\"date\"></div><div class=\"name\"></div></div><div class=\"comment\"></div></li>');\n                    $comment.find('.date').text(ev.comment.dateFormatted);\n                    $comment.find('.name').text(ev.comment.username);\n                    $comment.find('.comment').text(ev.comment.text);\n                    $commentList.append($comment);\n                    $commentWidget.find('textarea').val('');\n                    $commentList[0].scrollTop = $commentList[0].scrollHeight;\n                } else {\n                    alert('Could not save: ' + JSON.stringify(ev));\n                }\n                saving = false;\n            }).fail(() => {\n                alert(\"Could not save\");\n                saving = false;\n            });\n        });\n        $commentList[0].scrollTop = $commentList[0].scrollHeight;\n    }\n}\n"]}