{"version":3,"sources":["backend/SiteAccess.ts"],"names":["SiteAccess","this","initSite","initUsers","initAdmins","prototype","$","find","change","prop","removeClass","addClass","trigger","show","hide","submit","ev","text","val","indexOf","bootbox","alert","__t","preventDefault","emails","split","names","length","parents","first","$adminForm","on","$button","currentTarget","$form","confirm","result","id","data","append","$card"],"mappings":"AAAA,IAAAA,WAAA,WAGI,SAAAA,IACIC,KAAKC,WACLD,KAAKE,YACLF,KAAKG,aAoFb,OAjFYJ,EAAAK,UAAAH,SAAR,WACoBI,EAAE,qBACRC,KAAK,mCAAmCC,OAAO,WACjDF,EAAEL,MAAMQ,KAAK,WACbH,EAAE,iBAAiBI,YAAY,UAE/BJ,EAAE,iBAAiBK,SAAS,YAEjCC,QAAQ,UAEXN,EAAE,8BAA8BE,OAAO,WAC/BF,EAAEL,MAAMQ,KAAK,WACbH,EAAE,qBAAqBO,OAEvBP,EAAE,qBAAqBQ,SAE5BF,QAAQ,WAGPZ,EAAAK,UAAAF,UAAR,WACIG,EAAE,uBAAuBS,OAAO,SAAUC,GACtC,IAAIC,EAAOX,EAAE,cAAcY,OACO,GAA9BD,EAAKE,QAAQ,eACbC,QAAQC,MAAMC,IAAI,QAAS,qBAC3BN,EAAGO,mBAEwB,GAA3BN,EAAKE,QAAQ,YACbC,QAAQC,MAAMC,IAAI,QAAS,qBAC3BN,EAAGO,kBAGP,IAAIC,EAASlB,EAAE,mBAAmBY,MAAMO,MAAM,MAC1CC,EAAQpB,EAAE,UAAUY,MAAMO,MAAM,MACf,GAAjBD,EAAOG,QAA4B,IAAbH,EAAO,KAC7BR,EAAGO,iBACHH,QAAQC,MAAMC,IAAI,QAAS,oBAE3BE,EAAOG,QAAUD,EAAMC,SACvBP,QAAQC,MAAMC,IAAI,QAAS,wBAC3BN,EAAGO,oBAIXjB,EAAE,yDAAyDE,OAAO,WACzDF,EAAEL,MAAMQ,KAAK,YACdH,EAAEL,MAAM2B,QAAQ,MAAMC,QAAQtB,KAAK,yCAAyCE,KAAK,WAAW,KAGpGH,EAAE,2DAA2DE,OAAO,WAC5DF,EAAEL,MAAMQ,KAAK,YACbH,EAAEL,MAAM2B,QAAQ,MAAMC,QAAQtB,KAAK,uCAAuCE,KAAK,WAAW,MAK9FT,EAAAK,UAAAD,WAAR,WACIH,KAAK6B,WAAaxB,EAAE,cAEpBL,KAAK6B,WAAWC,GAAG,QAAS,eAAgB,SAACf,GACzC,IAAIgB,EAAU1B,EAAEU,EAAGiB,eACfC,EAAQ5B,EAAEU,EAAGiB,eAAeL,QAAQ,QAAQC,QAEhDT,QAAQe,QAAQb,IAAI,QAAS,sBAAuB,SAAUc,GAC1D,GAAIA,EAAQ,CACR,IAAIC,EAAKL,EAAQM,KAAK,MACtBJ,EAAMK,OAAO,kDAAoDF,EAAK,MACtEH,EAAMnB,cAKlBd,KAAK6B,WAAWC,GAAG,SAAU,6BAA8B,SAACf,GACxD,IAAIwB,EAAQlC,EAAEU,EAAGiB,eAAeL,QAAQ,cAAcC,QAClDvB,EAAEU,EAAGiB,eAAexB,KAAK,WACzB+B,EAAMjC,KAAK,2BAA2BI,SAAS,UAE/C6B,EAAMjC,KAAK,2BAA2BG,YAAY,YAG1DT,KAAK6B,WAAWvB,KAAK,8BAA8BK,QAAQ,WAEnEZ,EA1FA,GA4FA,IAAIA","file":"SiteAccess.js","sourcesContent":["class SiteAccess {\n    private $adminForm: JQuery;\n\n    constructor() {\n        this.initSite();\n        this.initUsers();\n        this.initAdmins();\n    }\n\n    private initSite() {\n        let $siteForm = $(\"#siteSettingsForm\");\n        $siteForm.find(\".loginMethods .namespaced input\").change(function () {\n            if ($(this).prop(\"checked\")) {\n                $(\"#accountsForm\").removeClass(\"hidden\");\n            } else {\n                $(\"#accountsForm\").addClass(\"hidden\");\n            }\n        }).trigger(\"change\");\n\n        $(\".managedUserAccounts input\").change(function () {\n            if ($(this).prop(\"checked\")) {\n                $(\".showManagedUsers\").show();\n            } else {\n                $(\".showManagedUsers\").hide();\n            }\n        }).trigger(\"change\");\n    }\n\n    private initUsers() {\n        $(\"#accountsCreateForm\").submit(function (ev) {\n            let text = $(\"#emailText\").val();\n            if (text.indexOf(\"%ACCOUNT%\") == -1) {\n                bootbox.alert(__t(\"admin\", \"emailMissingCode\"));\n                ev.preventDefault();\n            }\n            if (text.indexOf(\"%LINK%\") == -1) {\n                bootbox.alert(__t(\"admin\", \"emailMissingLink\"));\n                ev.preventDefault();\n            }\n\n            let emails = $(\"#emailAddresses\").val().split(\"\\n\"),\n                names = $(\"#names\").val().split(\"\\n\");\n            if (emails.length == 1 && emails[0] == \"\") {\n                ev.preventDefault();\n                bootbox.alert(__t(\"admin\", \"emailMissingTo\"));\n            }\n            if (emails.length != names.length) {\n                bootbox.alert(__t(\"admin\", \"emailNumberMismatch\"));\n                ev.preventDefault();\n            }\n        });\n\n        $('.accountListTable .accessViewCol input[type=checkbox]').change(function () {\n            if (!$(this).prop(\"checked\")) {\n                $(this).parents('tr').first().find('.accessCreateCol input[type=checkbox]').prop('checked', false);\n            }\n        });\n        $('.accountListTable .accessCreateCol input[type=checkbox]').change(function () {\n            if ($(this).prop(\"checked\")) {\n                $(this).parents('tr').first().find('.accessViewCol input[type=checkbox]').prop('checked', true);\n            }\n        });\n    }\n\n    private initAdmins() {\n        this.$adminForm = $(\"#adminForm\");\n\n        this.$adminForm.on('click', '.removeAdmin', (ev)  => {\n            let $button = $(ev.currentTarget),\n                $form = $(ev.currentTarget).parents(\"form\").first();\n\n            bootbox.confirm(__t(\"admin\", \"removeAdminConfirm\"), function (result) {\n                if (result) {\n                    let id = $button.data(\"id\");\n                    $form.append('<input type=\"hidden\" name=\"removeAdmin\" value=\"' + id + '\">');\n                    $form.submit();\n                }\n            });\n        });\n\n        this.$adminForm.on('change', '.adminCard .typeSite input', (ev) => {\n            let $card = $(ev.currentTarget).parents('.adminCard').first();\n            if ($(ev.currentTarget).prop('checked')) {\n                $card.find('.typeCon, .typeProposal').addClass('hidden');\n            } else {\n                $card.find('.typeCon, .typeProposal').removeClass('hidden');\n            }\n        });\n        this.$adminForm.find('.adminCard .typeSite input').trigger('change');\n    }\n}\n\nnew SiteAccess();\n"]}