{"version":3,"sources":["backend/SiteAccess.ts"],"names":["SiteAccess","this","initSite","initUserList","initAddUsers","initDelUser","initAdmins","prototype","$","change","prop","removeClass","addClass","trigger","click","ev","type","currentTarget","data","submit","hasClass","text","val","indexOf","bootbox","alert","__t","preventDefault","emails","split","names","length","on","$button","$form","parents","first","msg","replace","confirm","result","id","append","find","$adminForm","$card"],"mappings":"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","file":"SiteAccess.js","sourcesContent":["class SiteAccess {\n    private $adminForm: JQuery;\n\n    constructor() {\n        this.initSite();\n        this.initUserList();\n        this.initAddUsers();\n        this.initDelUser();\n        this.initAdmins();\n    }\n\n    private initSite() {\n        $(\".managedUserAccounts input\").change(function () {\n            if ($(this).prop(\"checked\")) {\n                $(\".showManagedUsers\").removeClass('hidden');\n            } else {\n                $(\".showManagedUsers\").addClass('hidden');\n            }\n        }).trigger(\"change\");\n    }\n\n    private initAddUsers() {\n        $(\".addUsersOpener\").click((ev) => {\n            const type = $(ev.currentTarget).data(\"type\");\n            $(\".addUsersByLogin\").addClass(\"hidden\");\n            $(\".addUsersByLogin.\" + type).removeClass(\"hidden\");\n        });\n\n        $(\"#accountsCreateForm\").submit((ev) => {\n            if (!$(\".addUsersByLogin.email\").hasClass(\"hidden\")) {\n                let text = $(\"#emailText\").val();\n                if (text.indexOf(\"%ACCOUNT%\") == -1) {\n                    bootbox.alert(__t(\"admin\", \"emailMissingCode\"));\n                    ev.preventDefault();\n                }\n                if (text.indexOf(\"%LINK%\") == -1) {\n                    bootbox.alert(__t(\"admin\", \"emailMissingLink\"));\n                    ev.preventDefault();\n                }\n\n                let emails = $(\"#emailAddresses\").val().split(\"\\n\"),\n                    names = $(\"#names\").val().split(\"\\n\");\n                if (emails.length == 1 && emails[0] == \"\") {\n                    ev.preventDefault();\n                    bootbox.alert(__t(\"admin\", \"emailMissingTo\"));\n                }\n                if (emails.length != names.length) {\n                    bootbox.alert(__t(\"admin\", \"emailNumberMismatch\"));\n                    ev.preventDefault();\n                }\n            }\n            if (!$(\".addUsersByLogin.samlWW\").hasClass(\"hidden\")) {\n                if ($(\"#samlWW\").val() === \"\") {\n                    ev.preventDefault();\n                    bootbox.alert(__t(\"admin\", \"emailMissingUsername\"));\n                }\n            }\n        });\n    }\n\n    private initDelUser() {\n        $(\".accountListTable .deleteUser\").on(\"click\", (ev) => {\n            ev.preventDefault();\n            const $button = $(ev.currentTarget),\n                $form = $(ev.currentTarget).parents(\"form\").first();\n\n            const msg = __t(\"admin\", \"removeUserConfirm\").replace(/%NAME%/, $button.data(\"name\"));\n            bootbox.confirm(msg, (result) => {\n                if (result) {\n                    let id = $button.data(\"id\");\n                    $form.append('<input type=\"hidden\" name=\"deleteUser\" value=\"' + id + '\">');\n                    $form.submit();\n                }\n            });\n        });\n    }\n\n    private initUserList() {\n        $('.accountListTable .accessViewCol input[type=checkbox]').change(function () {\n            if (!$(this).prop(\"checked\")) {\n                $(this).parents('tr').first().find('.accessCreateCol input[type=checkbox]').prop('checked', false);\n            }\n        });\n        $('.accountListTable .accessCreateCol input[type=checkbox]').change(function () {\n            if ($(this).prop(\"checked\")) {\n                $(this).parents('tr').first().find('.accessViewCol input[type=checkbox]').prop('checked', true);\n            }\n        });\n    }\n\n    private initAdmins() {\n        this.$adminForm = $(\"#adminForm\");\n\n        this.$adminForm.on('click', '.removeAdmin', (ev) => {\n            let $button = $(ev.currentTarget),\n                $form = $(ev.currentTarget).parents(\"form\").first();\n\n            bootbox.confirm(__t(\"admin\", \"removeAdminConfirm\"), (result) => {\n                if (result) {\n                    let id = $button.data(\"id\");\n                    $form.append('<input type=\"hidden\" name=\"removeAdmin\" value=\"' + id + '\">');\n                    $form.submit();\n                }\n            });\n        });\n\n        this.$adminForm.on('change', '.adminCard .typeSite input', (ev) => {\n            let $card = $(ev.currentTarget).parents('.adminCard').first();\n            if ($(ev.currentTarget).prop('checked')) {\n                $card.find('.typeCon, .typeProposal').addClass('hidden');\n            } else {\n                $card.find('.typeCon, .typeProposal').removeClass('hidden');\n            }\n        });\n        this.$adminForm.find('.adminCard .typeSite input').trigger('change');\n    }\n}\n\nnew SiteAccess();\n"]}