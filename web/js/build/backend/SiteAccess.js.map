{"version":3,"sources":["backend/SiteAccess.ts"],"names":["SiteAccess","this","initSite","initUserList","initAddUsers","initDelUser","initAdmins","initConPwd","prototype","$","on","prop","removeClass","addClass","trigger","ev","type","currentTarget","data","hasClass","text","val","indexOf","bootbox","alert","__t","preventDefault","emails","split","names","length","$button","$form","parents","first","msg","replace","confirm","result","id","append","find","$adminForm","$card","$widget","$checkbox","stopPropagation"],"mappings":"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","file":"SiteAccess.js","sourcesContent":["class SiteAccess {\n    private $adminForm: JQuery;\n\n    constructor() {\n        this.initSite();\n        this.initUserList();\n        this.initAddUsers();\n        this.initDelUser();\n        this.initAdmins();\n        this.initConPwd();\n    }\n\n    private initSite() {\n        $(\".managedUserAccounts input\").on(\"change\", function () {\n            if ($(this).prop(\"checked\")) {\n                $(\".showManagedUsers\").removeClass('hidden');\n            } else {\n                $(\".showManagedUsers\").addClass('hidden');\n            }\n        }).trigger(\"change\");\n    }\n\n    private initAddUsers() {\n        $(\".addUsersOpener\").on(\"click\", (ev) => {\n            const type = $(ev.currentTarget).data(\"type\");\n            $(\".addUsersByLogin\").addClass(\"hidden\");\n            $(\".addUsersByLogin.\" + type).removeClass(\"hidden\");\n        });\n\n        $(\"#accountsCreateForm\").on(\"submit\", (ev) => {\n            if (!$(\".addUsersByLogin.email\").hasClass(\"hidden\")) {\n                let text = $(\"#emailText\").val() as string;\n                if (text.indexOf(\"%ACCOUNT%\") == -1) {\n                    bootbox.alert(__t(\"admin\", \"emailMissingCode\"));\n                    ev.preventDefault();\n                }\n                if (text.indexOf(\"%LINK%\") == -1) {\n                    bootbox.alert(__t(\"admin\", \"emailMissingLink\"));\n                    ev.preventDefault();\n                }\n\n                let emails = ($(\"#emailAddresses\").val() as string).split(\"\\n\"),\n                    names = ($(\"#names\").val() as string).split(\"\\n\");\n                if (emails.length == 1 && emails[0] == \"\") {\n                    ev.preventDefault();\n                    bootbox.alert(__t(\"admin\", \"emailMissingTo\"));\n                }\n                if (emails.length != names.length) {\n                    bootbox.alert(__t(\"admin\", \"emailNumberMismatch\"));\n                    ev.preventDefault();\n                }\n            }\n            if (!$(\".addUsersByLogin.samlWW\").hasClass(\"hidden\")) {\n                if ($(\"#samlWW\").val() === \"\") {\n                    ev.preventDefault();\n                    bootbox.alert(__t(\"admin\", \"emailMissingUsername\"));\n                }\n            }\n        });\n    }\n\n    private initDelUser() {\n        $(\".accountListTable .deleteUser\").on(\"click\", (ev) => {\n            ev.preventDefault();\n            const $button = $(ev.currentTarget),\n                $form = $(ev.currentTarget).parents(\"form\").first();\n\n            const msg = __t(\"admin\", \"removeUserConfirm\").replace(/%NAME%/, $button.data(\"name\"));\n            bootbox.confirm(msg, (result) => {\n                if (result) {\n                    let id = $button.data(\"id\");\n                    $form.append('<input type=\"hidden\" name=\"deleteUser\" value=\"' + id + '\">');\n                    $form.trigger(\"submit\");\n                }\n            });\n        });\n    }\n\n    private initUserList() {\n        $('.accountListTable .accessViewCol input[type=checkbox]').on(\"change\", function () {\n            if (!$(this).prop(\"checked\")) {\n                $(this).parents('tr').first().find('.accessCreateCol input[type=checkbox]').prop('checked', false);\n            }\n        });\n        $('.accountListTable .accessCreateCol input[type=checkbox]').on(\"change\", function () {\n            if ($(this).prop(\"checked\")) {\n                $(this).parents('tr').first().find('.accessViewCol input[type=checkbox]').prop('checked', true);\n            }\n        });\n    }\n\n    private initAdmins() {\n        this.$adminForm = $(\"#adminForm\");\n\n        this.$adminForm.on('click', '.removeAdmin', (ev) => {\n            let $button = $(ev.currentTarget),\n                $form = $(ev.currentTarget).parents(\"form\").first();\n\n            bootbox.confirm(__t(\"admin\", \"removeAdminConfirm\"), (result) => {\n                if (result) {\n                    let id = $button.data(\"id\");\n                    $form.append('<input type=\"hidden\" name=\"removeAdmin\" value=\"' + id + '\">');\n                    $form.trigger(\"submit\");\n                }\n            });\n        });\n\n        this.$adminForm.on('change', '.adminCard .typeSite input', (ev) => {\n            let $card = $(ev.currentTarget).parents('.adminCard').first();\n            if ($(ev.currentTarget).prop('checked')) {\n                $card.find('.typeCon, .typeProposal').addClass('hidden');\n            } else {\n                $card.find('.typeCon, .typeProposal').removeClass('hidden');\n            }\n        });\n        this.$adminForm.find('.adminCard .typeSite input').trigger('change');\n\n        this.$adminForm.find(\".ppReplyToOpener\").on(\"click\", (ev) => {\n            $(ev.currentTarget).parents(\".adminCard\").find(\".ppReplyTo\").removeClass(\"hidden\").find(\"input\").trigger(\"focus\");\n            $(ev.currentTarget).addClass(\"hidden\");\n        });\n    }\n\n    private initConPwd() {\n        const $widget = $(\".conpw\"),\n            $checkbox = $widget.find('.setter input[type=checkbox]');\n        $checkbox.on(\"change\", () => {\n            if ($checkbox.prop(\"checked\")) {\n                $widget.addClass(\"checked\");\n            } else {\n                $widget.removeClass(\"checked\");\n            }\n        }).trigger(\"change\");\n\n        $widget.find('.setNewPassword').on(\"click\", ev => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            $widget.addClass('changePwd');\n        });\n    }\n}\n\nnew SiteAccess();\n"]}