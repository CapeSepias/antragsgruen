{"version":3,"sources":["backend/VotingAdmin.js","backend/VotingAdmin.ts"],"names":["define","require","exports","Object","defineProperty","value","VotingAdmin","[object Object]","$element","this","$vueEl","find","allVotingData","data","voteSettingsUrl","console","log","votings","csrf","$","attr","widget","Vue","el","template","methods","_performOperation","votingBlockId","additionalProps","postData","_csrf","assign","url","replace","post","undefined","success","alert","message","catch","err","responseText","newStatus","arguments","status"],"mappings":"AAAAA,OAAO,CAAC,UAAW,YAAY,SAAUC,EAASC,GAC9C,aACAC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtDH,EAAQI,iBAAc,ECC1BJ,EAAAI,YAAA,MAGIC,YAAoBC,GAAAC,KAAAD,SAAAA,EAChB,MAAME,EAASD,KAAKD,SAASG,KAAK,gBAAgB,GAC5CC,EAAgBJ,EAASK,KAAK,UAC9BC,EAAkBN,EAASK,KAAK,qBAEtCE,QAAQC,IAAIF,GAEZ,MAAMD,EAAO,CACTI,QAASL,EACTM,KAAMC,EAAE,QAAQR,KAAK,yBAAyBS,KAAK,YAEvDX,KAAKY,OAAS,IAAIC,IAAI,CAClBC,GAAIb,EACJc,SAAU,+QAMVX,KAAAA,EACAY,QAAS,CACLC,kBAAmB,SAAUC,EAAeC,GACxC,IAAIC,EAAW,CACXC,MAAOrB,KAAKS,MAEZU,IACAC,EAAW1B,OAAO4B,OAAOF,EAAUD,IAEvC,MAAMP,EAASZ,KACTuB,EAAMlB,EAAgBmB,QAAQ,gBAAiBN,GACrDZ,QAAQC,IAAIgB,GACZb,EAAEe,KAAKF,EAAKH,GAAU,SAAUhB,GAC5BE,QAAQC,SAAqBmB,IAAjBtB,EAAKuB,SAAwBvB,EAAKuB,cACzBD,IAAjBtB,EAAKuB,SAA0BvB,EAAKuB,SAIxCf,EAAOJ,QAAUJ,EACjBE,QAAQC,IAAI,WAAYH,IAJpBwB,MAAMxB,EAAKyB,YAKhBC,OAAM,SAAUC,GACfH,MAAMG,EAAIC,kBAGlBlC,UAAUoB,EAAee,GACrB3B,QAAQC,IAAI2B,WACZlC,KAAKiB,kBAAkBC,EAAe,CAClCiB,OAAQF","file":"VotingAdmin.js","sourcesContent":[null,"import { VueConstructor } from 'vue';\n\ndeclare var Vue: VueConstructor;\n\nexport class VotingAdmin {\n    private widget;\n\n    constructor(private $element: JQuery) {\n        const $vueEl = this.$element.find(\".votingAdmin\")[0];\n        const allVotingData = $element.data('voting');\n        const voteSettingsUrl = $element.data('url-vote-settings');\n\n        console.log(voteSettingsUrl);\n\n        const data = {\n            votings: allVotingData,\n            csrf: $(\"head\").find(\"meta[name=csrf-token]\").attr(\"content\") as string,\n        };\n        this.widget = new Vue({\n            el: $vueEl,\n            template: `<div class=\"adminVotings\">\n                <voting-admin-widget v-for=\"voting in votings\"\n                                     :voting=\"voting\"\n                                     @set-status=\"setStatus\"\n                ></voting-admin-widget>\n            </div>`,\n            data,\n            methods: {\n                _performOperation: function (votingBlockId, additionalProps) {\n                    let postData = {\n                        _csrf: this.csrf,\n                    };\n                    if (additionalProps) {\n                        postData = Object.assign(postData, additionalProps);\n                    }\n                    const widget = this;\n                    const url = voteSettingsUrl.replace(/VOTINGBLOCKID/, votingBlockId);\n                    console.log(url);\n                    $.post(url, postData, function (data) {\n                        console.log(data.success !== undefined, !data.success);\n                        if (data.success !== undefined && !data.success) {\n                            alert(data.message);\n                            return;\n                        }\n                        widget.votings = data;\n                        console.log(\"returned\", data);\n                    }).catch(function (err) {\n                        alert(err.responseText);\n                    });\n                },\n                setStatus(votingBlockId, newStatus) {\n                    console.log(arguments);\n                    this._performOperation(votingBlockId, {\n                        status: newStatus\n                    });\n                }\n            }\n        });\n    }\n}\n"]}