{"version":3,"sources":["backend/VotingAdmin.js","backend/VotingAdmin.ts"],"names":["define","require","exports","Object","defineProperty","value","VotingAdmin","[object Object]","$element","this","$vueEl","find","allVotingData","data","voteSettingsUrl","addableMotions","pollUrl","widget","Vue","el","template","votings","csrf","$","attr","pollingId","methods","_performOperation","votingBlockId","additionalProps","postData","_csrf","assign","url","replace","post","undefined","success","alert","message","catch","err","responseText","newStatus","organizations","op","status","map","orga","id","members_present","itemType","itemId","itemDefinition","reloadData","get","console","error","startPolling","window","setInterval","clearInterval"],"mappings":"AAAAA,OAAO,CAAC,UAAW,YAAY,SAAUC,EAASC,GAC9C,aACAC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtDH,EAAQI,iBAAc,ECC1BJ,EAAAI,YAAA,MAGIC,YAAoBC,GAAAC,KAAAD,SAAAA,EAChB,MAAME,EAASD,KAAKD,SAASG,KAAK,gBAAgB,GAC5CC,EAAgBJ,EAASK,KAAK,UAC9BC,EAAkBN,EAASK,KAAK,qBAChCE,EAAiBP,EAASK,KAAK,mBAC/BG,EAAUR,EAASK,KAAK,YAE9BJ,KAAKQ,OAAS,IAAIC,IAAI,CAClBC,GAAIT,EACJU,SAAU,gdASVP,KAAI,KACO,CACHQ,QAAST,EACTG,eAAAA,EACAO,KAAMC,EAAE,QAAQZ,KAAK,yBAAyBa,KAAK,WACnDC,UAAW,OAGnBC,QAAS,CACLC,kBAAmB,SAAUC,EAAeC,GACxC,IAAIC,EAAW,CACXC,MAAOtB,KAAKa,MAEZO,IACAC,EAAW3B,OAAO6B,OAAOF,EAAUD,IAEvC,MAAMZ,EAASR,KACTwB,EAAMnB,EAAgBoB,QAAQ,gBAAiBN,GACrDL,EAAEY,KAAKF,EAAKH,GAAU,SAAUjB,QACPuB,IAAjBvB,EAAKwB,SAA0BxB,EAAKwB,QAIxCpB,EAAOI,QAAUR,EAHbyB,MAAMzB,EAAK0B,YAIhBC,OAAM,SAAUC,GACfH,MAAMG,EAAIC,kBAGlBnC,UAAUqB,EAAee,EAAWC,GAChCnC,KAAKkB,kBAAkBC,EAAe,CAClCiB,GAAI,SACJC,OAAQH,EACRC,cAAeA,EAAcG,KAAIC,IAAiB,CAC9CC,GAAID,EAAKC,GACTC,gBAAiBF,EAAKE,uBAIlC3C,WAAWqB,EAAeuB,EAAUC,GAChC3C,KAAKkB,kBAAkBC,EAAe,CAClCiB,GAAI,cACJM,SAAAA,EACAC,OAAAA,KAGR7C,QAAQqB,EAAeyB,GACnB5C,KAAKkB,kBAAkBC,EAAe,CAClCiB,GAAI,WACJQ,eAAAA,KAGRC,WAAY,WACR,MAAMrC,EAASR,KACfc,EAAEgC,IAAIvC,GAAS,SAAUH,GACrBI,EAAOI,QAAUR,KAClB2B,OAAM,SAAUC,GACfe,QAAQC,MAAM,0CAA2ChB,OAGjEiB,aAAc,WACV,MAAMzC,EAASR,KACfA,KAAKgB,UAAYkC,OAAOC,aAAY,WAChC3C,EAAOqC,eACR,OAGX/C,gBACIoD,OAAOE,cAAcpD,KAAKgB,YAE9BlB,UACIE,KAAKiD","file":"VotingAdmin.js","sourcesContent":[null,"import { VueConstructor } from 'vue';\n\ndeclare var Vue: VueConstructor;\n\nexport class VotingAdmin {\n    private widget;\n\n    constructor(private $element: JQuery) {\n        const $vueEl = this.$element.find(\".votingAdmin\")[0];\n        const allVotingData = $element.data('voting');\n        const voteSettingsUrl = $element.data('url-vote-settings');\n        const addableMotions = $element.data('addable-motions');\n        const pollUrl = $element.data('url-poll');\n\n        this.widget = new Vue({\n            el: $vueEl,\n            template: `<div class=\"adminVotings\">\n                <voting-admin-widget v-for=\"voting in votings\"\n                                     :voting=\"voting\"\n                                     :addableMotions=\"addableMotions\"\n                                     @set-status=\"setStatus\"\n                                     @remove-item=\"removeItem\"\n                                     @add-item=\"addItem\"\n                ></voting-admin-widget>\n            </div>`,\n            data() {\n                return {\n                    votings: allVotingData,\n                    addableMotions,\n                    csrf: $(\"head\").find(\"meta[name=csrf-token]\").attr(\"content\") as string,\n                    pollingId: null\n                };\n            },\n            methods: {\n                _performOperation: function (votingBlockId, additionalProps) {\n                    let postData = {\n                        _csrf: this.csrf,\n                    };\n                    if (additionalProps) {\n                        postData = Object.assign(postData, additionalProps);\n                    }\n                    const widget = this;\n                    const url = voteSettingsUrl.replace(/VOTINGBLOCKID/, votingBlockId);\n                    $.post(url, postData, function (data) {\n                        if (data.success !== undefined && !data.success) {\n                            alert(data.message);\n                            return;\n                        }\n                        widget.votings = data;\n                    }).catch(function (err) {\n                        alert(err.responseText);\n                    });\n                },\n                setStatus(votingBlockId, newStatus, organizations) {\n                    this._performOperation(votingBlockId, {\n                        op: 'update',\n                        status: newStatus,\n                        organizations: organizations.map(orga => { return {\n                            id: orga.id,\n                            members_present: orga.members_present,\n                        }}),\n                    });\n                },\n                removeItem(votingBlockId, itemType, itemId) {\n                    this._performOperation(votingBlockId, {\n                        op: 'remove-item',\n                        itemType,\n                        itemId\n                    });\n                },\n                addItem(votingBlockId, itemDefinition) {\n                    this._performOperation(votingBlockId, {\n                        op: 'add-item',\n                        itemDefinition\n                    });\n                },\n                reloadData: function () {\n                    const widget = this;\n                    $.get(pollUrl, function (data) {\n                        widget.votings = data;\n                    }).catch(function (err) {\n                        console.error(\"Could not load voting data from backend\", err);\n                    });\n                },\n                startPolling: function () {\n                    const widget = this;\n                    this.pollingId = window.setInterval(function () {\n                        widget.reloadData();\n                    }, 3000);\n                }\n            },\n            beforeDestroy() {\n                window.clearInterval(this.pollingId)\n            },\n            created() {\n                this.startPolling()\n            }\n        });\n    }\n}\n"]}