{"version":3,"sources":["backend/MotionTypeEdit.ts"],"names":["MotionTypeEdit","$","on","removeClass","addClass","tooltip","this","initSectionList","initDeadlines","initInitiatorForm","initMotionInitiatorForm","initAmendmentInitiatorForm","prototype","_this","$supportType","selected","find","val","data","motionsHaveSupporters","setMaxPdfSupporters","trigger","$sameSettings","prop","amendmentsHaveSupporters","ev","currentTarget","each","i","el","datetimepicker","locale","initLinkedDeadlinePickers","$row","$from","$to","useCurrent","setErrorState","fromDate","date","toDate","isBefore","hasError","$deadlineHolder","addDeadlineRow","html","replace","$newRow","append","parents","remove","children","length","$initiatorCanBePerson","$initiatorCanBeOrga","$list","newCounter","Sortable","create","handle","animation","preventDefault","$sectionHolder","first","delId","bootbox","confirm","__t","result","$li","parseInt","newStr","$newObj","$tab","dataNewCounter","$this","$ul","parent"],"mappings":"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","file":"MotionTypeEdit.js","sourcesContent":["declare var Sortable;\n\nclass MotionTypeEdit {\n    private motionsHaveSupporters: boolean;\n    private amendmentsHaveSupporters: boolean;\n\n    constructor() {\n        $('.deleteTypeOpener button').on('click', () => {\n            $('.deleteTypeForm').removeClass('hidden');\n            $('.deleteTypeOpener').addClass('hidden');\n        });\n\n        $('[data-toggle=\"tooltip\"]').tooltip();\n\n        this.initSectionList();\n        this.initDeadlines();\n        this.initInitiatorForm();\n        this.initMotionInitiatorForm();\n        this.initAmendmentInitiatorForm();\n    }\n\n    private initMotionInitiatorForm() {\n        let $supportType = $('#typeSupportType');\n        $supportType.on('changed.fu.selectlist', () => {\n            let selected = $supportType.find('input').val();\n            let hasSupporters = $supportType.find(\"li[data-value=\\\"\" + selected + \"\\\"]\").data(\"has-supporters\");\n\n            if (hasSupporters) {\n                $('#typeMinSupportersRow').removeClass('hidden');\n                $('#typeAllowMoreSupporters').removeClass('hidden');\n                this.motionsHaveSupporters = true;\n            } else {\n                $('#typeMinSupportersRow').addClass('hidden');\n                $('#typeAllowMoreSupporters').addClass('hidden');\n                this.motionsHaveSupporters = false;\n            }\n            this.setMaxPdfSupporters();\n        }).trigger('changed.fu.selectlist');\n\n        const $sameSettings = $(\"#sameInitiatorSettingsForAmendments input\");\n        $sameSettings.on(\"change\", () => {\n            if ($sameSettings.prop(\"checked\")) {\n                $('section.amendmentSupporters').addClass(\"hidden\");\n            } else {\n                $('section.amendmentSupporters').removeClass(\"hidden\");\n            }\n        }).trigger(\"change\");\n    }\n\n    private initAmendmentInitiatorForm() {\n        let $supportType = $('#typeSupportTypeAmendment');\n        $supportType.on('changed.fu.selectlist', () => {\n            let selected = $supportType.find('input').val();\n            let hasSupporters = $supportType.find(\"li[data-value=\\\"\" + selected + \"\\\"]\").data(\"has-supporters\");\n\n            if (hasSupporters) {\n                $('#typeMinSupportersRowAmendment').removeClass('hidden');\n                $('#typeAllowMoreSupportersAmendment').removeClass('hidden');\n                this.amendmentsHaveSupporters = true;\n            } else {\n                $('#typeMinSupportersRowAmendment').addClass('hidden');\n                $('#typeAllowMoreSupportersAmendment').addClass('hidden');\n                this.amendmentsHaveSupporters = false;\n            }\n            this.setMaxPdfSupporters();\n        }).trigger('changed.fu.selectlist');\n    }\n\n    private setMaxPdfSupporters() {\n        if (this.amendmentsHaveSupporters || this.motionsHaveSupporters) {\n            $('#typeMaxPdfSupportersRow').removeClass('hidden');\n        } else {\n            $('#typeMaxPdfSupportersRow').addClass('hidden');\n        }\n    }\n\n    private initDeadlines() {\n        $('#deadlineFormTypeComplex input').on(\"change\", (ev) => {\n            if ($(ev.currentTarget).prop('checked')) {\n                $('.deadlineTypeSimple').addClass('hidden');\n                $('.deadlineTypeComplex').removeClass('hidden');\n            } else {\n                $('.deadlineTypeSimple').removeClass('hidden');\n                $('.deadlineTypeComplex').addClass('hidden');\n            }\n        }).trigger('change');\n\n        $('.datetimepicker').each((i, el) => {\n            $(el).datetimepicker({\n                locale: $(el).find(\"input\").data('locale')\n            });\n        });\n\n        const initLinkedDeadlinePickers = ($row) => {\n            let $from = $row.find(\".datetimepickerFrom\"),\n                $to = $row.find(\".datetimepickerTo\");\n            $from.datetimepicker({\n                locale: $from.find(\"input\").data('locale')\n            });\n            $to.datetimepicker({\n                locale: $to.find(\"input\").data('locale'),\n                useCurrent: false\n            });\n\n            const hasError = () => {\n                const fromDate = $from.data(\"DateTimePicker\").date(),\n                    toDate = $to.data(\"DateTimePicker\").date();\n\n                return (fromDate && toDate && toDate.isBefore(fromDate));\n            };\n\n            const setErrorState = () => {\n                if (hasError()) {\n                    $from.addClass(\"has-error\");\n                    $to.addClass(\"has-error\");\n                } else {\n                    $from.removeClass(\"has-error\");\n                    $to.removeClass(\"has-error\");\n                }\n            };\n\n            $from.on(\"dp.change\", setErrorState);\n            $to.on(\"dp.change\", setErrorState);\n        };\n\n        $('.deadlineEntry').each((i, el) => {\n            initLinkedDeadlinePickers($(el));\n        });\n\n        $('.deadlineHolder').each((i, el) => {\n            const $deadlineHolder = $(el),\n                addDeadlineRow = () => {\n                    let html = $('.deadlineRowTemplate').html();\n                    html = html.replace(/TEMPLATE/g, $deadlineHolder.data('type'));\n                    let $newRow = $(html);\n                    $deadlineHolder.find('.deadlineList').append($newRow);\n                    initLinkedDeadlinePickers($newRow);\n                };\n            $deadlineHolder.find('.deadlineAdder').on(\"click\", addDeadlineRow);\n            $deadlineHolder.on('click', '.delRow', (ev) => {\n                $(ev.currentTarget).parents('.deadlineEntry').remove();\n            });\n            if ($deadlineHolder.find('.deadlineList').children().length === 0) {\n                addDeadlineRow();\n            }\n        });\n    }\n\n    private initInitiatorForm() {\n        const $initiatorCanBePerson = $(\"input[name=initiatorCanBePerson]\");\n        const $initiatorCanBeOrga = $(\"input[name=initiatorCanBeOrganization]\");\n        $initiatorCanBePerson.on(\"change\", () => {\n            if ($initiatorCanBePerson.prop(\"checked\")) {\n                $(\".formGroupGender\").removeClass(\"hidden\");\n            } else {\n                $(\".formGroupGender\").addClass(\"hidden\");\n                if (!$initiatorCanBeOrga.prop(\"checked\")) {\n                    $initiatorCanBeOrga.prop(\"checked\", true).trigger(\"change\");\n                }\n            }\n        });\n        $initiatorCanBeOrga.on(\"change\", () => {\n            if ($initiatorCanBeOrga.prop(\"checked\")) {\n                $(\".formGroupResolutionDate\").removeClass(\"hidden\");\n            } else {\n                $(\".formGroupResolutionDate\").addClass(\"hidden\");\n                if (!$initiatorCanBePerson.prop(\"checked\")) {\n                    $initiatorCanBePerson.prop(\"checked\", true).trigger(\"change\");\n                }\n            }\n        });\n    }\n\n    private initSectionList() {\n        let $list = $('#sectionsList'),\n            newCounter = 0;\n\n        $list.data(\"sortable\", Sortable.create(<HTMLElement>$list[0], {\n            handle: '.drag-handle',\n            animation: 150\n        }));\n        $list.on('click', 'a.remover', function (ev) {\n            ev.preventDefault();\n            let $sectionHolder = $(this).parents('li').first(),\n                delId = $sectionHolder.data('id');\n            bootbox.confirm(__t('admin', 'deleteMotionSectionConfirm'), function (result) {\n                if (result) {\n                    $('.adminTypeForm').append('<input type=\"hidden\" name=\"sectionsTodelete[]\" value=\"' + delId + '\">');\n                    $sectionHolder.remove();\n                }\n            });\n        });\n        $list.on('change', '.sectionType', function () {\n            let $li = $(this).parents('li').first(),\n                val = parseInt($(this).val() as string);\n            $li.removeClass('title textHtml textSimple image tabularData');\n            if (val === 0) {\n                $li.addClass('title');\n            } else if (val === 1) {\n                $li.addClass('textSimple');\n            } else if (val === 2) {\n                $li.addClass('textHtml');\n            } else if (val === 3) {\n                $li.addClass('image');\n            } else if (val === 4) {\n                $li.addClass('tabularData');\n                if ($li.find('.tabularDataRow ul > li').length == 0) {\n                    $li.find('.tabularDataRow .addRow').trigger(\"click\").trigger(\"click\").trigger(\"click\");\n                }\n            }\n        });\n        $list.find('.sectionType').trigger('change');\n        $list.on('change', '.maxLenSet', function () {\n            let $li = $(this).parents('li').first();\n            if ($(this).prop('checked')) {\n                $li.addClass('maxLenSet').removeClass('no-maxLenSet');\n            } else {\n                $li.addClass('no-maxLenSet').removeClass('maxLenSet');\n            }\n        });\n        $list.find('.maxLenSet').trigger('change');\n\n        $('.sectionAdder').on('click', function (ev) {\n            ev.preventDefault();\n            let newStr = $('#sectionTemplate').html();\n            newStr = newStr.replace(/#NEW#/g, 'new' + newCounter);\n            let $newObj = $(newStr);\n            $list.append($newObj);\n            newCounter = newCounter + 1;\n\n            $list.find('.sectionType').trigger('change');\n            $list.find('.maxLenSet').trigger('change');\n\n            let $tab = $newObj.find('.tabularDataRow ul');\n            $tab.data(\"sortable\", Sortable.create(<HTMLElement>$tab[0], {\n                handle: '.drag-data-handle',\n                animation: 150\n            }));\n        });\n\n        let dataNewCounter = 0;\n        $list.on('click', '.tabularDataRow .addRow', function (ev) {\n            ev.preventDefault();\n            let $this = $(this),\n                $ul = $this.parent().find(\"ul\"),\n                $row = $($this.data('template').replace(/#NEWDATA#/g, 'new' + dataNewCounter));\n            dataNewCounter = dataNewCounter + 1;\n            $row.removeClass('no0').addClass('no' + $ul.children().length);\n            $ul.append($row);\n            $row.find('input').trigger('focus');\n        });\n\n        $list.on('click', '.tabularDataRow .delRow', function (ev) {\n            let $this = $(this);\n            ev.preventDefault();\n            bootbox.confirm(__t('admin', 'deleteDataConfirm'), function (result) {\n                if (result) {\n                    $this.parents(\"li\").first().remove();\n                }\n            });\n        });\n\n        $list.find('.tabularDataRow ul').each(function () {\n            let $this = $(this);\n            $this.data(\"sortable\", Sortable.create(this, {\n                handle: '.drag-data-handle',\n                animation: 150\n            }));\n        });\n    }\n}\n\n\nnew MotionTypeEdit();\n"]}