{"version":3,"sources":["backend/ChangeProposedProcedure.js","backend/ChangeProposedProcedure.ts"],"names":["define","require","exports","Object","defineProperty","value","ChangeProposedProcedure","[object Object]","$widget","this","savingComment","initElements","initOpener","initStatusSetter","initCommentForm","initVotingBlock","initExplanation","initTags","on","ev","preventDefault","$statusDetails","find","$visibilityInput","$votingStatusInput","$votingBlockId","$tagsSelect","$openerBtn","$","context","data","saveUrl","attr","csrf","val","removeClass","addClass","localStorage","setItem","getItem","selectize","create","plugins","statusChanged","commentsScrollBottom","html","post","ret","$content","children","remove","append","reinitAfterReload","setGlobalProposedStr","window","setTimeout","alert","fail","text","fromName","replyTo","performCallWithReload","notifyProposer","confirm","bootbox","result","setProposerHasAccepted","sendAgain","newVal","setStatus","visible","prop","votingBlockId","tags","items","length","filter","parseInt","toString","currentTarget","init","trigger","parents","saveStatus","bind","setPropserHasAccepted","target","$commentList","scrollTop","scrollHeight","$commentWidget","writeComment","_csrf","success","delHtml","comment","delLink","$comment","dateFormatted","username","id","JSON","stringify","doSaveComment","originalEvent","delComment","first"],"mappings":"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","file":"ChangeProposedProcedure.js","sourcesContent":[null,"const STATUS_REFERRED = 10;\nconst STATUS_VOTE = 11;\nconst STATUS_OBSOLETED_BY = 22;\nconst STATUS_CUSTOM_STRING = 23;\nconst STATUS_PROPOSED_MOVE_TO_OTHER_MOTION = 28;\n\nexport class ChangeProposedProcedure {\n    private $openerBtn: JQuery;\n    private $statusDetails: JQuery;\n    private $visibilityInput: JQuery;\n    private $votingStatusInput: JQuery;\n    private $votingBlockId: JQuery;\n    private $tagsSelect: JQuery;\n    private saveUrl: string;\n    private context: string;\n    private csrf: string;\n    private savingComment: boolean = false;\n\n    constructor(private $widget: JQuery) {\n        this.initElements();\n        this.initOpener();\n        this.initStatusSetter();\n        this.initCommentForm();\n        this.initVotingBlock();\n        this.initExplanation();\n        this.initTags();\n        $widget.on(\"submit\", ev => ev.preventDefault());\n    }\n\n    private initElements() {\n        this.$statusDetails = this.$widget.find('.statusDetails');\n        this.$visibilityInput = this.$widget.find('input[name=proposalVisible]');\n        this.$votingStatusInput = this.$widget.find('input[name=votingStatus]');\n        this.$votingBlockId = this.$widget.find('select[name=votingBlockId]');\n        this.$tagsSelect = this.$widget.find('.proposalTagsSelect');\n        this.$openerBtn = $('.proposedChangesOpener button');\n        this.context = this.$widget.data('context');\n        this.saveUrl = this.$widget.attr('action');\n        this.csrf = this.$widget.find('input[name=_csrf]').val() as string;\n    }\n\n    private initOpener() {\n        this.$openerBtn.on('click', () => {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '1');\n        });\n        this.$widget.on('click', '.closeBtn', () => {\n            this.$widget.addClass('hidden');\n            this.$openerBtn.removeClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '0');\n        });\n\n        if (localStorage.getItem('proposed_procedure_enabled') === '1') {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n        } else {\n            this.$widget.addClass('hidden');\n        }\n    }\n\n    private initTags() {\n        const $tagsSelect: any = this.$tagsSelect;\n\n        $tagsSelect.selectize({\n            create: true,\n            plugins: [\"remove_button\"],\n        });\n\n        $tagsSelect.on(\"change\", () => {\n            this.$widget.addClass('isChanged');\n        });\n    }\n\n    private reinitAfterReload() {\n        this.initElements();\n        this.statusChanged();\n        this.commentsScrollBottom();\n        this.initExplanation();\n        this.initTags();\n        this.$widget.find('.newBlock').addClass('hidden');\n        this.$widget.find('.notifyProposerSection').addClass('hidden');\n    }\n\n    private setGlobalProposedStr(html: string) {\n        $(\".motionData .proposedStatusRow .str\").html(html);\n    }\n\n    private performCallWithReload(data: object) {\n        data['_csrf'] = this.csrf;\n\n        $.post(this.saveUrl, data, (ret) => {\n            if (ret['success']) {\n                let $content = $(ret['html']);\n                this.$widget.children().remove();\n                this.$widget.append($content.children());\n                this.reinitAfterReload();\n                this.$widget.addClass('showSaved').removeClass('isChanged');\n                if (ret['proposalStr']) {\n                    this.setGlobalProposedStr(ret['proposalStr']);\n                }\n                window.setTimeout(() => this.$widget.removeClass('showSaved'), 2000);\n            } else if (ret['error']) {\n                alert(ret['error']);\n            } else {\n                alert('An error occurred');\n            }\n        }).fail(() => {\n            alert('Could not save');\n        });\n    }\n\n    private notifyProposer() {\n        const text = this.$widget.find('textarea[name=proposalNotificationText]').val(),\n            fromName = this.$widget.find('input[name=proposalNotificationFrom]').val(),\n            replyTo = this.$widget.find('input[name=proposalNotificationReply]').val();\n        this.performCallWithReload({\n            'notifyProposer': '1',\n            'text': text,\n            'fromName': fromName,\n            'replyTo': replyTo,\n        });\n    }\n\n    private setPropserHasAccepted() {\n        const confirm = this.$widget.find('.setConfirmation').data('msg');\n        bootbox.confirm(confirm, (result) => {\n            if (result) {\n                this.performCallWithReload({\n                    'setProposerHasAccepted': '1',\n                });\n            }\n        });\n    }\n\n    private sendAgain() {\n        const confirm = this.$widget.find('.sendAgain').data('msg');\n        bootbox.confirm(confirm, (result) => {\n            if (result) {\n                this.performCallWithReload({\n                    'sendAgain': '1',\n                });\n            }\n        });\n    }\n\n    private saveStatus() {\n        const selectize = this.$tagsSelect[0] as any\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        let data = {\n            setStatus: newVal,\n            visible: (this.$visibilityInput.prop('checked') ? 1 : 0),\n            votingBlockId: this.$votingBlockId.val(),\n            tags: selectize.selectize.items,\n        };\n\n        if (newVal == STATUS_REFERRED) {\n            data['proposalComment'] = this.$widget.find('input[name=referredTo]').val();\n        }\n        if (newVal == STATUS_OBSOLETED_BY) {\n            if (this.$widget.find('select[name=obsoletedByAmendment]').length > 0) {\n                data['proposalComment'] = this.$widget.find('select[name=obsoletedByAmendment]').val();\n            } else {\n                data['proposalComment'] = this.$widget.find('select[name=obsoletedByMotion]').val();\n            }\n        }\n        if (newVal == STATUS_PROPOSED_MOVE_TO_OTHER_MOTION) {\n            if (this.$widget.find('select[name=movedToOtherMotion]').length > 0) {\n                data['proposalComment'] = this.$widget.find('select[name=movedToOtherMotion]').val();\n            }\n        }\n        if (newVal == STATUS_CUSTOM_STRING) {\n            data['proposalComment'] = this.$widget.find('input[name=statusCustomStr]').val();\n        }\n        if (newVal == STATUS_VOTE) {\n            data['votingStatus'] = this.$votingStatusInput.filter(':checked').val();\n        }\n        if (data.votingBlockId == 'NEW') {\n            data['votingBlockTitle'] = this.$widget.find('input[name=newBlockTitle]').val();\n        }\n\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            data['proposalExplanation'] = this.$widget.find('textarea[name=proposalExplanation]').val();\n        }\n\n        this.performCallWithReload(data);\n    }\n\n    private statusChanged() {\n        let newVal = parseInt(this.$widget.find('.statusForm input[type=radio]:checked').val() as string, 10);\n        this.$statusDetails.addClass('hidden');\n        this.$statusDetails.filter('.status_' + newVal.toString(10)).removeClass('hidden');\n        if (newVal === 0) {\n            this.$widget.addClass('noStatus');\n        } else {\n            this.$widget.removeClass('noStatus');\n        }\n    }\n\n    private initStatusSetter() {\n        this.$widget.on('change', '.statusForm input[type=radio]', (ev, data) => {\n            if (!$(ev.currentTarget).prop('checked')) {\n                return;\n            }\n            this.statusChanged();\n            if (data && data.init === true) {\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n        this.$widget.find('.statusForm input[type=radio]').trigger('change', {'init': true});\n\n        this.$widget.on('change keyup', 'input, textarea', (ev) => {\n            if ($(ev.currentTarget).parents('.proposalCommentForm').length > 0) { // The comment textfield\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('change', '#obsoletedByAmendment', () => {\n            this.$widget.addClass('isChanged');\n        });\n        this.$widget.on('change', '#movedToOtherMotion', () => {\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('click', '.saving button', this.saveStatus.bind(this));\n\n        this.$widget.on('click', '.notifyProposer', () => {\n            this.$widget.find('.notifyProposerSection').removeClass('hidden');\n        });\n        this.$widget.on('click', '.setConfirmation', this.setPropserHasAccepted.bind(this));\n        this.$widget.on('click', '.sendAgain', this.sendAgain.bind(this));\n        this.$widget.on('click', 'button[name=notificationSubmit]', this.notifyProposer.bind(this));\n    }\n\n    private initVotingBlock() {\n        this.$widget.on('change', '#votingBlockId', () => {\n            this.$widget.addClass('isChanged');\n            if (this.$votingBlockId.val() == 'NEW') {\n                this.$widget.find(\".newBlock\").removeClass('hidden');\n            } else {\n                this.$widget.find(\".newBlock\").addClass('hidden');\n            }\n        });\n        this.$widget.find('.newBlock').addClass('hidden');\n    }\n\n    private initExplanation() {\n        this.$widget.find('input[name=setPublicExplanation]').on('change', (ev) => {\n            if ($(ev.target).prop('checked')) {\n                this.$widget.find('section.publicExplanation').removeClass('hidden');\n            } else {\n                this.$widget.find('section.publicExplanation').addClass('hidden');\n            }\n        });\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            this.$widget.find('section.publicExplanation').removeClass('hidden');\n        } else {\n            this.$widget.find('section.publicExplanation').addClass('hidden');\n        }\n    }\n\n    private commentsScrollBottom() {\n        let $commentList = this.$widget.find('.proposalCommentForm .commentList');\n        $commentList[0].scrollTop = $commentList[0].scrollHeight;\n    }\n\n    private doSaveComment() {\n        let $commentWidget = this.$widget.find('.proposalCommentForm'),\n            $commentList = $commentWidget.find('.commentList'),\n            text = $commentWidget.find('textarea').val();\n\n        if (text == '' || this.savingComment) {\n            return;\n        }\n\n        this.savingComment = true;\n        $.post(this.saveUrl, {\n            writeComment: text,\n            _csrf: this.csrf\n        }, (ev) => {\n            if (ev.success) {\n                let delHtml = '';\n                if (ev.comment.delLink) {\n                    delHtml = '<button type=\"button\" data-url=\"' + ev.comment.delLink + '\" class=\"btn-link delComment\">';\n                    delHtml += '<span class=\"glyphicon glyphicon-trash\"></span></button>';\n                }\n                let $comment = $('<li class=\"comment\"><div class=\"header\"><div class=\"date\"></div>' + delHtml + '<div class=\"name\"></div></div><div class=\"comment\"></div></li>');\n                $comment.find('.date').text(ev.comment.dateFormatted);\n                $comment.find('.name').text(ev.comment.username);\n                $comment.find('.comment').text(ev.comment.text);\n                $comment.data('id', ev.comment.id);\n                $commentList.append($comment);\n                $commentWidget.find('textarea').val('');\n                $commentList[0].scrollTop = $commentList[0].scrollHeight;\n            } else {\n                alert('Could not save: ' + JSON.stringify(ev));\n            }\n            this.savingComment = false;\n        }).fail(() => {\n            alert('Could not save');\n            this.savingComment = false;\n        });\n    }\n\n    private delComment($comment: JQuery) {\n        $.post($comment.find(\".delComment\").data(\"url\"), {\n            \"_csrf\": this.csrf,\n            \"id\": $comment.data(\"id\"),\n        }, (ret) => {\n            if (ret['success']) {\n                $comment.remove();\n            } else {\n                alert(\"Error: \" + ret['error']);\n            }\n        });\n    }\n\n    private initCommentForm() {\n        this.$widget.on('click', '.proposalCommentForm button', () => {\n            this.doSaveComment();\n        });\n        this.commentsScrollBottom();\n\n        this.$widget.on('keypress', '.proposalCommentForm textarea', (ev) => {\n            if (ev.originalEvent['metaKey'] && ev.originalEvent['keyCode'] === 13) {\n                this.doSaveComment();\n            }\n        });\n\n        this.$widget.on('click', '.delComment', (ev) => {\n            this.delComment($(ev.currentTarget).parents(\".comment\").first());\n        });\n    }\n}\n"]}