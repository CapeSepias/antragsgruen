{"version":3,"sources":["backend/ChangeProposedProcedure.ts"],"names":["ChangeProposedProcedure","$widget","this","initElements","initOpener","initStatusSetter","initCommentForm","initVotingBlock","initExplanation","submit","ev","preventDefault","prototype","$statusDetails","find","$visibilityInput","$votingStatusInput","$votingBlockId","$openerBtn","$","context","data","saveUrl","attr","csrf","val","_this","click","removeClass","addClass","localStorage","setItem","on","getItem","reinitAfterReload","statusChanged","commentsScrollBottom","selectlist","setGlobalProposedStr","html","performCallWithReload","post","ret","$content","children","remove","append","window","setTimeout","alert","fail","notifyProposer","saveStatus","newVal","setStatus","visible","prop","votingBlockId","filter","currentTarget","init","trigger","parents","length","bind","change","target","$commentList","scrollTop","scrollHeight","$commentWidget","saving","text","writeComment","_csrf","success","$comment","comment","dateFormatted","username","JSON","stringify","exports"],"mappings":"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","file":"ChangeProposedProcedure.js","sourcesContent":["const STATUS_REFERRED = 10;\nconst STATUS_VOTE = 11;\nconst STATUS_OBSOLETED_BY = 22;\nconst STATUS_CUSTOM_STRING = 23;\n\nexport class ChangeProposedProcedure {\n    private $openerBtn: JQuery;\n    private $statusDetails: JQuery;\n    private $visibilityInput: JQuery;\n    private $votingStatusInput: JQuery;\n    private $votingBlockId: JQuery;\n    private saveUrl: string;\n    private context: string;\n    private csrf: string;\n\n    constructor(private $widget: JQuery) {\n        this.initElements();\n        this.initOpener();\n        this.initStatusSetter();\n        this.initCommentForm();\n        this.initVotingBlock();\n        this.initExplanation();\n        $widget.submit(ev => ev.preventDefault());\n    }\n\n    private initElements() {\n        this.$statusDetails = this.$widget.find('.statusDetails');\n        this.$visibilityInput = this.$widget.find('input[name=proposalVisible]');\n        this.$votingStatusInput = this.$widget.find('input[name=votingStatus]');\n        this.$votingBlockId = this.$widget.find('input[name=votingBlockId]');\n        this.$openerBtn = $('.proposedChangesOpener button');\n        this.context = this.$widget.data('context');\n        this.saveUrl = this.$widget.attr('action');\n        this.csrf = this.$widget.find('input[name=_csrf]').val();\n    }\n\n    private initOpener() {\n        this.$openerBtn.click(() => {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '1');\n        });\n        this.$widget.on('click', '.closeBtn', () => {\n            this.$widget.addClass('hidden');\n            this.$openerBtn.removeClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '0');\n        });\n\n        if (localStorage.getItem('proposed_procedure_enabled') === '1') {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n        } else {\n            this.$widget.addClass('hidden');\n        }\n    }\n\n    private reinitAfterReload() {\n        this.initElements();\n        this.statusChanged();\n        this.commentsScrollBottom();\n        this.initExplanation();\n        this.$widget.find('.newBlock').addClass('hidden');\n        this.$widget.find('.selectlist').selectlist();\n    }\n\n    private setGlobalProposedStr(html: string) {\n        $(\".motionData .proposedStatusRow .str\").html(html);\n    }\n\n    private performCallWithReload(data: object) {\n        data['_csrf'] = this.csrf;\n\n        $.post(this.saveUrl, data, (ret) => {\n            if (ret['success']) {\n                let $content = $(ret['html']);\n                this.$widget.children().remove();\n                this.$widget.append($content.children());\n                this.reinitAfterReload();\n                this.$widget.addClass('showSaved').removeClass('isChanged');\n                if (ret['proposalStr']) {\n                    this.setGlobalProposedStr(ret['proposalStr']);\n                }\n                window.setTimeout(() => this.$widget.removeClass('showSaved'), 2000);\n            } else if (ret['error']) {\n                alert(ret['error']);\n            } else {\n                alert('An error ocurred');\n            }\n        }).fail(() => {\n            alert('Could not save');\n        });\n    }\n\n    private notifyProposer() {\n        this.performCallWithReload({\n            'notifyProposer': '1'\n        });\n    }\n\n    private saveStatus() {\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        let data = {\n            setStatus: newVal,\n            visible: (this.$visibilityInput.prop('checked') ? 1 : 0),\n            votingBlockId: this.$votingBlockId.val(),\n        };\n\n        if (newVal == STATUS_REFERRED) {\n            data['proposalComment'] = this.$widget.find('input[name=referredTo]').val();\n        }\n        if (newVal == STATUS_OBSOLETED_BY) {\n            data['proposalComment'] = this.$widget.find('input[name=obsoletedByAmendment]').val();\n        }\n        if (newVal == STATUS_CUSTOM_STRING) {\n            data['proposalComment'] = this.$widget.find('input[name=statusCustomStr]').val();\n        }\n        if (newVal == STATUS_VOTE) {\n            data['votingStatus'] = this.$votingStatusInput.filter(':checked').val();\n        }\n        if (data.votingBlockId == 'NEW') {\n            data['votingBlockTitle'] = this.$widget.find('input[name=newBlockTitle]').val();\n        }\n\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            data['proposalExplanation'] = this.$widget.find('textarea[name=proposalExplanation]').val();\n        }\n\n        this.performCallWithReload(data);\n    }\n\n    private statusChanged() {\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        this.$statusDetails.addClass('hidden');\n        this.$statusDetails.filter('.status_' + newVal).removeClass('hidden');\n        if (newVal == 0) {\n            this.$widget.addClass('noStatus');\n        } else {\n            this.$widget.removeClass('noStatus');\n        }\n    }\n\n    private initStatusSetter() {\n        this.$widget.on('change', '.statusForm input[type=radio]', (ev, data) => {\n            if (!$(ev.currentTarget).prop('checked')) {\n                return;\n            }\n            this.statusChanged();\n            if (data && data.init === true) {\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n        this.$widget.find('.statusForm input[type=radio]').trigger('change', {'init': true});\n\n        this.$widget.on('change keyup', 'input, textarea', (ev) => {\n            if ($(ev.currentTarget).parents('.proposalCommentForm').length > 0) { // The comment textfield\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('changed.fu.selectlist', '#obsoletedByAmendment', () => {\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('click', '.saving button', this.saveStatus.bind(this));\n        this.$widget.on('click', '.notifyProposer', this.notifyProposer.bind(this));\n    }\n\n    private initVotingBlock() {\n        this.$widget.on('changed.fu.selectlist', '#votingBlockId', () => {\n            this.$widget.addClass('isChanged');\n            if (this.$votingBlockId.val() == 'NEW') {\n                this.$widget.find(\".newBlock\").removeClass('hidden');\n            } else {\n                this.$widget.find(\".newBlock\").addClass('hidden');\n            }\n        });\n        this.$widget.find('.newBlock').addClass('hidden');\n    }\n\n    private initExplanation() {\n        this.$widget.find('input[name=setPublicExplanation]').change((ev) => {\n            if ($(ev.target).prop('checked')) {\n                this.$widget.find('section.publicExplanation').removeClass('hidden');\n            } else {\n                this.$widget.find('section.publicExplanation').addClass('hidden');\n            }\n        });\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            this.$widget.find('section.publicExplanation').removeClass('hidden');\n        } else {\n            this.$widget.find('section.publicExplanation').addClass('hidden');\n        }\n    }\n\n    private commentsScrollBottom() {\n        let $commentList = this.$widget.find('.proposalCommentForm .commentList');\n        $commentList[0].scrollTop = $commentList[0].scrollHeight;\n    }\n\n    private initCommentForm() {\n        this.$widget.on('click', '.proposalCommentForm button', () => {\n            let $commentWidget = this.$widget.find('.proposalCommentForm'),\n                saving = false,\n                $commentList = $commentWidget.find('.commentList'),\n                text = $commentWidget.find('textarea').val();\n\n            if (text == '' || saving) {\n                return;\n            }\n\n            saving = true;\n            $.post(this.saveUrl, {\n                writeComment: text,\n                _csrf: this.csrf\n            }, (ev) => {\n                if (ev.success) {\n                    let $comment = $('<li><div class=\"header\"><div class=\"date\"></div><div class=\"name\"></div></div><div class=\"comment\"></div></li>');\n                    $comment.find('.date').text(ev.comment.dateFormatted);\n                    $comment.find('.name').text(ev.comment.username);\n                    $comment.find('.comment').text(ev.comment.text);\n                    $commentList.append($comment);\n                    $commentWidget.find('textarea').val('');\n                    $commentList[0].scrollTop = $commentList[0].scrollHeight;\n                } else {\n                    alert('Could not save: ' + JSON.stringify(ev));\n                }\n                saving = false;\n            }).fail(() => {\n                alert('Could not save');\n                saving = false;\n            });\n        });\n        this.commentsScrollBottom();\n    }\n}\n"]}