{"version":3,"sources":["backend/ChangeProposedProcedure.ts"],"names":["ChangeProposedProcedure","$widget","this","savingComment","initElements","initOpener","initStatusSetter","initCommentForm","initVotingBlock","initExplanation","initTags","on","ev","preventDefault","prototype","$statusDetails","find","$visibilityInput","$votingStatusInput","$votingBlockId","$tagsSelect","$openerBtn","$","context","data","saveUrl","attr","csrf","val","_this","removeClass","addClass","localStorage","setItem","getItem","selectize","create","plugins","reinitAfterReload","statusChanged","commentsScrollBottom","setGlobalProposedStr","html","performCallWithReload","post","ret","$content","children","remove","append","window","setTimeout","alert","fail","notifyProposer","text","fromName","replyTo","setPropserHasAccepted","confirm","bootbox","result","setProposerHasAccepted","sendAgain","saveStatus","newVal","setStatus","visible","prop","votingBlockId","tags","items","length","filter","parseInt","toString","currentTarget","init","trigger","parents","bind","target","$commentList","scrollTop","scrollHeight","doSaveComment","$commentWidget","writeComment","_csrf","success","delHtml","comment","delLink","$comment","dateFormatted","username","id","JSON","stringify","delComment","originalEvent","first","exports"],"mappings":"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","file":"ChangeProposedProcedure.js","sourcesContent":["const STATUS_REFERRED = 10;\nconst STATUS_VOTE = 11;\nconst STATUS_OBSOLETED_BY = 22;\nconst STATUS_CUSTOM_STRING = 23;\nconst STATUS_PROPOSED_MOVE_TO_OTHER_MOTION = 28;\n\nexport class ChangeProposedProcedure {\n    private $openerBtn: JQuery;\n    private $statusDetails: JQuery;\n    private $visibilityInput: JQuery;\n    private $votingStatusInput: JQuery;\n    private $votingBlockId: JQuery;\n    private $tagsSelect: JQuery;\n    private saveUrl: string;\n    private context: string;\n    private csrf: string;\n    private savingComment: boolean = false;\n\n    constructor(private $widget: JQuery) {\n        this.initElements();\n        this.initOpener();\n        this.initStatusSetter();\n        this.initCommentForm();\n        this.initVotingBlock();\n        this.initExplanation();\n        this.initTags();\n        $widget.on(\"submit\", ev => ev.preventDefault());\n    }\n\n    private initElements() {\n        this.$statusDetails = this.$widget.find('.statusDetails');\n        this.$visibilityInput = this.$widget.find('input[name=proposalVisible]');\n        this.$votingStatusInput = this.$widget.find('input[name=votingStatus]');\n        this.$votingBlockId = this.$widget.find('input[name=votingBlockId]');\n        this.$tagsSelect = this.$widget.find('.proposalTagsSelect');\n        this.$openerBtn = $('.proposedChangesOpener button');\n        this.context = this.$widget.data('context');\n        this.saveUrl = this.$widget.attr('action');\n        this.csrf = this.$widget.find('input[name=_csrf]').val() as string;\n    }\n\n    private initOpener() {\n        this.$openerBtn.on('click', () => {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '1');\n        });\n        this.$widget.on('click', '.closeBtn', () => {\n            this.$widget.addClass('hidden');\n            this.$openerBtn.removeClass('hidden');\n            localStorage.setItem('proposed_procedure_enabled', '0');\n        });\n\n        if (localStorage.getItem('proposed_procedure_enabled') === '1') {\n            this.$widget.removeClass('hidden');\n            this.$openerBtn.addClass('hidden');\n        } else {\n            this.$widget.addClass('hidden');\n        }\n    }\n\n    private initTags() {\n        const $tagsSelect: any = this.$tagsSelect;\n\n        $tagsSelect.selectize({\n            create: true,\n            plugins: [\"remove_button\"],\n        });\n\n        $tagsSelect.on(\"change\", () => {\n            this.$widget.addClass('isChanged');\n        });\n    }\n\n    private reinitAfterReload() {\n        this.initElements();\n        this.statusChanged();\n        this.commentsScrollBottom();\n        this.initExplanation();\n        this.initTags();\n        this.$widget.find('.newBlock').addClass('hidden');\n        //this.$widget.find('.selectlist').selectlist();\n        this.$widget.find('.notifyProposerSection').addClass('hidden');\n    }\n\n    private setGlobalProposedStr(html: string) {\n        $(\".motionData .proposedStatusRow .str\").html(html);\n    }\n\n    private performCallWithReload(data: object) {\n        data['_csrf'] = this.csrf;\n\n        $.post(this.saveUrl, data, (ret) => {\n            if (ret['success']) {\n                let $content = $(ret['html']);\n                this.$widget.children().remove();\n                this.$widget.append($content.children());\n                this.reinitAfterReload();\n                this.$widget.addClass('showSaved').removeClass('isChanged');\n                if (ret['proposalStr']) {\n                    this.setGlobalProposedStr(ret['proposalStr']);\n                }\n                window.setTimeout(() => this.$widget.removeClass('showSaved'), 2000);\n            } else if (ret['error']) {\n                alert(ret['error']);\n            } else {\n                alert('An error occurred');\n            }\n        }).fail(() => {\n            alert('Could not save');\n        });\n    }\n\n    private notifyProposer() {\n        const text = this.$widget.find('textarea[name=proposalNotificationText]').val(),\n            fromName = this.$widget.find('input[name=proposalNotificationFrom]').val(),\n            replyTo = this.$widget.find('input[name=proposalNotificationReply]').val();\n        this.performCallWithReload({\n            'notifyProposer': '1',\n            'text': text,\n            'fromName': fromName,\n            'replyTo': replyTo,\n        });\n    }\n\n    private setPropserHasAccepted() {\n        const confirm = this.$widget.find('.setConfirmation').data('msg');\n        bootbox.confirm(confirm, (result) => {\n            if (result) {\n                this.performCallWithReload({\n                    'setProposerHasAccepted': '1',\n                });\n            }\n        });\n    }\n\n    private sendAgain() {\n        const confirm = this.$widget.find('.sendAgain').data('msg');\n        bootbox.confirm(confirm, (result) => {\n            if (result) {\n                this.performCallWithReload({\n                    'sendAgain': '1',\n                });\n            }\n        });\n    }\n\n    private saveStatus() {\n        const selectize = this.$tagsSelect[0] as any\n        let newVal = this.$widget.find('.statusForm input[type=radio]:checked').val();\n        let data = {\n            setStatus: newVal,\n            visible: (this.$visibilityInput.prop('checked') ? 1 : 0),\n            votingBlockId: this.$votingBlockId.val(),\n            tags: selectize.selectize.items,\n        };\n\n        if (newVal == STATUS_REFERRED) {\n            data['proposalComment'] = this.$widget.find('input[name=referredTo]').val();\n        }\n        if (newVal == STATUS_OBSOLETED_BY) {\n            if (this.$widget.find('select[name=obsoletedByAmendment]').length > 0) {\n                data['proposalComment'] = this.$widget.find('select[name=obsoletedByAmendment]').val();\n            } else {\n                data['proposalComment'] = this.$widget.find('select[name=obsoletedByMotion]').val();\n            }\n        }\n        if (newVal == STATUS_PROPOSED_MOVE_TO_OTHER_MOTION) {\n            if (this.$widget.find('select[name=movedToOtherMotion]').length > 0) {\n                data['proposalComment'] = this.$widget.find('select[name=movedToOtherMotion]').val();\n            }\n        }\n        if (newVal == STATUS_CUSTOM_STRING) {\n            data['proposalComment'] = this.$widget.find('input[name=statusCustomStr]').val();\n        }\n        if (newVal == STATUS_VOTE) {\n            data['votingStatus'] = this.$votingStatusInput.filter(':checked').val();\n        }\n        if (data.votingBlockId == 'NEW') {\n            data['votingBlockTitle'] = this.$widget.find('input[name=newBlockTitle]').val();\n        }\n\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            data['proposalExplanation'] = this.$widget.find('textarea[name=proposalExplanation]').val();\n        }\n\n        this.performCallWithReload(data);\n    }\n\n    private statusChanged() {\n        let newVal = parseInt(this.$widget.find('.statusForm input[type=radio]:checked').val() as string, 10);\n        this.$statusDetails.addClass('hidden');\n        this.$statusDetails.filter('.status_' + newVal.toString(10)).removeClass('hidden');\n        if (newVal === 0) {\n            this.$widget.addClass('noStatus');\n        } else {\n            this.$widget.removeClass('noStatus');\n        }\n    }\n\n    private initStatusSetter() {\n        this.$widget.on('change', '.statusForm input[type=radio]', (ev, data) => {\n            if (!$(ev.currentTarget).prop('checked')) {\n                return;\n            }\n            this.statusChanged();\n            if (data && data.init === true) {\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n        this.$widget.find('.statusForm input[type=radio]').trigger('change', {'init': true});\n\n        this.$widget.on('change keyup', 'input, textarea', (ev) => {\n            if ($(ev.currentTarget).parents('.proposalCommentForm').length > 0) { // The comment textfield\n                return;\n            }\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('change', '#obsoletedByAmendment', () => {\n            this.$widget.addClass('isChanged');\n        });\n        this.$widget.on('change', '#movedToOtherMotion', () => {\n            this.$widget.addClass('isChanged');\n        });\n\n        this.$widget.on('click', '.saving button', this.saveStatus.bind(this));\n\n        this.$widget.on('click', '.notifyProposer', () => {\n            this.$widget.find('.notifyProposerSection').removeClass('hidden');\n        });\n        this.$widget.on('click', '.setConfirmation', this.setPropserHasAccepted.bind(this));\n        this.$widget.on('click', '.sendAgain', this.sendAgain.bind(this));\n        this.$widget.on('click', 'button[name=notificationSubmit]', this.notifyProposer.bind(this));\n    }\n\n    private initVotingBlock() {\n        this.$widget.on('changed.fu.selectlist', '#votingBlockId', () => {\n            this.$widget.addClass('isChanged');\n            if (this.$votingBlockId.val() == 'NEW') {\n                this.$widget.find(\".newBlock\").removeClass('hidden');\n            } else {\n                this.$widget.find(\".newBlock\").addClass('hidden');\n            }\n        });\n        this.$widget.find('.newBlock').addClass('hidden');\n    }\n\n    private initExplanation() {\n        this.$widget.find('input[name=setPublicExplanation]').on('change', (ev) => {\n            if ($(ev.target).prop('checked')) {\n                this.$widget.find('section.publicExplanation').removeClass('hidden');\n            } else {\n                this.$widget.find('section.publicExplanation').addClass('hidden');\n            }\n        });\n        if (this.$widget.find('input[name=setPublicExplanation]').prop('checked')) {\n            this.$widget.find('section.publicExplanation').removeClass('hidden');\n        } else {\n            this.$widget.find('section.publicExplanation').addClass('hidden');\n        }\n    }\n\n    private commentsScrollBottom() {\n        let $commentList = this.$widget.find('.proposalCommentForm .commentList');\n        $commentList[0].scrollTop = $commentList[0].scrollHeight;\n    }\n\n    private doSaveComment() {\n        let $commentWidget = this.$widget.find('.proposalCommentForm'),\n            $commentList = $commentWidget.find('.commentList'),\n            text = $commentWidget.find('textarea').val();\n\n        if (text == '' || this.savingComment) {\n            return;\n        }\n\n        this.savingComment = true;\n        $.post(this.saveUrl, {\n            writeComment: text,\n            _csrf: this.csrf\n        }, (ev) => {\n            if (ev.success) {\n                let delHtml = '';\n                if (ev.comment.delLink) {\n                    delHtml = '<button type=\"button\" data-url=\"' + ev.comment.delLink + '\" class=\"btn-link delComment\">';\n                    delHtml += '<span class=\"glyphicon glyphicon-trash\"></span></button>';\n                }\n                let $comment = $('<li class=\"comment\"><div class=\"header\"><div class=\"date\"></div>' + delHtml + '<div class=\"name\"></div></div><div class=\"comment\"></div></li>');\n                $comment.find('.date').text(ev.comment.dateFormatted);\n                $comment.find('.name').text(ev.comment.username);\n                $comment.find('.comment').text(ev.comment.text);\n                $comment.data('id', ev.comment.id);\n                $commentList.append($comment);\n                $commentWidget.find('textarea').val('');\n                $commentList[0].scrollTop = $commentList[0].scrollHeight;\n            } else {\n                alert('Could not save: ' + JSON.stringify(ev));\n            }\n            this.savingComment = false;\n        }).fail(() => {\n            alert('Could not save');\n            this.savingComment = false;\n        });\n    }\n\n    private delComment($comment: JQuery) {\n        $.post($comment.find(\".delComment\").data(\"url\"), {\n            \"_csrf\": this.csrf,\n            \"id\": $comment.data(\"id\"),\n        }, (ret) => {\n            if (ret['success']) {\n                $comment.remove();\n            } else {\n                alert(\"Error: \" + ret['error']);\n            }\n        });\n    }\n\n    private initCommentForm() {\n        this.$widget.on('click', '.proposalCommentForm button', () => {\n            this.doSaveComment();\n        });\n        this.commentsScrollBottom();\n\n        this.$widget.on('keypress', '.proposalCommentForm textarea', (ev) => {\n            if (ev.originalEvent['metaKey'] && ev.originalEvent['keyCode'] === 13) {\n                this.doSaveComment();\n            }\n        });\n\n        this.$widget.on('click', '.delComment', (ev) => {\n            this.delComment($(ev.currentTarget).parents(\".comment\").first());\n        });\n    }\n}\n"]}