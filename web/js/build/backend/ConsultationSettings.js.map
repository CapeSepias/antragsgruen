{"version":3,"sources":["backend/ConsultationSettings.ts"],"names":["ConsultationSettings","$form","this","initLogoUpload","initUrlPath","initTags","initAdminMayEdit","initSingleMotionMode","$","tooltip","prototype","on","ev","preventDefault","addClass","removeClass","prop","change","$adminsMayEdit","$iniatorsMayEdit","parents","first","parent","confirmMessage","__t","bootbox","confirm","result","find","htmlEntityDecode","html","el","document","createElement","innerHTML","innerText","_this","submit","i","items","pillbox","tags","$node","length","text","push","id","name","attr","JSON","stringify","append","Sortable","create","getElementById","draggable","$logoRow","$uploadLabel","src","currentTarget","val","prepend","data","path","split","filename","exports"],"mappings":"yGAIA,IAAAA,EAAA,WACI,SAAAA,EAAoBC,GAAAC,KAAAD,MAAAA,EAChBC,KAAKC,iBACLD,KAAKE,cACLF,KAAKG,WACLH,KAAKI,mBACLJ,KAAKK,uBAELC,EAAE,2BAA2BC,UA2FrC,OAxFYT,EAAAU,UAAAN,YAAR,WACII,EAAE,4BAA4BG,GAAG,QAAS,SAACC,GACvCA,EAAGC,iBACHL,EAAE,0BAA0BM,SAAS,UACrCN,EAAE,0BAA0BO,YAAY,aAIxCf,EAAAU,UAAAH,qBAAR,WACIC,EAAE,qBAAqBG,GAAG,SAAU,WAC5BH,EAAEN,MAAMc,KAAK,WACbR,EAAE,mBAAmBO,YAAY,UAEjCP,EAAE,mBAAmBM,SAAS,YAEnCG,UAGCjB,EAAAU,UAAAJ,iBAAR,WACI,IAAIY,EAAiBV,EAAE,kBACnBW,EAAmBX,EAAE,oBAAoBY,QAAQ,SAASC,QAAQC,SACtEJ,EAAeP,GAAG,SAAU,WACxB,GAAIH,EAAEN,MAAMc,KAAK,WACbG,EAAiBJ,YAAY,cAC1B,CACH,IAAIQ,EAAiBC,IAAI,QAAS,uBAClCC,QAAQC,QAAQH,EAAgB,SAAUI,GAClCA,GACAR,EAAiBL,SAAS,UAC1BK,EAAiBS,KAAK,SAASZ,KAAK,WAAW,IAE/CE,EAAeF,KAAK,WAAW,QAK1CE,EAAeF,KAAK,YAAYG,EAAiBL,SAAS,WAG3Dd,EAAAU,UAAAmB,iBAAR,SAAyBC,GACrB,IAAMC,EAAkBC,SAASC,cAAc,OAE/C,OADAF,EAAGG,UAAYJ,EACRC,EAAGI,WAGNnC,EAAAU,UAAAL,SAAR,WAAA,IAAA+B,EAAAlC,KACIA,KAAKD,MAAMoC,OAAO,WACd,IAGIC,EAHAC,EAAQ/B,EAAE,aAAagC,QAAQ,SAC/BC,EAAO,GACPC,EAAQlC,EAAE,qCAEd,IAAK8B,EAAI,EAAGA,EAAIC,EAAMI,OAAQL,IAAK,CAC/B,IAAMM,EAAOR,EAAKP,iBAAiBU,EAAMD,GAAGM,WAChB,IAAhBL,EAAMD,GAAK,GACnBG,EAAKI,KAAK,CAACC,GAAM,EAAGC,KAAQH,IAE5BH,EAAKI,KAAK,CAACC,GAAMP,EAAMD,GAAGQ,GAAIC,KAAQH,IAG9CF,EAAMM,KAAK,QAASC,KAAKC,UAAUT,IACnCL,EAAKnC,MAAMkD,OAAOT,KAGtBU,SAASC,OAAOrB,SAASsB,eAAe,cAAe,CAACC,UAAW,WAG/DvD,EAAAU,UAAAP,eAAR,WACI,IAAMqD,EAAWtD,KAAKD,MAAM2B,KAAK,YAC7B6B,EAAeD,EAAS5B,KAAK,0BACjC4B,EAAS7C,GAAG,QAAS,0BAA2B,SAAAC,GAC5CA,EAAGC,iBACH,IAAM6C,EAAMlD,EAAEI,EAAG+C,eAAe/B,KAAK,OAAOoB,KAAK,OACjDQ,EAAS5B,KAAK,gCAAgCgC,IAAIF,GACD,IAA7CF,EAAS5B,KAAK,oBAAoBe,QAClCa,EAAS5B,KAAK,gBAAgBiC,QAAQ,uBAE1CL,EAAS5B,KAAK,oBAAoBoB,KAAK,MAAOU,GAAK3C,YAAY,UAC/D0C,EAAab,KAAKa,EAAaK,KAAK,UACpCN,EAAS5B,KAAK,oBAAoBgC,IAAI,MAE1CJ,EAAS5B,KAAK,oBAAoBX,OAAO,WACrC,IAAM8C,EAAQP,EAAS5B,KAAK,oBAAoBgC,MAAiBI,MAAM,MACjEC,EAAWF,EAAKA,EAAKpB,OAAS,GACpCa,EAAS5B,KAAK,gCAAgCgC,IAAI,IAClDJ,EAAS5B,KAAK,oBAAoBd,SAAS,UAC3C2C,EAAab,KAAKqB,MAG9BjE,EAnGA,GAAakE,EAAAlE,qBAAAA","file":"ConsultationSettings.js","sourcesContent":["/// <reference path=\"../typings/fuelux/index.d.ts\" />\n\ndeclare let Sortable: any;\n\nexport class ConsultationSettings {\n    constructor(private $form: JQuery) {\n        this.initLogoUpload();\n        this.initUrlPath();\n        this.initTags();\n        this.initAdminMayEdit();\n        this.initSingleMotionMode();\n\n        $('[data-toggle=\"tooltip\"]').tooltip();\n    }\n\n    private initUrlPath() {\n        $('.urlPathHolder .shower a').on(\"click\", (ev) => {\n            ev.preventDefault();\n            $('.urlPathHolder .shower').addClass('hidden');\n            $('.urlPathHolder .holder').removeClass('hidden');\n        });\n    }\n\n    private initSingleMotionMode() {\n        $(\"#singleMotionMode\").on(\"change\", function () {\n            if ($(this).prop(\"checked\")) {\n                $(\"#forceMotionRow\").removeClass(\"hidden\");\n            } else {\n                $(\"#forceMotionRow\").addClass(\"hidden\");\n            }\n        }).change();\n    }\n\n    private initAdminMayEdit() {\n        let $adminsMayEdit = $(\"#adminsMayEdit\"),\n            $iniatorsMayEdit = $(\"#iniatorsMayEdit\").parents(\"label\").first().parent();\n        $adminsMayEdit.on(\"change\", function () {\n            if ($(this).prop(\"checked\")) {\n                $iniatorsMayEdit.removeClass(\"hidden\");\n            } else {\n                let confirmMessage = __t(\"admin\", \"adminMayEditConfirm\");\n                bootbox.confirm(confirmMessage, function (result) {\n                    if (result) {\n                        $iniatorsMayEdit.addClass(\"hidden\");\n                        $iniatorsMayEdit.find(\"input\").prop(\"checked\", false);\n                    } else {\n                        $adminsMayEdit.prop(\"checked\", true);\n                    }\n                });\n            }\n        });\n        if (!$adminsMayEdit.prop(\"checked\")) $iniatorsMayEdit.addClass(\"hidden\");\n    }\n\n    private htmlEntityDecode(html: string): string {\n        const el: HTMLElement = document.createElement('div');\n        el.innerHTML = html;\n        return el.innerText;\n    }\n\n    private initTags() {\n        this.$form.submit(() => {\n            let items = $(\"#tagsList\").pillbox('items'),\n                tags = [],\n                $node = $('<input type=\"hidden\" name=\"tags\">'),\n                i;\n            for (i = 0; i < items.length; i++) {\n                const text = this.htmlEntityDecode(items[i].text);\n                if (typeof (items[i].id) == 'undefined') {\n                    tags.push({\"id\": 0, \"name\": text});\n                } else {\n                    tags.push({\"id\": items[i].id, \"name\": text});\n                }\n            }\n            $node.attr(\"value\", JSON.stringify(tags));\n            this.$form.append($node);\n        });\n\n        Sortable.create(document.getElementById(\"tagsListUl\"), {draggable: '.pill'});\n    }\n\n    private initLogoUpload() {\n        const $logoRow = this.$form.find('.logoRow'),\n            $uploadLabel = $logoRow.find('.uploadCol label .text');\n        $logoRow.on('click', '.imageChooserDd ul    a', ev => {\n            ev.preventDefault();\n            const src = $(ev.currentTarget).find(\"img\").attr(\"src\");\n            $logoRow.find('input[name=consultationLogo]').val(src);\n            if ($logoRow.find('.logoPreview img').length === 0) {\n                $logoRow.find('.logoPreview').prepend('<img src=\"\" alt=\"\">');\n            }\n            $logoRow.find('.logoPreview img').attr('src', src).removeClass('hidden');\n            $uploadLabel.text($uploadLabel.data('title'));\n            $logoRow.find(\"input[type=file]\").val('');\n        });\n        $logoRow.find(\"input[type=file]\").change(() => {\n            const path = ($logoRow.find(\"input[type=file]\").val() as string).split('\\\\');\n            const filename = path[path.length - 1];\n            $logoRow.find('input[name=consultationLogo]').val('');\n            $logoRow.find(\".logoPreview img\").addClass('hidden');\n            $uploadLabel.text(filename);\n        });\n    }\n}\n"]}