{"version":3,"sources":["backend/MotionSupporterEdit.ts"],"names":["MotionSupporterEdit","$supporterHolder","this","$sortable","find","Sortable","create","draggable","$","click","ev","append","data","preventDefault","on","parents","first","remove","$fullTextHolder","lines","val","split","template","getNewElement","$rows","i","length","$row","eq","$newEl","$firstAffectedRow","parts","trim","select","focus","scrollintoview","exports"],"mappings":"uDAEA,IAAAA,GAAA,WACI,QAAAA,GAAoBC,GAAAC,KAAAD,iBAAAA,CAChB,IAAIE,GAAYD,KAAKD,iBAAiBG,KAAK,OAC3CC,UAASC,OAAOH,EAAU,IAAKI,UAAW,OAE1CC,EAAE,sBAAsBC,MAAM,SAAUC,GACpCP,EAAUQ,OAAOH,EAAEN,MAAMU,KAAK,YAC9BF,EAAGG,mBAEPV,EAAUW,GAAG,QAAS,gBAAiB,SAAUJ,GAC7CA,EAAGG,iBACHL,EAAEN,MAAMa,QAAQ,MAAMC,QAAQC,UAGlC,IAAIC,GAAkBV,EAAE,kBACxBP,GAAiBG,KAAK,gBAAgBK,MAAM,WAexC,IAAK,GAdDU,GAAQD,EAAgBd,KAAK,YAAYgB,MAAMC,MAAM,KACrDC,EAAWd,EAAE,sBAAsBI,KAAK,WACxCW,EAAgB,WAEZ,IAAK,GADDC,GAAQrB,EAAUC,KAAK,QAClBqB,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACnC,GAAIE,GAAOH,EAAMI,GAAGH,EACpB,IAAyC,IAArCE,EAAKvB,KAAK,kBAAkBgB,OAAoD,IAArCO,EAAKvB,KAAK,kBAAkBgB,MAAa,MAAOO,GAGnG,GAAIE,GAASrB,EAAEc,EAEf,OADAnB,GAAUQ,OAAOkB,GACVA,GAEXC,EAAoB,KACfL,EAAI,EAAGA,EAAIN,EAAMO,OAAQD,IAC9B,GAAgB,IAAZN,EAAMM,GAAV,CAGA,GAAII,GAASN,GAEb,IADyB,MAArBO,IAA2BA,EAAoBD,GAC/CA,EAAOzB,KAAK,uBAAuBsB,OAAS,EAAG,CAC/C,GAAIK,GAAQZ,EAAMM,GAAGJ,MAAM,IAC3BQ,GAAOzB,KAAK,uBAAuBgB,IAAIW,EAAM,GAAGC,QAC5CD,EAAML,OAAS,GACfG,EAAOzB,KAAK,uBAAuBgB,IAAIW,EAAM,GAAGC,YAGpDH,GAAOzB,KAAK,uBAAuBgB,IAAID,EAAMM,IAGrDP,EAAgBd,KAAK,YAAY6B,SAASC,QAC1CJ,EAAkBK,mBAG9B,MAAAnC,KAlDaoC,GAAApC,oBAAAA","file":"MotionSupporterEdit.js","sourcesContent":["declare let Sortable: any;\n\nexport class MotionSupporterEdit {\n    constructor(private $supporterHolder: JQuery) {\n        let $sortable = this.$supporterHolder.find(\"> ul\");\n        Sortable.create($sortable[0], {draggable: 'li'});\n\n        $(\".supporterRowAdder\").click(function (ev) {\n            $sortable.append($(this).data(\"content\"));\n            ev.preventDefault();\n        });\n        $sortable.on(\"click\", \".delSupporter\", function (ev) {\n            ev.preventDefault();\n            $(this).parents(\"li\").first().remove();\n        });\n\n        let $fullTextHolder = $(\"#fullTextHolder\");\n        $supporterHolder.find(\".fullTextAdd\").click(function () {\n            let lines = $fullTextHolder.find('textarea').val().split(\";\"),\n                template = $(\".supporterRowAdder\").data(\"content\"),\n                getNewElement = function () {\n                    let $rows = $sortable.find(\"> li\");\n                    for (let i = 0; i < $rows.length; i++) {\n                        let $row = $rows.eq(i);\n                        if ($row.find(\".supporterName\").val() == '' && $row.find(\".supporterOrga\").val() == '') return $row;\n                    }\n                    // No empty row found\n                    let $newEl = $(template);\n                    $sortable.append($newEl);\n                    return $newEl;\n                };\n            let $firstAffectedRow = null;\n            for (let i = 0; i < lines.length; i++) {\n                if (lines[i] == '') {\n                    continue;\n                }\n                let $newEl = getNewElement();\n                if ($firstAffectedRow == null) $firstAffectedRow = $newEl;\n                if ($newEl.find('input.supporterOrga').length > 0) {\n                    let parts = lines[i].split(',');\n                    $newEl.find('input.supporterName').val(parts[0].trim());\n                    if (parts.length > 1) {\n                        $newEl.find('input.supporterOrga').val(parts[1].trim());\n                    }\n                } else {\n                    $newEl.find('input.supporterName').val(lines[i]);\n                }\n            }\n            $fullTextHolder.find('textarea').select().focus();\n            $firstAffectedRow.scrollintoview();\n        });\n    }\n}\n"]}