{"version":3,"sources":["backend/AgendaEdit.js","backend/AgendaEdit.ts"],"names":["define","require","exports","Object","defineProperty","value","AgendaEdit","[object Object]","$widget","this","delAgendaItemStr","$agenda","$","locale","attr","addClass","nestedSortable","handle","items","toleranceElement","placeholder","tolerance","forcePlaceholderSize","helper","axis","update","trigger","on","saveNewOrder","find","each","i","el","prepareAgendaItem","prepareAgendaList","agendaItemAdd","bind","agendaDateAdd","showTimesChanges","delAgendaItem","editAgendaItem","submitSingleItemForm","$ol","children","$li","length","push","type","id","parseInt","data","buildAgendaStruct","saveUrl","structure","post","_csrf","val","JSON","stringify","ret","alert","ev","preventDefault","target","parents","first","$parentLi","position","prevAll","parentId","$form","saveData","title","hasClass","date","datetimepicker","format","prop","$newItem","replaceWith","delUrl","bootbox","confirm","__t","result","remove","$newElement","before","removeClass","$item","prepend","append","stopPropagation","preDate","moment","defaultDate","$list","full","str","$el"],"mappings":"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","file":"AgendaEdit.js","sourcesContent":[null,"/// <reference path=\"../typings/nestedSortable/index.d.ts\" />\n\ndeclare let moment: any;\n\nexport class AgendaEdit {\n    private readonly $agenda: JQuery;\n    private readonly locale: string;\n\n    private delAgendaItemStr = '<a href=\"#\" class=\"delAgendaItem\"><span class=\"glyphicon glyphicon-minus-sign\"></span></a>';\n\n    constructor(private $widget: JQuery) {\n        this.$agenda = $('.motionListWithinAgenda');\n        this.locale = $(\"html\").attr('lang');\n\n        this.$agenda.addClass('agendaListEditing');\n        this.$agenda.nestedSortable({\n            handle: '.moveHandle',\n            items: 'li.agendaItem',\n            toleranceElement: '> div',\n            placeholder: 'movePlaceholder',\n            tolerance: 'pointer',\n            forcePlaceholderSize: true,\n            helper: 'clone',\n            axis: 'y',\n            update: () => {\n                this.$agenda.trigger(\"antragsgruen:agenda-change\").trigger(\"antragsgruen:agenda-reordered\");\n            }\n        });\n        this.$agenda.on(\"antragsgruen:agenda-reordered\", () => {\n            this.saveNewOrder();\n        });\n        this.$agenda.find('.agendaItem').each((i, el) => {\n            this.prepareAgendaItem($(el));\n        });\n\n        this.prepareAgendaList(this.$agenda, true);\n\n\n        this.$agenda.on('click', '.agendaItemAdder .addEntry', this.agendaItemAdd.bind(this));\n        this.$agenda.on('click', '.agendaItemAdder .addDate', this.agendaDateAdd.bind(this));\n        this.$agenda.on('change', '.agendaItemAdder .showTimes input', this.showTimesChanges.bind(this));\n        this.$agenda.on('click', '.delAgendaItem', this.delAgendaItem.bind(this));\n        this.$agenda.on('click', '.editAgendaItem', this.editAgendaItem.bind(this));\n        this.$agenda.on('submit', '.agendaItemEditForm', this.submitSingleItemForm.bind(this));\n        this.$agenda.on('submit', '.agendaDateEditForm', this.submitSingleItemForm.bind(this));\n    }\n\n    buildAgendaStruct($ol) {\n        let items = [];\n        $ol.children('.agendaItem').each((i, el) => {\n            const $li = $(el);\n            if ($li.find('> div > .agendaDateEditForm').length > 0) {\n                items.push({\n                    'type': 'date',\n                    'id': parseInt($li.data(\"id\")),\n                    'children': this.buildAgendaStruct($li.find('> ol'))\n                });\n            } else {\n                items.push({\n                    'type': 'std',\n                    'id': parseInt($li.data(\"id\")),\n                    'children': this.buildAgendaStruct($li.find('> ol'))\n                });\n            }\n        });\n        return items;\n    }\n\n    private saveNewOrder() {\n        const saveUrl = this.$widget.data(\"save-order\") as string,\n            structure = this.buildAgendaStruct(this.$widget.find(\"> ol\"));\n\n        $.post(saveUrl, {\n            '_csrf': $('input[name=_csrf]').val(),\n            'data': JSON.stringify(structure),\n        }, ret => {\n            if (!ret['success']) {\n                alert(\"Could not save: \" + ret['message']);\n                return;\n            }\n            this.$agenda.trigger(\"antragsgruen:agenda-change\");\n        });\n    }\n\n    submitSingleItemForm(ev: Event) {\n        ev.preventDefault();\n        let $li = $(ev.target).parents('li.agendaItem').first(),\n            $parentLi = $li.parents('li').first(),\n            position = $li.prevAll().length,\n            parentId = ($parentLi.length > 0 ? $parentLi.data('id') : null),\n            $form = $(ev.target),\n            saveUrl = $li.data('save-url') as string;\n\n        const saveData = {\n            'parentId': parentId,\n            'position': position,\n            'title': $form.find('input[name=title]').val() as string,\n        };\n\n        if ($li.hasClass('agendaItemDate')) {\n            saveData['type'] = 'date';\n            const date = ($form.find(\".date\") as any).datetimepicker(\"date\");\n            if (date) {\n                saveData['date'] = date.format(\"YYYY-MM-DD\");\n            } else {\n                saveData['date'] = null;\n            }\n        } else {\n            saveData['type'] = 'agendaItem';\n            saveData['inProposedProcedures'] = $form.find('input[name=inProposedProcedures]').prop('checked');\n            saveData['motionType'] = parseInt($form.find('select[name=motionType]').val() as string);\n            saveData['time'] = $form.find('input[name=time]').val() as string;\n            saveData['code'] = $form.find('input[name=code]').val() as string;\n        }\n\n        $.post(saveUrl, {\n            '_csrf': $('input[name=_csrf]').val(),\n            'data': JSON.stringify(saveData),\n        }, ret => {\n            if (!ret['success']) {\n                alert(\"Could not save: \" + ret['message']);\n                return;\n            }\n            const $newItem = $(ret['html']);\n            $li.replaceWith($newItem);\n            this.prepareAgendaItem($newItem);\n            $('ol.motionListWithinAgenda').trigger(\"antragsgruen:agenda-change\");\n        });\n    }\n\n    delAgendaItem(ev: Event) {\n        ev.preventDefault();\n        let $li = $(ev.target).parents('li.agendaItem').first(),\n            delUrl = $li.data('del-url') as string;\n        bootbox.confirm(__t(\"admin\", \"agendaDelEntryConfirm\"), (result) => {\n            if (result) {\n                $.post(delUrl, {\n                    '_csrf': $('input[name=_csrf]').val(),\n                }, ret => {\n                    if (!ret['success']) {\n                        alert(\"Could not delete: \" + ret['message']);\n                        return;\n                    }\n                    $li.remove();\n                    $('ol.motionListWithinAgenda').trigger(\"antragsgruen:agenda-change\");\n                });\n            }\n        });\n    }\n\n    editAgendaItem(ev: Event) {\n        ev.preventDefault();\n        let $li = $(ev.target).parents('li.agendaItem').first();\n        $li.addClass('editing');\n        $li.find('> div > .agendaItemEditForm input[name=code]').trigger(\"focus\").trigger(\"select\");\n    }\n\n    agendaItemAdd(ev: Event) {\n        ev.preventDefault();\n        let $newElement = $($('#agendaNewElementTemplate').val() as string),\n            $adder = $(ev.target).parents('.agendaItemAdder').first();\n        $adder.before($newElement);\n        this.prepareAgendaItem($newElement);\n        $newElement.find('.editAgendaItem').trigger('click');\n        $newElement.find('.agendaItemEditForm input.code').trigger(\"focus\");\n    }\n\n    agendaDateAdd(ev: Event) {\n        ev.preventDefault();\n        let $newElement = $($('#agendaNewDateTemplate').val() as string),\n            $adder = $(ev.target).parents('.agendaItemAdder').first();\n        $adder.before($newElement);\n        this.prepareAgendaItem($newElement);\n        $newElement.find('.editAgendaItem').trigger('click');\n    }\n\n    showTimesChanges() {\n        if (this.$widget.find('.agendaItemAdder .showTimes input').prop(\"checked\")) {\n            this.$agenda.addClass('showTimes').removeClass('noShowTimes');\n        } else {\n            this.$agenda.removeClass('showTimes').addClass('noShowTimes');\n        }\n    }\n\n    prepareAgendaItem($item) {\n        $item.find('> div').prepend('<span class=\"glyphicon glyphicon-resize-vertical moveHandle\"></span>');\n        $item.find('> div > h3').append('<a href=\"#\" class=\"editAgendaItem\"><span class=\"glyphicon glyphicon-pencil\"></span></a>');\n        $item.find('> div > h3').append(this.delAgendaItemStr);\n        $item.find('> div li.checkbox').on('click', (ev) => {\n            ev.stopPropagation();\n        });\n\n        $item.find('> ol.agenda').each((i, el) => {\n            this.prepareAgendaList($(el), false);\n        });\n\n        $item.find(\"> div .input-group.time\").datetimepicker({\n            locale: this.locale,\n            format: 'LT'\n        });\n\n        $item.find(\"> div .input-group.date\").each((i, el) => {\n            let preDate = null;\n            if ($(el).data(\"date\")) {\n                preDate = moment($(el).data(\"date\"), \"YYYY-MM-DD\", this.locale);\n            }\n            $(el).datetimepicker({\n                locale: this.locale,\n                format: 'dddd, Do MMMM YYYY',\n                defaultDate: preDate\n            });\n        });\n    }\n\n    prepareAgendaList($list, full: boolean) {\n        let str = '<li class=\"agendaItemAdder mjs-nestedSortable-no-nesting mjs-nestedSortable-disabled\">' +\n            '<a href=\"#\" class=\"addEntry\"><span class=\"glyphicon glyphicon-plus-sign\"></span> ' + __t('admin', 'agendaAddEntry') + '</a>';\n        if (full) {\n            str += '<a href=\"#\" class=\"addDate\"><span class=\"glyphicon glyphicon-plus-sign\"></span> ' + __t('admin', 'agendaAddDate') + '</a>' +\n                '<span class=\"spacer\"></span>' +\n            '<label class=\"showTimes\"><input type=\"checkbox\" class=\"showTimes\"> ' + __t('admin', 'agendaShowTimes') + '</label>';\n        }\n        str += '</li>';\n        const $el = $(str);\n        if (this.$agenda.hasClass('showTimes')) {\n            $el.find(\".showTimes input\").prop(\"checked\", true);\n        }\n        $list.append($el);\n    }\n}\n"]}