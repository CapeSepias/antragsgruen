{"version":3,"sources":["backend/AmendmentEditProposedChange.ts"],"names":["AmendmentEditProposedChange","$form","this","hasChanged","textEditCalled","on","$","window","off","onLeavePage","prototype","_this","each","i","el","$textarea","find","ckeditor","AntragsgruenEditor_1","AntragsgruenEditor","attr","getEditor","parents","submit","parent","val","getData","plugins","lite","findPlugin","acceptAll","onContentChanged","bind","click","ev","$text","currentTarget","setData","data","addClass","__t","hasClass","exports"],"mappings":"0IAEA,IAAAA,EAAA,WAGI,SAAAA,EAA2BC,GAAAC,KAAAD,MAAAA,EAFnBC,KAAAC,YAAsB,EAG1BD,KAAKE,iBAELH,EAAMI,GAAG,SAAU,WACfC,EAAEC,QAAQC,IAAI,eAAgBR,EAA4BS,eA4CtE,OAxCYT,EAAAU,UAAAN,eAAR,WAAA,IAAAO,EAAAT,KACII,EAAE,kDAAkDM,KAAK,SAACC,EAAGC,GACzD,IACIC,EADUT,EAAEQ,GACQE,KAAK,eAGzBC,EAD6B,IAAIC,EAAAC,mBAAmBJ,EAAUK,KAAK,OACzCC,YAE9BN,EAAUO,QAAQ,QAAQC,OAAO,WAC7BR,EAAUS,SAASR,KAAK,gBAAgBS,IAAIR,EAASS,gBAChB,IAA1BT,EAASU,QAAY,OAC5BV,EAASU,QAAQC,KAAKC,WAAWZ,GAAUa,YAC3Cf,EAAUS,SAASR,KAAK,yBAAyBS,IAAIR,EAASS,cAKtEpB,EAAE,IAAMS,EAAUK,KAAK,OAAOf,GAAG,WAAYM,EAAKoB,iBAAiBC,KAAKrB,MAG5ET,KAAKD,MAAMe,KAAK,cAAciB,MAAM,SAACC,GACjC,IAAIC,EAAgB7B,EAAE4B,EAAGE,eAAed,QAAQ,qBAAqBN,KAAK,eAC1ET,OAAiB,SAAa,UAAE4B,EAAMf,KAAK,OAAOiB,QAAQF,EAAMG,KAAK,kBAErEhC,EAAE4B,EAAGE,eAAed,QAAQ,oBAAoBiB,SAAS,aAInDvC,EAAAS,YAAd,WACI,OAAO+B,IAAI,MAAO,uBAGfxC,EAAAU,UAAAqB,iBAAP,WACS7B,KAAKC,aACND,KAAKC,YAAa,EACbG,EAAE,QAAQmC,SAAS,YACpBnC,EAAEC,QAAQF,GAAG,eAAgBL,EAA4BS,eAIzET,KAnDa0C,EAAA1C,4BAAAA","file":"AmendmentEditProposedChange.js","sourcesContent":["import {AntragsgruenEditor} from \"../shared/AntragsgruenEditor\";\n\nexport class AmendmentEditProposedChange {\n    private hasChanged: boolean = false;\n\n    public constructor(private $form: JQuery) {\n        this.textEditCalled();\n\n        $form.on(\"submit\", () => {\n            $(window).off(\"beforeunload\", AmendmentEditProposedChange.onLeavePage);\n        });\n    }\n\n    private textEditCalled() {\n        $(\".wysiwyg-textarea:not(#sectionHolderEditorial)\").each((i, el) => {\n            let $holder = $(el),\n                $textarea = $holder.find(\".texteditor\");\n\n            let editor: AntragsgruenEditor = new AntragsgruenEditor($textarea.attr(\"id\")),\n                ckeditor: editor = editor.getEditor();\n\n            $textarea.parents(\"form\").submit(() => {\n                $textarea.parent().find(\"textarea.raw\").val(ckeditor.getData());\n                if (typeof(ckeditor.plugins.lite) != 'undefined') {\n                    ckeditor.plugins.lite.findPlugin(ckeditor).acceptAll();\n                    $textarea.parent().find(\"textarea.consolidated\").val(ckeditor.getData());\n                }\n            });\n\n            // The editor doesn't trigger change-events when tracking changes is enabled, therefore this work-around\n            $('#' + $textarea.attr('id')).on('keypress', this.onContentChanged.bind(this));\n        });\n\n        this.$form.find('.resetText').click((ev) => {\n            let $text: JQuery = $(ev.currentTarget).parents('.wysiwyg-textarea').find('.texteditor');\n            window['CKEDITOR']['instances'][$text.attr('id')].setData($text.data('original-html'));\n\n            $(ev.currentTarget).parents('.modifiedActions').addClass('hidden');\n        });\n    }\n\n    public static onLeavePage(): string {\n        return __t(\"std\", \"leave_changed_page\");\n    }\n\n    public onContentChanged() {\n        if (!this.hasChanged) {\n            this.hasChanged = true;\n            if (!$(\"body\").hasClass('testing')) {\n                $(window).on(\"beforeunload\", AmendmentEditProposedChange.onLeavePage);\n            }\n        }\n    }\n}\n"]}