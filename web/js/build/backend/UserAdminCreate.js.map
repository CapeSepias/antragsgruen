{"version":3,"sources":["backend/UserAdminCreate.js","backend/UserAdminCreate.ts"],"names":["define","require","exports","Object","defineProperty","value","UserAdminCreate","constructor","$el","this","element","initOpener","initSubmit","querySelectorAll","forEach","openerEl","addEventListener","ev","type","currentTarget","getAttribute","el","classList","add","querySelector","remove","checkSubmit","samlLoginBtn","emailLoginBtn","hasEmailText","contains","text","indexOf","bootbox","alert","__t","preventDefault","emails","split","names","length","bind"],"mappings":"AAAAA,OAAO,CAAC,UAAW,YAAY,SAAUC,EAASC,GAC9C,aACAC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtDH,EAAQI,qBAAkB,ECH9BJ,EAAAI,gBAAA,MAGIC,YAAoBC,GAAAC,KAAAD,IAAAA,EAChBC,KAAKC,QAAUF,EAAI,GAEnBC,KAAKE,aACLF,KAAKG,aAGDD,aACJF,KAAKC,QAAQG,iBAAiB,mBAAmBC,SAAQC,IACrDA,EAASC,iBAAiB,SAASC,IAC/B,MAAMC,EAAQD,EAAGE,cAAoCC,aAAa,aAClEX,KAAKC,QAAQG,iBAAiB,oBAAoBC,SAAQO,IACtDA,EAAGC,UAAUC,IAAI,aAErBd,KAAKC,QAAQc,cAAc,oBAAsBN,GAAMI,UAAUG,OAAO,gBAK5EC,YAAYT,GAChB,MAAMU,EAAelB,KAAKC,QAAQc,cAAc,2BAC1CI,EAAgBnB,KAAKC,QAAQc,cAAc,0BAC3CK,IAAiBpB,KAAKC,QAAQc,cAAc,cAElD,GAAII,IAAkBA,EAAcN,UAAUQ,SAAS,UAAW,CAC9D,GAAID,EAAc,CACd,MAAME,EAAQtB,KAAKC,QAAQc,cAAc,cAAsCnB,MAC/E,IAAmC,IAA/B0B,EAAKC,QAAQ,aAGb,OAFAC,QAAQC,MAAMC,IAAI,QAAS,0BAC3BlB,EAAGmB,iBAGP,IAAgC,IAA5BL,EAAKC,QAAQ,UAGb,OAFAC,QAAQC,MAAMC,IAAI,QAAS,0BAC3BlB,EAAGmB,iBAKX,IAAIC,EAAU5B,KAAKC,QAAQc,cAAc,mBAA2CnB,MAAMiC,MAAM,MAC5FC,EAAS9B,KAAKC,QAAQc,cAAc,UAAkCnB,MAAMiC,MAAM,MACjE,GAAjBD,EAAOG,QAA4B,IAAbH,EAAO,KAC7BpB,EAAGmB,iBACHH,QAAQC,MAAMC,IAAI,QAAS,oBAE3BE,EAAOG,QAAUD,EAAMC,SACvBP,QAAQC,MAAMC,IAAI,QAAS,wBAC3BlB,EAAGmB,kBAGPT,IAAiBA,EAAaL,UAAUQ,SAAS,WACyB,KAArErB,KAAKC,QAAQc,cAAc,WAAgCnB,QAC5DY,EAAGmB,iBACHH,QAAQC,MAAMC,IAAI,QAAS,0BAK/BvB,aACJH,KAAKC,QAAQM,iBAAiB,SAAUP,KAAKiB,YAAYe,KAAKhC","file":"UserAdminCreate.js","sourcesContent":[null,"export class UserAdminCreate {\n    private element: HTMLFormElement;\n\n    constructor(private $el: JQuery) {\n        this.element = $el[0] as HTMLFormElement;\n\n        this.initOpener();\n        this.initSubmit();\n    }\n\n    private initOpener() {\n        this.element.querySelectorAll(\".addUsersOpener\").forEach(openerEl => {\n            openerEl.addEventListener('click', ev => {\n                const type = (ev.currentTarget as HTMLButtonElement).getAttribute('data-type');\n                this.element.querySelectorAll('.addUsersByLogin').forEach(el => {\n                    el.classList.add('hidden');\n                });\n                this.element.querySelector('.addUsersByLogin.' + type).classList.remove('hidden');\n            });\n        });\n    }\n\n    private checkSubmit(ev: Event) {\n        const samlLoginBtn = this.element.querySelector(\".addUsersByLogin.samlWW\");\n        const emailLoginBtn = this.element.querySelector(\".addUsersByLogin.email\");\n        const hasEmailText = !!this.element.querySelector('#emailText'); // If e-mail-sending is deactivated, this will be false\n\n        if (emailLoginBtn && !emailLoginBtn.classList.contains('hidden')) {\n            if (hasEmailText) {\n                const text = (this.element.querySelector('#emailText') as HTMLTextAreaElement).value;\n                if (text.indexOf(\"%ACCOUNT%\") === -1) {\n                    bootbox.alert(__t(\"admin\", \"emailMissingCode\"));\n                    ev.preventDefault();\n                    return;\n                }\n                if (text.indexOf(\"%LINK%\") === -1) {\n                    bootbox.alert(__t(\"admin\", \"emailMissingLink\"));\n                    ev.preventDefault();\n                    return;\n                }\n            }\n\n            let emails = (this.element.querySelector(\"#emailAddresses\") as HTMLTextAreaElement).value.split(\"\\n\"),\n                names = (this.element.querySelector(\"#names\") as HTMLTextAreaElement).value.split(\"\\n\");\n            if (emails.length == 1 && emails[0] == \"\") {\n                ev.preventDefault();\n                bootbox.alert(__t(\"admin\", \"emailMissingTo\"));\n            }\n            if (emails.length != names.length) {\n                bootbox.alert(__t(\"admin\", \"emailNumberMismatch\"));\n                ev.preventDefault();\n            }\n        }\n        if (samlLoginBtn && !samlLoginBtn.classList.contains('hidden')) {\n            if ((this.element.querySelector(\"#samlWW\") as HTMLInputElement).value === \"\") {\n                ev.preventDefault();\n                bootbox.alert(__t(\"admin\", \"emailMissingUsername\"));\n            }\n        }\n    }\n\n    private initSubmit() {\n        this.element.addEventListener('submit', this.checkSubmit.bind(this));\n    }\n}\n"]}