{"version":3,"sources":["backend/MotionList.ts"],"names":["MotionList","this","initList","initExportRow","prototype","$","click","ev","find","prop","preventDefault","onDeleteClicked","bind","$select","initiatorValues","data","options","hint","highlight","minLength","datasets","name","source","q","cb","matches","substrRegex","RegExp","each","i","str","test","push","typeahead","colResizable","liveDrag","postbackSafe","minWidth","$exportRow","on","stopPropagation","$dd","change","withdrawn","link","replace","attr","trigger","$button","target","$form","parents","bootbox","confirm","__t","result","$input","append","submit"],"mappings":"AAEA,IAAAA,WAAA,WACI,SAAAA,IACIC,KAAKC,WACLD,KAAKE,gBAwFb,OArFYH,EAAAI,UAAAF,SAAR,WACIG,EAAE,YAAYC,MAAM,SAAUC,GAC1BF,EAAE,qBAAqBG,KAAK,mBAAmBC,KAAK,WAAW,GAC/DF,EAAGG,mBAEPL,EAAE,aAAaC,MAAM,SAAUC,GAC3BF,EAAE,qBAAqBG,KAAK,mBAAmBC,KAAK,WAAW,GAC/DF,EAAGG,mBAEPL,EAAE,oBAAoBC,MAAML,KAAKU,gBAAgBC,KAAKX,OAEtD,IAAIY,EAAUR,EAAE,oBACZS,EAAkBD,EAAQE,KAAK,UAuB/BC,GACAC,MAAM,EACNC,WAAW,EACXC,UAAW,GAEXC,IACAC,KAAM,YACNC,OA7BU,SAAqBC,EAAGC,GAC9B,IAAIC,EAASC,EAGbD,KAGAC,EAAc,IAAIC,OAAOJ,EAAG,KAI5BlB,EAAEuB,KAAKd,EAAiB,SAAUe,EAAGC,GAC7BJ,EAAYK,KAAKD,IAGjBL,EAAQO,KAAKF,KAIrBN,EAAGC,MAaXZ,EAAQoB,UAAejB,EAASI,GAEhCf,EAAE,qBAAqB6B,cACnBC,UAAY,EACZC,cAAgB,EAChBC,SAAY,MAIZrC,EAAAI,UAAAD,cAAR,WACI,IAAImC,EAAajC,EAAE,wBACnBiC,EAAW9B,KAAK,eAAe+B,GAAG,QAAS,SAAUhC,GACjDA,EAAGiC,oBAEPF,EAAW9B,KAAK,uCAAuCoB,KAAK,WACxD,IAAIa,EAAMpC,EAAEJ,MASZwC,EAAIjC,KAAK,wBAAwBkC,OARf,WACV,IAAIC,EAAaF,EAAIjC,KAAK,yBAAyBC,KAAK,WAAa,EAAI,EACzEgC,EAAIjC,KAAK,iBAAiBoB,KAAK,WAC3B,IAAIgB,EAAOvC,EAAEJ,MAAMc,KAAK,YACxB6B,EAAOA,EAAKC,QAAQ,YAAaF,GACjCtC,EAAEJ,MAAM6C,KAAK,OAAQF,OAGoBG,QAAQ,aAI7D/C,EAAAI,UAAAO,gBAAR,SAAwBJ,GACpBA,EAAGG,iBACH,IAAIsC,EAAU3C,EAAEE,EAAG0C,QACfC,EAAQF,EAAQG,QAAQ,QAC5BC,QAAQC,QAAQC,IAAI,MAAO,eAAgB,SAAUC,GACjD,GAAIA,EAAQ,CACR,IAAIC,EAASnD,EAAE,yBAAyByC,KAAK,OAAQE,EAAQF,KAAK,SAASA,KAAK,QAASE,EAAQF,KAAK,UACtGI,EAAMO,OAAOD,GACbN,EAAMQ,aAItB1D,EA3FA,GA6FA,IAAIA","file":"MotionList.js","sourcesContent":["/// <reference path=\"../typings/colresizable/index.d.ts\" />\n\nclass MotionList {\n    constructor() {\n        this.initList();\n        this.initExportRow();\n    }\n\n    private initList() {\n        $(\".markAll\").click(function (ev) {\n            $(\".adminMotionTable\").find(\"input.selectbox\").prop(\"checked\", true);\n            ev.preventDefault();\n        });\n        $(\".markNone\").click(function (ev) {\n            $(\".adminMotionTable\").find(\"input.selectbox\").prop(\"checked\", false);\n            ev.preventDefault();\n        });\n        $(\".deleteMarkedBtn\").click(this.onDeleteClicked.bind(this));\n\n        let $select = $(\"#initiatorSelect\"),\n            initiatorValues = $select.data(\"values\"),\n            matcher = function findMatches(q, cb) {\n                let matches, substrRegex;\n\n                // an array that will be populated with substring matches\n                matches = [];\n\n                // regex used to determine if a string contains the substring `q`\n                substrRegex = new RegExp(q, \"i\");\n\n                // iterate through the pool of strings and for any string that\n                // contains the substring `q`, add it to the `matches` array\n                $.each(initiatorValues, function (i, str) {\n                    if (substrRegex.test(str)) {\n                        // the typeahead jQuery plugin expects suggestions to a\n                        // JavaScript object, refer to typeahead docs for more info\n                        matches.push(str);\n                    }\n                });\n\n                cb(matches);\n            };\n\n        let options: Twitter.Typeahead.Options = {\n            hint: true,\n            highlight: true,\n            minLength: 1\n        };\n        let datasets:Twitter.Typeahead.Dataset<any>[] = [{\n            name: \"supporter\",\n            source: matcher\n        }];\n\n        $select.typeahead<any>(options, datasets);\n\n        $('.adminMotionTable').colResizable({\n            'liveDrag': true,\n            'postbackSafe': true,\n            'minWidth': 30\n        });\n    }\n\n    private initExportRow() {\n        let $exportRow = $(\".motionListExportRow\");\n        $exportRow.find(\"li.checkbox\").on(\"click\", function (ev) {\n            ev.stopPropagation();\n        });\n        $exportRow.find(\".exportMotionDd, .exportAmendmentDd\").each(function () {\n            let $dd = $(this),\n                recalcLinks = function () {\n                    let withdrawn = ($dd.find(\"input[name=withdrawn]\").prop(\"checked\") ? 1 : 0);\n                    $dd.find(\".exportLink a\").each(function () {\n                        let link = $(this).data(\"href-tpl\");\n                        link = link.replace(\"WITHDRAWN\", withdrawn);\n                        $(this).attr(\"href\", link);\n                    });\n                };\n            $dd.find(\"input[type=checkbox]\").change(recalcLinks).trigger(\"change\");\n        });\n    }\n\n    private onDeleteClicked(ev) {\n        ev.preventDefault();\n        let $button = $(ev.target),\n            $form = $button.parents(\"form\");\n        bootbox.confirm(__t(\"std\", \"del_confirm\"), function (result) {\n            if (result) {\n                let $input = $('<input type=\"hidden\">').attr(\"name\", $button.attr(\"name\")).attr(\"value\", $button.attr(\"value\"));\n                $form.append($input);\n                $form.submit();\n            }\n        });\n    }\n}\n\nnew MotionList();\n"]}