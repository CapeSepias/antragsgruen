{"version":3,"sources":["shared/SiteCreateWizard.ts"],"names":["FUNCTIONALITY_MOTIONS","FUNCTIONALITY_MANIFESTO","FUNCTIONALITY_APPLICATIONS","FUNCTIONALITY_AGENDA","FUNCTIONALITY_SPEECH_LISTS","FUNCTIONALITY_STATUTE_AMENDMENTS","SiteCreateWizard","$root","_this","this","panelConditions","panelLanguage","firstPanel","panelFunctionality","panelSingleMotion","data","hasMotionlikeType","panelMotionWho","singleMotion","panelMotionDeadline","motionsInitiatedBy","panelMotionScreening","panelNeedsSupporters","panelHasAmendments","panelAmendSinglePara","hasAmendments","panelAmendWho","panelAmendDeadline","amendmentInitiatedBy","panelAmendMerging","panelAmendScreening","panelComments","panelApplicationType","functionality","indexOf","panelSpeechLogin","panelSpeechQuotas","panelOpenNow","panelSiteData","$","mode","initEvents","prototype","getRadioValue","fieldsetClass","defaultVal","$input","find","length","val","getCheckboxValues","defaultVals","inputs","toArray","map","element","parseInt","getAttribute","getWizardState","language","motionsDeadlineExists","motionsDeadline","motionScreening","needsSupporters","minSupporters","amendSinglePara","amendMerging","amendmentDeadlineExists","amendmentDeadline","amendScreening","hasComments","applicationType","speechQuotas","speechLogin","openNow","title","organization","subdomain","contact","showPanel","$panel","step","removeClass","addClass","$activePanel","trigger","isCorrect","window","location","hash","attr","substring","e","console","log","getNextPanel","currPanel","allPanelIds","Object","keys","foundCurr","i","error","subdomainChange","ev","$this","currentTarget","$group","parents","first","requesturl","replace","$err","match","get","ret","prop","html","$form","on","$fieldset","wording","each","datetimepicker","locale","bind","original","originalEvent","charCode","keyCode","preventDefault","url","href","obj","key","stopPropagation","history","back"],"mappings":"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","file":"SiteCreateWizard.js","sourcesContent":["interface WizardState {\n    language: string;\n    functionality: number[];\n    singleMotion: number;\n    motionsInitiatedBy: number;\n    motionsDeadlineExists: number;\n    motionsDeadline: string;\n    motionScreening: number;\n    needsSupporters: number;\n    minSupporters: number;\n    hasAmendments: number;\n    amendSinglePara: number;\n    amendMerging: number;\n    amendmentInitiatedBy: number;\n    amendmentDeadlineExists: number;\n    amendmentDeadline: string;\n    amendScreening: number;\n    hasComments: number;\n    applicationType: number;\n    speechQuotas: number;\n    speechLogin: number;\n    openNow: number;\n    title: string;\n    organization: string;\n    subdomain: string;\n    contact: string;\n}\n\n// Sync with SiteCreateForm.php\nconst FUNCTIONALITY_MOTIONS = 1;\nconst FUNCTIONALITY_MANIFESTO = 2;\nconst FUNCTIONALITY_APPLICATIONS = 3;\nconst FUNCTIONALITY_AGENDA = 4;\nconst FUNCTIONALITY_SPEECH_LISTS = 5;\nconst FUNCTIONALITY_STATUTE_AMENDMENTS = 6;\n\nclass SiteCreateWizard {\n    private firstPanel: string;\n    private mode: string;\n    private data: WizardState;\n    private $activePanel: JQuery;\n\n    constructor(private $root: JQuery) {\n        this.firstPanel = $(\"#SiteCreateWizard\").data(\"init-step\");\n        this.mode = $(\"#SiteCreateWizard\").data(\"mode\");\n        this.initEvents();\n    }\n\n    getRadioValue(fieldsetClass: string, defaultVal: any): any {\n        let $input = this.$root.find(\"fieldset.\" + fieldsetClass).find(\"input:checked\");\n        if ($input.length > 0) {\n            return $input.val();\n        } else {\n            return defaultVal;\n        }\n    }\n\n    getCheckboxValues(fieldsetClass: string, defaultVals: any): any {\n        let inputs = this.$root.find(\"fieldset.\" + fieldsetClass).find(\"input:checked\").toArray();\n        if (inputs.length > 0) {\n            return inputs.map((element: HTMLElement) => {\n                return parseInt(element.getAttribute('value'), 10);\n            });\n        } else {\n            return defaultVals;\n        }\n    }\n\n    getWizardState(): WizardState {\n        const parseNullableNumber = (val: string): number => {\n            if (val === '' || val === null) {\n                return null;\n            } else {\n                return parseInt(val, 10);\n            }\n        };\n\n        return {\n            language: this.getRadioValue('language', null),\n            functionality: this.getCheckboxValues('functionality', []),\n            singleMotion: parseInt(this.getRadioValue('singleMotion', 0), 10),\n            motionsInitiatedBy: parseInt(this.getRadioValue('motionWho', 1), 10),\n            motionsDeadlineExists: parseInt(this.getRadioValue('motionDeadline', 0), 10),\n            motionsDeadline: this.$root.find(\"fieldset.motionDeadline .date input\").val() as string,\n            motionScreening: parseInt(this.getRadioValue('motionScreening', 1), 10),\n            needsSupporters: parseInt(this.getRadioValue('needsSupporters', 0), 10),\n            minSupporters: parseNullableNumber(this.$root.find(\"input.minSupporters\").val() as string),\n            hasAmendments: parseInt(this.getRadioValue('hasAmendments', 1), 10),\n            amendSinglePara: parseInt(this.getRadioValue('amendSinglePara', 0), 10),\n            amendMerging: parseInt(this.getRadioValue('amendMerging', 0), 10),\n            amendmentInitiatedBy: parseInt(this.getRadioValue('amendmentWho', 1), 10),\n            amendmentDeadlineExists: parseInt(this.getRadioValue('amendmentDeadline', 0), 10),\n            amendmentDeadline: this.$root.find(\"fieldset.amendmentDeadline .date input\").val() as string,\n            amendScreening: parseInt(this.getRadioValue('amendScreening', 1), 10),\n            hasComments: parseInt(this.getRadioValue('hasComments', 1), 10),\n            applicationType: parseInt(this.getRadioValue('applicationType', 1), 10),\n            speechQuotas: parseInt(this.getRadioValue('speechQuotas', 1), 10),\n            speechLogin: parseInt(this.getRadioValue('speechLogin', 1), 10),\n            openNow: parseInt(this.getRadioValue('openNow', 0), 10),\n            title: $(\"#siteTitle\").val() as string,\n            organization: $(\"#siteOrganization\").val() as string,\n            subdomain: $(\"#siteSubdomain\").val() as string,\n            contact: $(\"#siteContact\").val() as string\n        };\n    };\n\n    showPanel($panel: JQuery) {\n        this.data = this.getWizardState();\n\n        let step = $panel.data(\"tab\");\n        this.$root.find(\".wizard .steps li\").removeClass(\"active\");\n        this.$root.find(\".wizard .steps .\" + step).addClass(\"active\");\n\n        if (this.$activePanel) {\n            this.$activePanel.removeClass(\"active\").addClass(\"inactive\");\n        }\n        $panel.addClass(\"active\").removeClass(\"inactive\");\n        this.$activePanel = $panel;\n\n        if ($panel.find(\"input:checked\").length > 0) {\n            $panel.find(\"input:checked\").trigger(\"focus\");\n        } else if ($panel.find(\"button[type=submit]\").length > 0) {\n            $panel.find(\"button[type=submit]\").trigger(\"focus\");\n        }\n\n        try {\n            let isCorrect = (window.location.hash == \"#\" + $panel.attr(\"id\"));\n            if ((window.location.hash == \"\" || window.location.hash == \"#\") && \"#\" + $panel.attr(\"id\") == this.firstPanel) {\n                isCorrect = true;\n            }\n            if (!isCorrect) {\n                window.location.hash = \"#\" + $panel.attr(\"id\").substring(5);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    private hasMotionlikeType (data: WizardState) {\n        return data.functionality.indexOf(FUNCTIONALITY_MOTIONS) !== -1 || data.functionality.indexOf(FUNCTIONALITY_MANIFESTO) !== -1\n             || data.functionality.indexOf(FUNCTIONALITY_STATUTE_AMENDMENTS) !== -1;\n    }\n\n    public panelConditions = {\n        panelLanguage: () => this.firstPanel === '#panelLanguage',\n        panelFunctionality: () => true,\n        panelSingleMotion: (data: WizardState) => this.hasMotionlikeType(data),\n        panelMotionWho: (data: WizardState) => this.hasMotionlikeType(data) && data.singleMotion === 0,\n        panelMotionDeadline: (data: WizardState) => this.hasMotionlikeType(data) && data.singleMotion === 0 && data.motionsInitiatedBy !== 1, // MOTION_INITIATED_ADMINS\n        panelMotionScreening: (data: WizardState) => this.hasMotionlikeType(data) && data.singleMotion === 0 && data.motionsInitiatedBy !== 1, // MOTION_INITIATED_ADMINS\n        panelNeedsSupporters: (data: WizardState) => this.hasMotionlikeType(data) && data.singleMotion === 0 && data.motionsInitiatedBy !== 1, // MOTION_INITIATED_ADMINS\n        panelHasAmendments: (data: WizardState) => this.hasMotionlikeType(data),\n        panelAmendSinglePara: (data: WizardState) => this.hasMotionlikeType(data) && data.hasAmendments === 1,\n        panelAmendWho: (data: WizardState) => this.hasMotionlikeType(data) && data.hasAmendments === 1,\n        panelAmendDeadline: (data: WizardState) => this.hasMotionlikeType(data) && data.hasAmendments === 1 && data.amendmentInitiatedBy !== 1, // MOTION_INITIATED_ADMINS,\n        panelAmendMerging: (data: WizardState) => this.hasMotionlikeType(data) && data.hasAmendments === 1 && data.amendmentInitiatedBy !== 1,\n        panelAmendScreening: (data: WizardState) => this.hasMotionlikeType(data) && data.hasAmendments === 1 && data.amendmentInitiatedBy !== 1,\n        panelComments: (data: WizardState) => this.hasMotionlikeType(data),\n        panelApplicationType: (data: WizardState) => data.functionality.indexOf(FUNCTIONALITY_APPLICATIONS) !== -1,\n        panelSpeechLogin: (data: WizardState) => data.functionality.indexOf(FUNCTIONALITY_SPEECH_LISTS) !== -1,\n        panelSpeechQuotas: (data: WizardState) => data.functionality.indexOf(FUNCTIONALITY_SPEECH_LISTS) !== -1,\n        panelOpenNow: () => true,\n        panelSiteData: () => true,\n    };\n\n    getNextPanel(): string {\n        this.data = this.getWizardState();\n        const currPanel = this.$activePanel.attr(\"id\"),\n            allPanelIds = Object.keys(this.panelConditions);\n\n        let foundCurr = false;\n        for (let i = 0; i < allPanelIds.length; i++) {\n            if (allPanelIds[i] === currPanel) {\n                // We ignore all steps previous to the current one\n                foundCurr = true;\n            } else if (foundCurr) {\n                // Once we found the current one, we take the first step where the condition is met\n                if (this.panelConditions[allPanelIds[i]](this.data)) {\n                    return '#' + allPanelIds[i];\n                }\n            }\n        }\n        console.error(\"Could not find the next panel for \" + currPanel + \", data: \", this.data);\n    }\n\n    subdomainChange(ev) {\n        let $this = $(ev.currentTarget),\n            subdomain = $this.val() as string,\n            $group = $this.parents(\".subdomainRow\").first(),\n            requesturl = $this.data(\"query-url\").replace(/SUBDOMAIN/, subdomain),\n            $err = $group.find(\".subdomainError\");\n\n        if (subdomain === \"\") {\n            $err.addClass(\"hidden\");\n            $group.removeClass(\"has-error\").removeClass(\"has-success\");\n            return;\n        }\n        if (!subdomain.match(/^[A-Z0-9äöü](?:[A-Z0-9äöü_\\-]{0,61}[A-Z0-9äöü])?$/i)) {\n            $group.removeClass(\"has-success\").addClass(\"has-error\");\n            this.$root.find(\"button[type=submit]\").prop(\"disabled\", true);\n            return;\n        }\n        $.get(requesturl, (ret) => {\n            if (ret['available']) {\n                $err.addClass(\"hidden\");\n                $group.removeClass(\"has-error\");\n                this.$root.find(\"button[type=submit]\").prop(\"disabled\", false);\n                if (ret['subdomain'] == $this.val()) {\n                    $group.addClass(\"has-success\");\n                }\n            } else {\n                $err.removeClass(\"hidden\");\n                $err.html($err.data(\"template\").replace(/%SUBDOMAIN%/, ret['subdomain']));\n                $group.removeClass(\"has-success\");\n                if (ret['subdomain'] == $this.val()) {\n                    this.$root.find(\"button[type=submit]\").prop(\"disabled\", true);\n                    $group.addClass(\"has-error\");\n                }\n            }\n        });\n    }\n\n    initEvents() {\n        let $form = this.$root;\n\n        this.$activePanel = null;\n        this.data = this.getWizardState();\n\n        $form.find(\"input\").on(\"change\", () => {\n            this.data = this.getWizardState();\n        });\n        $form.find(\".radio-label input\").on(\"change\", function () {\n            let $fieldset = $(this).parents(\"fieldset\").first();\n            $fieldset.find(\".radio-label\").removeClass(\"active\");\n            let $active = $fieldset.find(\".radio-label input:checked\");\n            $active.parents(\".radio-label\").first().addClass(\"active\");\n        }).trigger(\"change\");\n        $form.find(\".checkbox-label input\").on(\"change\", function () {\n            let $this = $(this);\n            if ($this.prop(\"checked\")) {\n                $this.parents(\".checkbox-label\").first().addClass(\"active\");\n            } else {\n                $this.parents(\".checkbox-label\").first().removeClass(\"active\");\n            }\n        }).trigger(\"change\");\n\n        $form.find(\"fieldset.functionality input\").on(\"change\", function () {\n            let wording = $form.find(\"fieldset.functionality input:checked\").data(\"wording-name\");\n            $form.removeClass(\"wording_motion\").removeClass(\"wording_manifesto\").addClass(\"wording_\" + wording);\n        }).trigger(\"change\");\n\n        $form.find(\".input-group.date\").each(function () {\n            let $this = $(this);\n            $this.datetimepicker({\n                locale: $this.find(\"input\").data('locale')\n            });\n        });\n        $form.find(\".date.motionsDeadline\").on(\"dp.change\", function () {\n            $(\"input.motionsDeadlineExists\").prop(\"checked\", true).trigger(\"change\");\n        });\n        $form.find(\".date.amendmentDeadline\").on(\"dp.change\", function () {\n            $(\"input.amendDeadlineExists\").prop(\"checked\", true).trigger(\"change\");\n        });\n        $form.find(\"input.minSupporters\").on(\"change\", () => {\n            $(\"input.needsSupporters\").prop(\"checked\", true).trigger(\"change\");\n        });\n        $form.find(\"#siteSubdomain\").on(\"keyup change\", this.subdomainChange.bind(this));\n        $form.find(\"#siteTitle\").on(\"keyup change\", function () {\n            if (($(this).val() as string).length >= 5) {\n                $(this).parents(\".form-group\").first().addClass(\"has-success\");\n            } else {\n                $(this).parents(\".form-group\").first().removeClass(\"has-success\");\n            }\n        });\n        $form.find(\"#siteOrganization\").on(\"keyup change\", function () {\n            if (($(this).val() as string).length >= 5) {\n                $(this).parents(\".form-group\").first().addClass(\"has-success\");\n            } else {\n                $(this).parents(\".form-group\").first().removeClass(\"has-success\");\n            }\n        });\n\n        $form.find(\"#panelSiteData input\").on(\"keypress\", function (ev) {\n            let original: any = ev.originalEvent;\n            if (original.charCode === 13 || original.keyCode === 13) {\n                ev.preventDefault();\n            }\n        });\n\n        $form.find(\"#panelLanguage input\").on(\"change\", function() {\n            const val = $form.find(\"#panelLanguage input:checked\").val() as string;\n            const url = $form.find(\"#panelLanguage\").data(\"url\").replace(/LNG/, val);\n            window.location.href = url;\n        });\n\n        let obj = this;\n\n        // The enter key should not submit the form, but lead to the next panel\n        $form.on(\"keypress\", (ev) => {\n            if (ev.key === \"Enter\") {\n                if (this.$activePanel.find(\".btn-next\").attr(\"type\") !== \"submit\") {\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    this.showPanel($(obj.getNextPanel()));\n                }\n            }\n        });\n\n        $form.find(\".navigation .btn-next\").on(\"click\", (ev) => {\n            if ($(ev.currentTarget).attr(\"type\") === \"submit\") {\n                return;\n            }\n            ev.preventDefault();\n            obj.showPanel($(obj.getNextPanel()));\n        });\n        $form.find(\".navigation .btn-prev\").on(\"click\", (ev) => {\n            ev.preventDefault();\n            if (window.location.hash != \"\") {\n                window.history.back();\n            }\n        });\n\n        $(window).on(\"hashchange\", (ev) => {\n            ev.preventDefault();\n            let hash;\n            if (window.location.hash === '' || parseInt(window.location.hash.substring(1)) === 0) {\n                hash = this.firstPanel;\n            } else {\n                hash = \"#panel\" + window.location.hash.substring(1);\n            }\n            let $panel = $(hash);\n            if ($panel.length > 0) {\n                this.showPanel($panel);\n            }\n        });\n\n        $form.find(\".step-pane\").addClass(\"inactive\");\n        this.showPanel($(this.firstPanel));\n    }\n}\n\n"]}