{"version":3,"sources":["SiteCreateWizard.js","SiteCreateWizard.es6"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","SiteCreateWizard","$","$root","this","firstPanel","multisite","data","console","log","initEvents","value","fieldsetClass","defaultVal","$input","find","val","wording","getRadioValue","singleMotion","motionsInitiatedBy","motionsDeadlineExists","motionsDeadline","motionScreening","needsSupporters","minSupporters","hasAmendments","amendSinglePara","amendmentInitiatedBy","amendmentDeadlineExists","amendmentDeadline","amendScreening","hasComments","hasAgenda","openNow","title","organization","subdomain","contact","$panel","getWizardState","step","removeClass","addClass","$activePanel","isCorrect","window","location","hash","attr","substring","e","_this","$form","change","$fieldset","parents","first","$active","trigger","each","$this","datetimepicker","locale","on","prop","$group","requesturl","replace","$err","get","ret","html","obj","click","ev","preventDefault","showPanel","getNextPanel","history","back","submit"],"mappings":"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","file":"SiteCreateWizard.js","sourcesContent":["\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SiteCreateWizard = function () {\n    _createClass(SiteCreateWizard, [{\n        key: \"getRadioValue\",\n        value: function getRadioValue(fieldsetClass, defaultVal) {\n            var $input = this.$root.find(\"fieldset.\" + fieldsetClass).find(\"input:checked\");\n            if ($input.length > 0) {\n                return $input.val();\n            } else {\n                return defaultVal;\n            }\n        }\n    }, {\n        key: \"getWizardState\",\n        value: function getWizardState() {\n            return {\n                wording: this.getRadioValue('wording', 1),\n                singleMotion: this.getRadioValue('singleMotion', 0),\n                motionsInitiatedBy: this.getRadioValue('motionWho', 1),\n                motionsDeadlineExists: this.getRadioValue('motionDeadline', 0),\n                motionsDeadline: this.$root.find(\"fieldset.motionDeadline .date input\").val(),\n                motionScreening: this.getRadioValue('motionScreening', 1),\n                needsSupporters: this.getRadioValue('needsSupporters', 0),\n                minSupporters: this.$root.find(\"input.minSupporters\").val(),\n                hasAmendments: this.getRadioValue('hasAmendments', 1),\n                amendSinglePara: this.getRadioValue('amendSinglePara', 0),\n                amendmentInitiatedBy: this.getRadioValue('amendmentWho', 1),\n                amendmentDeadlineExists: this.getRadioValue('amendmentDeadline', 0),\n                amendmentDeadline: this.$root.find(\"fieldset.amendmentDeadline .date input\").val(),\n                amendScreening: this.getRadioValue('amendScreening', 1),\n                hasComments: this.getRadioValue('hasComments', 1),\n                hasAgenda: this.getRadioValue('hasAgenda', 0),\n                openNow: this.getRadioValue('openNow', 0),\n                title: $(\"#siteTitle\").val(),\n                organization: $(\"#siteOrganization\").val(),\n                subdomain: $(\"#siteSubdomain\").val(),\n                contact: $(\"#siteContact\").val()\n            };\n        }\n    }, {\n        key: \"showPanel\",\n        value: function showPanel($panel) {\n            this.data = this.getWizardState();\n            console.log(this.data);\n\n            var step = $panel.data(\"tab\");\n            this.$root.find(\".wizard .steps li\").removeClass(\"active\");\n            this.$root.find(\".wizard .steps .\" + step).addClass(\"active\");\n\n            if (this.$activePanel) {\n                this.$activePanel.removeClass(\"active\").addClass(\"inactive\");\n            }\n            $panel.addClass(\"active\").removeClass(\"inactive\");\n            this.$activePanel = $panel;\n\n            try {\n                var isCorrect = window.location.hash == \"#\" + $panel.attr(\"id\");\n                if ((window.location.hash == \"\" || window.location.hash == \"#\") && \"#\" + $panel.attr(\"id\") == this.firstPanel) {\n                    isCorrect = true;\n                }\n                if (!isCorrect) {\n                    console.log(\"change\");\n                    window.location.hash = \"#\" + $panel.attr(\"id\").substring(5);\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n    }, {\n        key: \"getNextPanel\",\n        value: function getNextPanel() {\n            this.data = this.getWizardState();\n\n            switch (this.$activePanel.attr(\"id\")) {\n                case 'panelPurpose':\n                    return \"#panelSingleMotion\";\n                case 'panelSingleMotion':\n                    if (this.data.singleMotion == 1) {\n                        return \"#panelHasAmendments\";\n                    } else {\n                        return \"#panelMotionWho\";\n                    }\n                case 'panelMotionWho':\n                    if (this.data.motionsInitiatedBy == 1) {\n                        // MOTION_INITIATED_ADMINS\n                        return \"#panelHasAmendments\";\n                    } else {\n                        return \"#panelMotionDeadline\";\n                    }\n                case 'panelMotionDeadline':\n                    return \"#panelMotionScreening\";\n                case 'panelMotionScreening':\n                    return \"#panelNeedsSupporters\";\n                case 'panelNeedsSupporters':\n                    return \"#panelHasAmendments\";\n                case 'panelHasAmendments':\n                    if (this.data.hasAmendments == 1) {\n                        return \"#panelAmendSinglePara\";\n                    } else {\n                        return \"#panelComments\";\n                    }\n                case 'panelAmendSinglePara':\n                    return \"#panelAmendWho\";\n                case 'panelAmendWho':\n                    if (this.data.amendmentInitiatedBy == 1) {\n                        // MOTION_INITIATED_ADMINS\n                        return \"#panelComments\";\n                    } else {\n                        return \"#panelAmendDeadline\";\n                    }\n                case 'panelAmendDeadline':\n                    return \"#panelAmendScreening\";\n                case 'panelAmendScreening':\n                    return \"#panelComments\";\n                case 'panelComments':\n                    if (this.data.singleMotion == 1) {\n                        return \"#panelOpenNow\";\n                    } else {\n                        return \"#panelAgenda\";\n                    }\n                case 'panelAgenda':\n                    return \"#panelOpenNow\";\n                case 'panelOpenNow':\n                    return \"#panelSiteData\";\n            }\n        }\n    }, {\n        key: \"initEvents\",\n        value: function initEvents() {\n            var _this = this;\n\n            var $form = this.$root;\n\n            this.$activePanel = null;\n            this.data = this.getWizardState();\n\n            $form.find(\"input\").change(function () {\n                _this.data = _this.getWizardState();\n            });\n            $form.find(\".radio-label input\").change(function () {\n                var $fieldset = $(this).parents(\"fieldset\").first();\n                $fieldset.find(\".radio-label\").removeClass(\"active\");\n                var $active = $fieldset.find(\".radio-label input:checked\");\n                $active.parents(\".radio-label\").first().addClass(\"active\");\n            }).trigger(\"change\");\n\n            $form.find(\"fieldset.wording input\").change(function () {\n                var wording = $form.find(\"fieldset.wording input:checked\").data(\"wording-name\");\n                $form.removeClass(\"wording_motion\").removeClass(\"wording_manifesto\").addClass(\"wording_\" + wording);\n            }).trigger(\"change\");\n\n            $form.find(\".input-group.date\").each(function () {\n                var $this = $(this);\n                $this.datetimepicker({\n                    locale: $this.find(\"input\").data('locale')\n                });\n            });\n            $form.find(\".date.motionsDeadline\").on(\"dp.change\", function () {\n                $(\"input.motionsDeadlineExists\").prop(\"checked\", true).change();\n            });\n            $form.find(\".date.amendmentDeadline\").on(\"dp.change\", function () {\n                $(\"input.amendDeadlineExists\").prop(\"checked\", true).change();\n            });\n            $form.find(\"input.minSupporters\").change(function () {\n                $(\"input.needsSupporters\").prop(\"checked\", true).change();\n            });\n            $form.find(\"#siteSubdomain\").on(\"keyup change\", function () {\n                var $this = $(this),\n                    subdomain = $this.val(),\n                    $group = $this.parents(\".subdomainRow\").first(),\n                    requesturl = $this.data(\"query-url\").replace(/SUBDOMAIN/, subdomain),\n                    $err = $group.find(\".subdomainError\");\n\n                if (subdomain == \"\") {\n                    $err.addClass(\"hidden\");\n                    $group.removeClass(\"has-error\").removeClass(\"has-success\");\n                    return;\n                }\n                this.$.get(requesturl, function (ret) {\n                    if (ret['available']) {\n                        $err.addClass(\"hidden\");\n                        $group.removeClass(\"has-error\");\n                        $form.find(\"button[type=submit]\").prop(\"disabled\", false);\n                        if (ret['subdomain'] == $this.val()) {\n                            $group.addClass(\"has-success\");\n                        }\n                    } else {\n                        $err.removeClass(\"hidden\");\n                        $err.html($err.data(\"template\").replace(/%SUBDOMAIN%/, ret['subdomain']));\n                        $group.removeClass(\"has-success\");\n                        if (ret['subdomain'] == $this.val()) {\n                            $form.find(\"button[type=submit]\").prop(\"disabled\", true);\n                            $group.addClass(\"has-error\");\n                        }\n                    }\n                });\n            });\n            $form.find(\"#siteTitle\").on(\"keyup change\", function () {\n                if ($(this).val().length >= 5) {\n                    $(this).parents(\".form-group\").first().addClass(\"has-success\");\n                } else {\n                    $(this).parents(\".form-group\").first().removeClass(\"has-success\");\n                }\n            });\n            $form.find(\"#siteOrganization\").on(\"keyup change\", function () {\n                if ($(this).val().length >= 5) {\n                    $(this).parents(\".form-group\").first().addClass(\"has-success\");\n                } else {\n                    $(this).parents(\".form-group\").first().removeClass(\"has-success\");\n                }\n            });\n\n            var obj = this;\n            $form.find(\".navigation .btn-next\").click(function (ev) {\n                if ($(this).attr(\"type\") == \"submit\") {\n                    return;\n                }\n                ev.preventDefault();\n                obj.showPanel($(obj.getNextPanel()));\n            });\n            $form.find(\".navigation .btn-prev\").click(function (ev) {\n                ev.preventDefault();\n                if (window.location.hash != \"\") {\n                    window.history.back();\n                }\n            });\n            $form.submit(function (ev) {});\n\n            $(window).on(\"hashchange\", function (ev) {\n                ev.preventDefault();\n                var hash;\n                if (window.location.hash.substring(1) == 0) {\n                    hash = _this.firstPanel;\n                } else {\n                    hash = \"#panel\" + window.location.hash.substring(1);\n                }\n                var $panel = $(hash);\n                if ($panel.length > 0) {\n                    _this.showPanel($panel);\n                }\n            });\n\n            $form.find(\".step-pane\").addClass(\"inactive\");\n            this.showPanel($(this.firstPanel));\n        }\n    }]);\n\n    function SiteCreateWizard($, $root) {\n        _classCallCheck(this, SiteCreateWizard);\n\n        this.$ = $;\n        this.firstPanel = \"#panelPurpose\";\n        this.$root = $root;\n        this.multisite = $(\"#SiteCreateWizard\").data(\"multisite\") == 1;\n        console.log(\"Multisite:\", this.multisite);\n        this.initEvents();\n    }\n\n    return SiteCreateWizard;\n}();","class SiteCreateWizard {\n    getRadioValue(fieldsetClass, defaultVal) {\n        var $input = this.$root.find(\"fieldset.\" + fieldsetClass).find(\"input:checked\");\n        if ($input.length > 0) {\n            return $input.val();\n        } else {\n            return defaultVal;\n        }\n    };\n\n    getWizardState() {\n        return {\n            wording: this.getRadioValue('wording', 1),\n            singleMotion: this.getRadioValue('singleMotion', 0),\n            motionsInitiatedBy: this.getRadioValue('motionWho', 1),\n            motionsDeadlineExists: this.getRadioValue('motionDeadline', 0),\n            motionsDeadline: this.$root.find(\"fieldset.motionDeadline .date input\").val(),\n            motionScreening: this.getRadioValue('motionScreening', 1),\n            needsSupporters: this.getRadioValue('needsSupporters', 0),\n            minSupporters: this.$root.find(\"input.minSupporters\").val(),\n            hasAmendments: this.getRadioValue('hasAmendments', 1),\n            amendSinglePara: this.getRadioValue('amendSinglePara', 0),\n            amendmentInitiatedBy: this.getRadioValue('amendmentWho', 1),\n            amendmentDeadlineExists: this.getRadioValue('amendmentDeadline', 0),\n            amendmentDeadline: this.$root.find(\"fieldset.amendmentDeadline .date input\").val(),\n            amendScreening: this.getRadioValue('amendScreening', 1),\n            hasComments: this.getRadioValue('hasComments', 1),\n            hasAgenda: this.getRadioValue('hasAgenda', 0),\n            openNow: this.getRadioValue('openNow', 0),\n            title: $(\"#siteTitle\").val(),\n            organization: $(\"#siteOrganization\").val(),\n            subdomain: $(\"#siteSubdomain\").val(),\n            contact: $(\"#siteContact\").val()\n        };\n    };\n\n    showPanel($panel) {\n        this.data = this.getWizardState();\n        console.log(this.data);\n\n        var step = $panel.data(\"tab\");\n        this.$root.find(\".wizard .steps li\").removeClass(\"active\");\n        this.$root.find(\".wizard .steps .\" + step).addClass(\"active\");\n\n        if (this.$activePanel) {\n            this.$activePanel.removeClass(\"active\").addClass(\"inactive\");\n        }\n        $panel.addClass(\"active\").removeClass(\"inactive\");\n        this.$activePanel = $panel;\n\n        try {\n            var isCorrect = (window.location.hash == \"#\" + $panel.attr(\"id\"));\n            if ((window.location.hash == \"\" || window.location.hash == \"#\") && \"#\" + $panel.attr(\"id\") == this.firstPanel) {\n                isCorrect = true;\n            }\n            if (!isCorrect) {\n                console.log(\"change\");\n                window.location.hash = \"#\" + $panel.attr(\"id\").substring(5);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    getNextPanel() {\n        this.data = this.getWizardState();\n\n        switch (this.$activePanel.attr(\"id\")) {\n            case 'panelPurpose':\n                return \"#panelSingleMotion\";\n            case 'panelSingleMotion':\n                if (this.data.singleMotion == 1) {\n                    return \"#panelHasAmendments\";\n                } else {\n                    return \"#panelMotionWho\";\n                }\n            case 'panelMotionWho':\n                if (this.data.motionsInitiatedBy == 1) { // MOTION_INITIATED_ADMINS\n                    return \"#panelHasAmendments\";\n                } else {\n                    return \"#panelMotionDeadline\";\n                }\n            case 'panelMotionDeadline':\n                return \"#panelMotionScreening\";\n            case 'panelMotionScreening':\n                return \"#panelNeedsSupporters\";\n            case 'panelNeedsSupporters':\n                return \"#panelHasAmendments\";\n            case 'panelHasAmendments':\n                if (this.data.hasAmendments == 1) {\n                    return \"#panelAmendSinglePara\";\n                } else {\n                    return \"#panelComments\";\n                }\n            case 'panelAmendSinglePara':\n                return \"#panelAmendWho\";\n            case 'panelAmendWho':\n                if (this.data.amendmentInitiatedBy == 1) { // MOTION_INITIATED_ADMINS\n                    return \"#panelComments\";\n                } else {\n                    return \"#panelAmendDeadline\";\n                }\n            case 'panelAmendDeadline':\n                return \"#panelAmendScreening\";\n            case 'panelAmendScreening':\n                return \"#panelComments\";\n            case 'panelComments':\n                if (this.data.singleMotion == 1) {\n                    return \"#panelOpenNow\";\n                } else {\n                    return \"#panelAgenda\";\n                }\n            case 'panelAgenda':\n                return \"#panelOpenNow\";\n            case 'panelOpenNow':\n                return \"#panelSiteData\";\n        }\n    }\n\n    initEvents() {\n        var $form = this.$root;\n\n        this.$activePanel = null;\n        this.data = this.getWizardState();\n\n        $form.find(\"input\").change(() => {\n            this.data = this.getWizardState();\n        });\n        $form.find(\".radio-label input\").change(function () {\n            var $fieldset = $(this).parents(\"fieldset\").first();\n            $fieldset.find(\".radio-label\").removeClass(\"active\");\n            var $active = $fieldset.find(\".radio-label input:checked\");\n            $active.parents(\".radio-label\").first().addClass(\"active\");\n        }).trigger(\"change\");\n\n        $form.find(\"fieldset.wording input\").change(function () {\n            var wording = $form.find(\"fieldset.wording input:checked\").data(\"wording-name\");\n            $form.removeClass(\"wording_motion\").removeClass(\"wording_manifesto\").addClass(\"wording_\" + wording);\n        }).trigger(\"change\");\n\n        $form.find(\".input-group.date\").each(function () {\n            var $this = $(this);\n            $this.datetimepicker({\n                locale: $this.find(\"input\").data('locale')\n            });\n        });\n        $form.find(\".date.motionsDeadline\").on(\"dp.change\", function () {\n            $(\"input.motionsDeadlineExists\").prop(\"checked\", true).change();\n        });\n        $form.find(\".date.amendmentDeadline\").on(\"dp.change\", function () {\n            $(\"input.amendDeadlineExists\").prop(\"checked\", true).change();\n        });\n        $form.find(\"input.minSupporters\").change(function () {\n            $(\"input.needsSupporters\").prop(\"checked\", true).change();\n        });\n        $form.find(\"#siteSubdomain\").on(\"keyup change\", function () {\n            var $this = $(this),\n                subdomain = $this.val(),\n                $group = $this.parents(\".subdomainRow\").first(),\n                requesturl = $this.data(\"query-url\").replace(/SUBDOMAIN/, subdomain),\n                $err = $group.find(\".subdomainError\");\n\n            if (subdomain == \"\") {\n                $err.addClass(\"hidden\");\n                $group.removeClass(\"has-error\").removeClass(\"has-success\");\n                return;\n            }\n            this.$.get(requesturl, function (ret) {\n                if (ret['available']) {\n                    $err.addClass(\"hidden\");\n                    $group.removeClass(\"has-error\");\n                    $form.find(\"button[type=submit]\").prop(\"disabled\", false);\n                    if (ret['subdomain'] == $this.val()) {\n                        $group.addClass(\"has-success\");\n                    }\n                } else {\n                    $err.removeClass(\"hidden\");\n                    $err.html($err.data(\"template\").replace(/%SUBDOMAIN%/, ret['subdomain']));\n                    $group.removeClass(\"has-success\");\n                    if (ret['subdomain'] == $this.val()) {\n                        $form.find(\"button[type=submit]\").prop(\"disabled\", true);\n                        $group.addClass(\"has-error\");\n                    }\n                }\n            });\n        });\n        $form.find(\"#siteTitle\").on(\"keyup change\", function () {\n            if ($(this).val().length >= 5) {\n                $(this).parents(\".form-group\").first().addClass(\"has-success\");\n            } else {\n                $(this).parents(\".form-group\").first().removeClass(\"has-success\");\n            }\n        });\n        $form.find(\"#siteOrganization\").on(\"keyup change\", function () {\n            if ($(this).val().length >= 5) {\n                $(this).parents(\".form-group\").first().addClass(\"has-success\");\n            } else {\n                $(this).parents(\".form-group\").first().removeClass(\"has-success\");\n            }\n        });\n\n        var obj = this;\n        $form.find(\".navigation .btn-next\").click(function (ev) {\n            if ($(this).attr(\"type\") == \"submit\") {\n                return;\n            }\n            ev.preventDefault();\n            obj.showPanel($(obj.getNextPanel()));\n        });\n        $form.find(\".navigation .btn-prev\").click(function (ev) {\n            ev.preventDefault();\n            if (window.location.hash != \"\") {\n                window.history.back();\n            }\n        });\n        $form.submit(function (ev) {\n\n        });\n\n        $(window).on(\"hashchange\", (ev) => {\n            ev.preventDefault();\n            var hash;\n            if (window.location.hash.substring(1) == 0) {\n                hash = this.firstPanel;\n            } else {\n                hash = \"#panel\" + window.location.hash.substring(1);\n            }\n            var $panel = $(hash);\n            if ($panel.length > 0) {\n                this.showPanel($panel);\n            }\n        });\n\n        $form.find(\".step-pane\").addClass(\"inactive\");\n        this.showPanel($(this.firstPanel));\n    }\n\n    constructor($, $root) {\n        this.$ = $;\n        this.firstPanel = \"#panelPurpose\";\n        this.$root = $root;\n        this.multisite = ($(\"#SiteCreateWizard\").data(\"multisite\") == 1);\n        console.log(\"Multisite:\", this.multisite);\n        this.initEvents();\n    }\n}\n\n"],"sourceRoot":"/source/"}