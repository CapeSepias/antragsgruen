<?php

/**
 * This is the model base class for the table "antrag".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Antrag".
 *
 * Columns in table "antrag" available as properties of the model,
 * followed by relations of table "antrag" available as properties of the model.
 *
 * @property integer $id
 * @property integer $veranstaltung
 * @property integer $abgeleitet_von
 * @property integer $typ
 * @property string $name
 * @property string $revision_name
 * @property string $datum_einreichung
 * @property string $datum_beschluss
 * @property string $text
 * @property string $begruendung
 * @property integer $status
 * @property string $status_string
 * @property integer $cache_anzahl_zeilen
 * @property integer $cache_anzahl_absaetze
 *
 * @property Aenderungsantrag[] $aenderungsantraege
 * @property Veranstaltung $veranstaltung0
 * @property Antrag $abgeleitetVon
 * @property Antrag[] $antraege
 * @property Person[] $abonnenten
 * @property AntragKommentar[] $antragKommentare
 * @property AntragUnterstuetzer[] $antragUnterstuetzer
 */
abstract class BaseAntrag extends IAntrag {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'antrag';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Antrag|Antraege', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('veranstaltung, name, revision_name, datum_einreichung, status', 'required'),
			array('veranstaltung, abgeleitet_von, typ, status', 'numerical', 'integerOnly'=>true),
			array('revision_name', 'length', 'max'=>50),
			array('datum_beschluss', 'length', 'max'=>45),
			array('status_string', 'length', 'max'=>55),
			array('text, begruendung', 'safe'),
			array('abgeleitet_von, typ, datum_beschluss, text, begruendung, status, status_string', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, veranstaltung, abgeleitet_von, typ, name, revision_name, datum_einreichung, datum_beschluss, text, begruendung, status, cache_anzahl_zeilen, cache_anzahl_, status_string', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'aenderungsantraege' => array(self::HAS_MANY, 'Aenderungsantrag', 'antrag_id'),
			'veranstaltung0' => array(self::BELONGS_TO, 'Veranstaltung', 'veranstaltung'),
			'abgeleitetVon' => array(self::BELONGS_TO, 'Antrag', 'abgeleitet_von'),
			'antraege' => array(self::HAS_MANY, 'Antrag', 'abgeleitet_von'),
			'abonnenten' => array(self::MANY_MANY, 'Person', 'antrag_abo(antrag_id, abonnent_id)'),
			'antragKommentare' => array(self::HAS_MANY, 'AntragKommentar', 'antrag_id'),
			'antragUnterstuetzer' => array(
				self::HAS_MANY, 'AntragUnterstuetzer', 'antrag_id',
				'order' => "antragUnterstuetzer.position ASC"
			),
		);
	}

	public function pivotModels() {
		return array(
			'abonnenten' => 'AntragAbo',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'veranstaltung' => null,
			'abgeleitet_von' => null,
			'typ' => Yii::t('app', 'Typ'),
			'name' => Yii::t('app', 'Name'),
			'revision_name' => Yii::t('app', 'Revision Name'),
			'datum_einreichung' => Yii::t('app', 'Datum Einreichung'),
			'datum_beschluss' => Yii::t('app', 'Datum Beschluss'),
			'text' => Yii::t('app', 'Text'),
			'begruendung' => Yii::t('app', 'Begruendung'),
			'status' => Yii::t('app', 'Status'),
			'status_string' => Yii::t('app', 'Status String'),
			'aenderungsantraege' => null,
			'veranstaltung0' => null,
			'abgeleitetVon' => null,
			'antraege' => null,
			'abonnenten' => null,
			'antragKommentare' => null,
			'antragUnterstuetzer' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('veranstaltung', $this->veranstaltung);
		$criteria->compare('abgeleitet_von', $this->abgeleitet_von);
		$criteria->compare('typ', $this->typ);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('revision_name', $this->revision_name, true);
		$criteria->compare('datum_einreichung', $this->datum_einreichung, true);
		$criteria->compare('datum_beschluss', $this->datum_beschluss, true);
		$criteria->compare('text', $this->text, true);
		$criteria->compare('begruendung', $this->begruendung, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('status_string', $this->status_string, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}