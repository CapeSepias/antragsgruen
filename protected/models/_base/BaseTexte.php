<?php

/**
 * This is the model base class for the table "texte".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Texte".
 *
 * Columns in table "texte" available as properties of the model,
 * followed by relations of table "texte" available as properties of the model.
 *
 * @property integer $id
 * @property string $text_id
 * @property integer $veranstaltung_id
 * @property string $text
 * @property string $edit_datum
 * @property integer $edit_person
 *
 * @property Person $editPerson
 * @property Veranstaltung $veranstaltung
 */
abstract class BaseTexte extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'texte';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Texte|Textes', $n);
	}

	public static function representingColumn() {
		return 'text_id';
	}

	public function rules() {
		return array(
			array('text_id, edit_person', 'required'),
			array('veranstaltung_id, edit_person', 'numerical', 'integerOnly'=>true),
			array('text_id', 'length', 'max'=>20),
			array('text, edit_datum', 'safe'),
			array('veranstaltung_id, text, edit_datum', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, text_id, veranstaltung_id, text, edit_datum, edit_person', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'editPerson' => array(self::BELONGS_TO, 'Person', 'edit_person'),
			'veranstaltung' => array(self::BELONGS_TO, 'Veranstaltung', 'veranstaltung_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'text_id' => Yii::t('app', 'Text'),
			'veranstaltung_id' => null,
			'text' => Yii::t('app', 'Text'),
			'edit_datum' => Yii::t('app', 'Edit Datum'),
			'edit_person' => null,
			'editPerson' => null,
			'veranstaltung' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('text_id', $this->text_id, true);
		$criteria->compare('veranstaltung_id', $this->veranstaltung_id);
		$criteria->compare('text', $this->text, true);
		$criteria->compare('edit_datum', $this->edit_datum, true);
		$criteria->compare('edit_person', $this->edit_person);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}